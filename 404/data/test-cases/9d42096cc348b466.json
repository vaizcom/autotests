{"uid":"9d42096cc348b466","name":"test_invalid_document_id[not_found]","fullName":"tests.test_backend.document.test_get_siblings#test_invalid_document_id","historyId":"10bbbd17774788c583c6b73b3bffe763","time":{"start":1761912192905,"stop":1761912192905,"duration":0},"description":"\n    Негативные сценарии: разные варианты некорректного document_id.\n    ","descriptionHtml":"<pre><code>Негативные сценарии: разные варианты некорректного document_id.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @pytest.fixture(scope='function')\n    def space_id_function(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:228: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"space_id_function","time":{"start":1761912192905,"stop":1761912193033,"duration":128},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 228, in space_id_function\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_siblings"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_siblings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"400"},{"name":"fake_id","value":"'000000000000000000000000'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":54},"items":[{"uid":"ea0bfb6b380f8590","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/ea0bfb6b380f8590","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911306364,"stop":1761911306364,"duration":0}},{"uid":"4a4f1942d586b5f0","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/4a4f1942d586b5f0","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910916716,"stop":1761910916716,"duration":0}},{"uid":"e26067b110172bf9","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/e26067b110172bf9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910617613,"stop":1761910617613,"duration":0}},{"uid":"12d9f4c94efaf363","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/12d9f4c94efaf363","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910011330,"stop":1761910011330,"duration":0}},{"uid":"5ddb4d8772a5db38","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/5ddb4d8772a5db38","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900042401,"stop":1761900042401,"duration":0}},{"uid":"1e3cf9bb96fbdc22","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/1e3cf9bb96fbdc22","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835062014,"stop":1761835062014,"duration":0}},{"uid":"768e32f2374fce32","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/768e32f2374fce32","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834648274,"stop":1761834648274,"duration":0}},{"uid":"aa0fca84120f8616","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/aa0fca84120f8616","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833484186,"stop":1761833484186,"duration":0}},{"uid":"5183f3026348915c","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/5183f3026348915c","status":"passed","time":{"start":1761821807071,"stop":1761821807410,"duration":339}},{"uid":"49c5bbe9c8fcfde2","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/49c5bbe9c8fcfde2","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818772200,"stop":1761818772200,"duration":0}},{"uid":"de116503c9ac7ed4","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/de116503c9ac7ed4","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748635058,"stop":1761748635058,"duration":0}},{"uid":"f48d6c261ba663d7","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/f48d6c261ba663d7","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747912349,"stop":1761747912349,"duration":0}},{"uid":"b2f93e6672d5d879","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/b2f93e6672d5d879","status":"passed","time":{"start":1761747010798,"stop":1761747011267,"duration":469}},{"uid":"f430188ae5adc8fe","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/f430188ae5adc8fe","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745743157,"stop":1761745743157,"duration":0}},{"uid":"38a1df941fce5b5","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/38a1df941fce5b5","status":"passed","time":{"start":1761576834054,"stop":1761576834463,"duration":409}},{"uid":"a9a4baca2a04aa89","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/a9a4baca2a04aa89","status":"passed","time":{"start":1761557459507,"stop":1761557459818,"duration":311}},{"uid":"8c121e4803977ab2","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/8c121e4803977ab2","status":"passed","time":{"start":1761308678700,"stop":1761308679012,"duration":312}},{"uid":"21947f56ebcadc15","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/21947f56ebcadc15","status":"passed","time":{"start":1761306845145,"stop":1761306845529,"duration":384}},{"uid":"4028f57594a7238a","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/4028f57594a7238a","status":"passed","time":{"start":1761137142326,"stop":1761137142687,"duration":361}},{"uid":"4d579a616d5be6d3","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/4d579a616d5be6d3","status":"passed","time":{"start":1761135835600,"stop":1761135835974,"duration":374}}]},"tags":["backend"]},"source":"9d42096cc348b466.json","parameterValues":["400","'000000000000000000000000'"]}