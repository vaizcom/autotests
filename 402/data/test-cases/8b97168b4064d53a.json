{"uid":"8b97168b4064d53a","name":"test_document_kind_and_id[wrong kind]","fullName":"tests.test_backend.document.test_create_document#test_document_kind_and_id","historyId":"bfe6b4aa9a06971d9ae2c54d2a20c85b","time":{"start":1761910911886,"stop":1761910911886,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f1c6962ef90>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910792963,"stop":1761910793391,"duration":428},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761910801404,"stop":1761910801539,"duration":135},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_create_document"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2545-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_create_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"400"},{"name":"get_fixture","value":"'temp_project'"},{"name":"kind","value":"'WrongKind'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":52},"items":[{"uid":"810dc95cace1894f","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/810dc95cace1894f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910613746,"stop":1761910613746,"duration":0}},{"uid":"159846d803e047ff","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/159846d803e047ff","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910005608,"stop":1761910005608,"duration":0}},{"uid":"fe43d87131a1a55d","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/fe43d87131a1a55d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900037097,"stop":1761900037097,"duration":0}},{"uid":"f922ec6ad7273ec0","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/f922ec6ad7273ec0","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835057710,"stop":1761835057710,"duration":0}},{"uid":"1ec61cf7e9234634","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/1ec61cf7e9234634","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834642204,"stop":1761834642204,"duration":0}},{"uid":"c00c3e9d90adc28c","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/c00c3e9d90adc28c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833478313,"stop":1761833478313,"duration":0}},{"uid":"b0b8f1b0e88a84af","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/b0b8f1b0e88a84af","status":"passed","time":{"start":1761821718867,"stop":1761821719049,"duration":182}},{"uid":"ae74787c15785362","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/ae74787c15785362","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818766580,"stop":1761818766580,"duration":0}},{"uid":"14c9f2de7aacbe71","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/14c9f2de7aacbe71","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748630364,"stop":1761748630364,"duration":0}},{"uid":"eee683b77f3b4ba6","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/eee683b77f3b4ba6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747905907,"stop":1761747905907,"duration":0}},{"uid":"b26a6a7619d257a1","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/b26a6a7619d257a1","status":"passed","time":{"start":1761746884493,"stop":1761746884785,"duration":292}},{"uid":"b6659de0dbf6fc81","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/b6659de0dbf6fc81","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745738384,"stop":1761745738384,"duration":0}},{"uid":"7ce52537ab157fb7","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/7ce52537ab157fb7","status":"passed","time":{"start":1761576718396,"stop":1761576718619,"duration":223}},{"uid":"70cad8b488a23293","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/70cad8b488a23293","status":"passed","time":{"start":1761557368373,"stop":1761557368560,"duration":187}},{"uid":"472e8641f8ea6fa8","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/472e8641f8ea6fa8","status":"passed","time":{"start":1761308592937,"stop":1761308593135,"duration":198}},{"uid":"b9cbe5a85415c803","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/b9cbe5a85415c803","status":"passed","time":{"start":1761306754021,"stop":1761306754238,"duration":217}},{"uid":"fabc5488d9c09f4c","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/fabc5488d9c09f4c","status":"passed","time":{"start":1761137047086,"stop":1761137047301,"duration":215}},{"uid":"b130f387dd9f8391","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/b130f387dd9f8391","status":"passed","time":{"start":1761135724966,"stop":1761135725224,"duration":258}},{"uid":"89e4e6d23b21d3a","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/89e4e6d23b21d3a","status":"passed","time":{"start":1761134151007,"stop":1761134151202,"duration":195}},{"uid":"b2d967e3ae577cdf","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/b2d967e3ae577cdf","status":"passed","time":{"start":1761128513592,"stop":1761128513840,"duration":248}}]},"tags":["backend"]},"source":"8b97168b4064d53a.json","parameterValues":["400","'temp_project'","'WrongKind'"]}