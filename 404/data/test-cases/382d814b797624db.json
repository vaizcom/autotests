{"uid":"382d814b797624db","name":"test_deeply_nested_parents[member]","fullName":"tests.test_backend.document.test_get_siblings#test_deeply_nested_parents","historyId":"80cc4bc107563da11f2389f3cd1b1f1e","time":{"start":1761912192308,"stop":1761912192308,"duration":0},"description":"\n    Глубокая вложенность: проверяем цепочку parents.\n    ","descriptionHtml":"<pre><code>Глубокая вложенность: проверяем цепочку parents.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @pytest.fixture(scope='function')\n    def space_id_function(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:228: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"space_id_function","time":{"start":1761912192309,"stop":1761912192446,"duration":137},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 228, in space_id_function\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"feature","value":"Document Siblings"},{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_siblings"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_siblings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"kind","value":"'Member'"},{"name":"kind_id_fixture","value":"'member_id_function'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":54},"items":[{"uid":"96c457351c94f28","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/96c457351c94f28","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911305593,"stop":1761911305593,"duration":0}},{"uid":"acb706be27976c15","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/acb706be27976c15","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910916028,"stop":1761910916028,"duration":0}},{"uid":"5306d51c514406c","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/5306d51c514406c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910617084,"stop":1761910617084,"duration":0}},{"uid":"416b645456bc7c55","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/416b645456bc7c55","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910010571,"stop":1761910010571,"duration":0}},{"uid":"71cd7b066ef55f9b","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/71cd7b066ef55f9b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900041641,"stop":1761900041641,"duration":0}},{"uid":"8f5a4f610aab4057","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/8f5a4f610aab4057","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835061463,"stop":1761835061463,"duration":0}},{"uid":"1693cada87e26876","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/1693cada87e26876","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834647059,"stop":1761834647059,"duration":0}},{"uid":"43dd14573e82f76f","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/43dd14573e82f76f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833483382,"stop":1761833483382,"duration":0}},{"uid":"d87486c2d320eea7","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/d87486c2d320eea7","status":"passed","time":{"start":1761821793046,"stop":1761821794504,"duration":1458}},{"uid":"f593c936f2904b94","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/f593c936f2904b94","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818771456,"stop":1761818771456,"duration":0}},{"uid":"d8d006858c92f1c5","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/d8d006858c92f1c5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748634447,"stop":1761748634447,"duration":0}},{"uid":"9d050029895bc25b","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/9d050029895bc25b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747911587,"stop":1761747911587,"duration":0}},{"uid":"84855a6fafb9cb81","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/84855a6fafb9cb81","status":"passed","time":{"start":1761746990583,"stop":1761746993415,"duration":2832}},{"uid":"f0d8eeebd02b3b3d","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/f0d8eeebd02b3b3d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745742597,"stop":1761745742597,"duration":0}},{"uid":"a61e46ebed32298a","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/a61e46ebed32298a","status":"passed","time":{"start":1761576816918,"stop":1761576818630,"duration":1712}},{"uid":"8e89926dca731fd4","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/8e89926dca731fd4","status":"passed","time":{"start":1761557446251,"stop":1761557447710,"duration":1459}},{"uid":"7a4167ae55cf5c84","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/7a4167ae55cf5c84","status":"passed","time":{"start":1761308665181,"stop":1761308666621,"duration":1440}},{"uid":"20c96fd6835ce45c","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/20c96fd6835ce45c","status":"passed","time":{"start":1761306830407,"stop":1761306832010,"duration":1603}},{"uid":"717e380ef173ccdd","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/717e380ef173ccdd","status":"passed","time":{"start":1761137128321,"stop":1761137130043,"duration":1722}},{"uid":"308c872f03d47e45","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/308c872f03d47e45","status":"passed","time":{"start":1761135818417,"stop":1761135820290,"duration":1873}}]},"tags":["backend"]},"source":"382d814b797624db.json","parameterValues":["'Member'","'member_id_function'"]}