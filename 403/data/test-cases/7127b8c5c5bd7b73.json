{"uid":"7127b8c5c5bd7b73","name":"test_get_ydocument_success[project]","fullName":"tests.test_backend.document.test_get_y_document#test_get_ydocument_success","historyId":"5d7031d36b8441516acd708ebd855001","time":{"start":1761911307836,"stop":1761911307836,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fbc912cb790>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761911162887,"stop":1761911162887,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761911162888,"stop":1761911163517,"duration":629},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761911172524,"stop":1761911172705,"duration":181},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_y_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_y_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"kind","value":"'Project'"},{"name":"kind_id_fixture","value":"'temp_project'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":53},"items":[{"uid":"ea51f32ed97ab110","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/ea51f32ed97ab110","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910917692,"stop":1761910917692,"duration":0}},{"uid":"bcda60ae94ead922","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/bcda60ae94ead922","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910619334,"stop":1761910619334,"duration":0}},{"uid":"80df2e90ced17c8e","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/80df2e90ced17c8e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910012817,"stop":1761910012817,"duration":0}},{"uid":"9df186feb1d9b20","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/9df186feb1d9b20","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900043910,"stop":1761900043910,"duration":0}},{"uid":"a5be6e6140bce18f","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/a5be6e6140bce18f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835063047,"stop":1761835063047,"duration":0}},{"uid":"504517df24598a03","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/504517df24598a03","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834649851,"stop":1761834649851,"duration":0}},{"uid":"7b0a9a3507b6969e","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/7b0a9a3507b6969e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833485791,"stop":1761833485791,"duration":0}},{"uid":"d34790fb4dee9e7b","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/d34790fb4dee9e7b","status":"passed","time":{"start":1761821820350,"stop":1761821820823,"duration":473}},{"uid":"46e823297d5c2b67","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/46e823297d5c2b67","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818773671,"stop":1761818773671,"duration":0}},{"uid":"4ea785dbd22d0acf","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/4ea785dbd22d0acf","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748636775,"stop":1761748636775,"duration":0}},{"uid":"4aadd1d5d9f7f0ce","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/4aadd1d5d9f7f0ce","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747913885,"stop":1761747913885,"duration":0}},{"uid":"3570b5efe6cc7ae9","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/3570b5efe6cc7ae9","status":"passed","time":{"start":1761747027709,"stop":1761747028368,"duration":659}},{"uid":"7903a902e96a1928","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/7903a902e96a1928","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745744195,"stop":1761745744195,"duration":0}},{"uid":"f5d39803a973a5fe","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/f5d39803a973a5fe","status":"passed","time":{"start":1761576850943,"stop":1761576851514,"duration":571}},{"uid":"99c865de8625d005","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/99c865de8625d005","status":"passed","time":{"start":1761557471567,"stop":1761557472029,"duration":462}},{"uid":"83520373206821b8","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/83520373206821b8","status":"passed","time":{"start":1761308689463,"stop":1761308689910,"duration":447}},{"uid":"a725457a26d74b53","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/a725457a26d74b53","status":"passed","time":{"start":1761306856678,"stop":1761306857136,"duration":458}},{"uid":"326ed5036af0773c","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/326ed5036af0773c","status":"passed","time":{"start":1761137154914,"stop":1761137155433,"duration":519}},{"uid":"63c36666648b9fb","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/63c36666648b9fb","status":"passed","time":{"start":1761135852924,"stop":1761135853481,"duration":557}},{"uid":"835907e4471d9541","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/835907e4471d9541","status":"passed","time":{"start":1761134262420,"stop":1761134262888,"duration":468}}]},"tags":["backend"]},"source":"7127b8c5c5bd7b73.json","parameterValues":["'Project'","'temp_project'"]}