{"uid":"7bfbd0bcf3ff9ff8","name":"test_get_recent_documents_ordering","fullName":"tests.test_backend.document.access_doc.test_get_recent_documents_access_by_roles#test_get_recent_documents_ordering","historyId":"0c898d02ec075a836662781c01ca5c00","time":{"start":1752738359663,"stop":1752738361999,"duration":2336},"description":"Проверяет сортировку документов в списке недавних (по дате создания, от новых к старым)","descriptionHtml":"<p>Проверяет сортировку документов в списке недавних (по дате создания, от новых к старым)</p>\n","status":"failed","statusMessage":"AssertionError: Неверный порядок документов\nassert ['6878a5cdfa5...5636d1dc38d4'] == ['6878aa38fa5...5636d1dc816d']\n  \n  At index 0 diff: '6878a5cdfa535636d1dc38a1' != '6878aa38fa535636d1dc81a4'\n  \n  Full diff:\n    [\n  -     '6878aa38fa535636d1dc81a4',\n  ?           ^^^              --\n  +     '6878a5cdfa535636d1dc38a1',\n  ?           ^^^            + +\n  -     '6878aa38fa535636d1dc8189',\n  ?           ^^^             ^^^\n  +     '6878a5cdfa535636d1dc38bb',\n  ?           ^^^            + ^^\n  -     '6878aa37fa535636d1dc816d',\n  ?           ^^^             --\n  +     '6878a5cefa535636d1dc38d4',\n  ?           ^^^            +  +\n    ]","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fcb69828910>\nmain_space = '6866309d85fb8d104544a61e'\nmain_project = '686672af85fb8d104544e798'\n\n    def test_get_recent_documents_ordering(owner_client, main_space, main_project):\n        \"\"\"Проверяет сортировку документов в списке недавних (по дате создания, от новых к старым)\"\"\"\n    \n        doc_ids = []\n        try:\n            with allure.step('Создание документов с паузой между созданием'):\n                for i in range(3):\n                    title = f'Doc {i} - {datetime.now().strftime(\"%H:%M:%S.%f\")}'\n                    create_resp = owner_client.post(\n                        **create_document_endpoint(\n                            kind='Project',\n                            kind_id=main_project,\n                            space_id=main_space,\n                            title=title\n                        )\n                    )\n                    assert create_resp.status_code == 200\n                    doc_ids.append(create_resp.json()['payload']['document']['_id'])\n    \n            with allure.step('Получение и проверка списка недавних документов'):\n                recent_resp = owner_client.post(**get_recent_documents_endpoint(space_id=main_space))\n                assert recent_resp.status_code == 200\n    \n                recent_docs = recent_resp.json()['payload']['recentDocuments']\n                recent_doc_ids = [doc['_id'] for doc in recent_docs[:3]]  # Берем первые 3 документа\n    \n                # Проверяем что порядок обратный (от новых к старым)\n>               assert recent_doc_ids == doc_ids[::-1], 'Неверный порядок документов'\nE               AssertionError: Неверный порядок документов\nE               assert ['6878a5cdfa5...5636d1dc38d4'] == ['6878aa38fa5...5636d1dc816d']\nE                 \nE                 At index 0 diff: '6878a5cdfa535636d1dc38a1' != '6878aa38fa535636d1dc81a4'\nE                 \nE                 Full diff:\nE                   [\nE                 -     '6878aa38fa535636d1dc81a4',\nE                 ?           ^^^              --\nE                 +     '6878a5cdfa535636d1dc38a1',\nE                 ?           ^^^            + +\nE                 -     '6878aa38fa535636d1dc8189',\nE                 ?           ^^^             ^^^\nE                 +     '6878a5cdfa535636d1dc38bb',\nE                 ?           ^^^            + ^^\nE                 -     '6878aa37fa535636d1dc816d',\nE                 ?           ^^^             --\nE                 +     '6878a5cefa535636d1dc38d4',\nE                 ?           ^^^            +  +\nE                   ]\n\ntests/test_backend/document/access_doc/test_get_recent_documents_access_by_roles.py:128: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"delete_output_dir","time":{"start":1752738136298,"stop":1752738136298,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1752738136298,"stop":1752738136298,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1752738136298,"stop":1752738137029,"duration":731},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1752738136298,"stop":1752738136298,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1752738136298,"stop":1752738136298,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1752738161209,"stop":1752738161520,"duration":311},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1752738161520,"stop":1752738162137,"duration":617},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_project","time":{"start":1752738167984,"stop":1752738168247,"duration":263},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"Проверяет сортировку документов в списке недавних (по дате создания, от новых к старым)","status":"failed","statusMessage":"AssertionError: Неверный порядок документов\nassert ['6878a5cdfa5...5636d1dc38d4'] == ['6878aa38fa5...5636d1dc816d']\n  \n  At index 0 diff: '6878a5cdfa535636d1dc38a1' != '6878aa38fa535636d1dc81a4'\n  \n  Full diff:\n    [\n  -     '6878aa38fa535636d1dc81a4',\n  ?           ^^^              --\n  +     '6878a5cdfa535636d1dc38a1',\n  ?           ^^^            + +\n  -     '6878aa38fa535636d1dc8189',\n  ?           ^^^             ^^^\n  +     '6878a5cdfa535636d1dc38bb',\n  ?           ^^^            + ^^\n  -     '6878aa37fa535636d1dc816d',\n  ?           ^^^             --\n  +     '6878a5cefa535636d1dc38d4',\n  ?           ^^^            +  +\n    ]","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fcb69828910>\nmain_space = '6866309d85fb8d104544a61e'\nmain_project = '686672af85fb8d104544e798'\n\n    def test_get_recent_documents_ordering(owner_client, main_space, main_project):\n        \"\"\"Проверяет сортировку документов в списке недавних (по дате создания, от новых к старым)\"\"\"\n    \n        doc_ids = []\n        try:\n            with allure.step('Создание документов с паузой между созданием'):\n                for i in range(3):\n                    title = f'Doc {i} - {datetime.now().strftime(\"%H:%M:%S.%f\")}'\n                    create_resp = owner_client.post(\n                        **create_document_endpoint(\n                            kind='Project',\n                            kind_id=main_project,\n                            space_id=main_space,\n                            title=title\n                        )\n                    )\n                    assert create_resp.status_code == 200\n                    doc_ids.append(create_resp.json()['payload']['document']['_id'])\n    \n            with allure.step('Получение и проверка списка недавних документов'):\n                recent_resp = owner_client.post(**get_recent_documents_endpoint(space_id=main_space))\n                assert recent_resp.status_code == 200\n    \n                recent_docs = recent_resp.json()['payload']['recentDocuments']\n                recent_doc_ids = [doc['_id'] for doc in recent_docs[:3]]  # Берем первые 3 документа\n    \n                # Проверяем что порядок обратный (от новых к старым)\n>               assert recent_doc_ids == doc_ids[::-1], 'Неверный порядок документов'\nE               AssertionError: Неверный порядок документов\nE               assert ['6878a5cdfa5...5636d1dc38d4'] == ['6878aa38fa5...5636d1dc816d']\nE                 \nE                 At index 0 diff: '6878a5cdfa535636d1dc38a1' != '6878aa38fa535636d1dc81a4'\nE                 \nE                 Full diff:\nE                   [\nE                 -     '6878aa38fa535636d1dc81a4',\nE                 ?           ^^^              --\nE                 +     '6878a5cdfa535636d1dc38a1',\nE                 ?           ^^^            + +\nE                 -     '6878aa38fa535636d1dc8189',\nE                 ?           ^^^             ^^^\nE                 +     '6878a5cdfa535636d1dc38bb',\nE                 ?           ^^^            + ^^\nE                 -     '6878aa37fa535636d1dc816d',\nE                 ?           ^^^             --\nE                 +     '6878a5cefa535636d1dc38d4',\nE                 ?           ^^^            +  +\nE                   ]\n\ntests/test_backend/document/access_doc/test_get_recent_documents_access_by_roles.py:128: AssertionError","steps":[{"name":"Создание документов с паузой между созданием","time":{"start":1752738359663,"stop":1752738360688,"duration":1025},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Получение и проверка списка недавних документов","time":{"start":1752738360688,"stop":1752738360975,"duration":287},"status":"failed","statusMessage":"AssertionError: Неверный порядок документов\nassert ['6878a5cdfa5...5636d1dc38d4'] == ['6878aa38fa5...5636d1dc816d']\n  \n  At index 0 diff: '6878a5cdfa535636d1dc38a1' != '6878aa38fa535636d1dc81a4'\n  \n  Full diff:\n    [\n  -     '6878aa38fa535636d1dc81a4',\n  ?           ^^^              --\n  +     '6878a5cdfa535636d1dc38a1',\n  ?           ^^^            + +\n  -     '6878aa38fa535636d1dc8189',\n  ?           ^^^             ^^^\n  +     '6878a5cdfa535636d1dc38bb',\n  ?           ^^^            + ^^\n  -     '6878aa37fa535636d1dc816d',\n  ?           ^^^             --\n  +     '6878a5cefa535636d1dc38d4',\n  ?           ^^^            +  +\n    ]\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/document/access_doc/test_get_recent_documents_access_by_roles.py\", line 128, in test_get_recent_documents_ordering\n    assert recent_doc_ids == doc_ids[::-1], 'Неверный порядок документов'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Архивация созданных документов","time":{"start":1752738360976,"stop":1752738361999,"duration":1023},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document.access_doc"},{"name":"suite","value":"test_get_recent_documents_access_by_roles"},{"name":"host","value":"pkrvmq0rgcvqdmg"},{"name":"thread","value":"2564-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.access_doc.test_get_recent_documents_access_by_roles"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["backend"]},"source":"7bfbd0bcf3ff9ff8.json","parameterValues":[]}