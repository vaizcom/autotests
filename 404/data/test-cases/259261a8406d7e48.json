{"uid":"259261a8406d7e48","name":"test_get_document_invalid_input[missing-id]","fullName":"tests.test_backend.document.test_get_document#test_get_document_invalid_input","historyId":"a5dceeafd89bed579c61e1113205f789","time":{"start":1761912190957,"stop":1761912190957,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761912080667,"stop":1761912081009,"duration":342},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"document_id","value":"None"},{"name":"expected_error_code","value":"'InvalidForm'"},{"name":"expected_status","value":"400"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":54},"items":[{"uid":"322f81de728821db","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/322f81de728821db","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911303867,"stop":1761911303867,"duration":0}},{"uid":"400b37ab7d4a38a3","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/400b37ab7d4a38a3","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910914600,"stop":1761910914600,"duration":0}},{"uid":"4f66919322299bcb","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/4f66919322299bcb","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910615751,"stop":1761910615751,"duration":0}},{"uid":"41f59c623858c65","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/41f59c623858c65","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910008814,"stop":1761910008814,"duration":0}},{"uid":"47f00a5251a8945b","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/47f00a5251a8945b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900039943,"stop":1761900039943,"duration":0}},{"uid":"1ec2fe630c672cad","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/1ec2fe630c672cad","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835060145,"stop":1761835060145,"duration":0}},{"uid":"77df2d76b7037814","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/77df2d76b7037814","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834645203,"stop":1761834645203,"duration":0}},{"uid":"445a52369aa7a63e","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/445a52369aa7a63e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833481620,"stop":1761833481620,"duration":0}},{"uid":"fc79a259265a2868","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/fc79a259265a2868","status":"passed","time":{"start":1761821751927,"stop":1761821752106,"duration":179}},{"uid":"706cb6f732c606e","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/706cb6f732c606e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818769734,"stop":1761818769734,"duration":0}},{"uid":"becccdb38e42a41f","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/becccdb38e42a41f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748633076,"stop":1761748633076,"duration":0}},{"uid":"d59baa6769440446","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/d59baa6769440446","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747909339,"stop":1761747909339,"duration":0}},{"uid":"28bd9c754a8b8d63","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/28bd9c754a8b8d63","status":"passed","time":{"start":1761746932521,"stop":1761746932816,"duration":295}},{"uid":"6c8c98e09ee82039","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/6c8c98e09ee82039","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745741219,"stop":1761745741219,"duration":0}},{"uid":"9493447f421df795","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/9493447f421df795","status":"passed","time":{"start":1761576765732,"stop":1761576765930,"duration":198}},{"uid":"6d870ed39f0b4497","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/6d870ed39f0b4497","status":"passed","time":{"start":1761557402300,"stop":1761557402545,"duration":245}},{"uid":"fdbdec72f39eaa76","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/fdbdec72f39eaa76","status":"passed","time":{"start":1761308623993,"stop":1761308624191,"duration":198}},{"uid":"872b7c3491f01256","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/872b7c3491f01256","status":"passed","time":{"start":1761306787994,"stop":1761306788206,"duration":212}},{"uid":"308f00766feb809","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/308f00766feb809","status":"passed","time":{"start":1761137083170,"stop":1761137083379,"duration":209}},{"uid":"2c678e6ddaf501c2","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/2c678e6ddaf501c2","status":"passed","time":{"start":1761135768605,"stop":1761135768848,"duration":243}}]},"tags":["backend"]},"source":"259261a8406d7e48.json","parameterValues":["None","'InvalidForm'","400"]}