{"uid":"dd3365d107d2cea7","name":"Создание документа - кейс с kind=Project и kindId (ожидается 200)","fullName":"tests.test_backend.document.test_create_document#test_document_kind_and_id","historyId":"139bb6fb5b5eba337fbebca9ca0e5edf","time":{"start":1752047997941,"stop":1752047997941,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f60ac7d5290>\ntemp_space = '686e2144dc7db2861c816ae1'\nrequest = <FixtureRequest for <Function test_document_kind_and_id[project]>>\nkind = 'Project', get_fixture = 'temp_project', expected_status = 200\n\n    @pytest.mark.parametrize(\n        'kind, get_fixture, expected_status',\n        [\n            ('Project', 'temp_project', 200),\n            ('Space', 'temp_space', 200),\n            ('Member', 'temp_member', 200),\n            ('WrongKind', 'temp_project', 400),\n            ('Project', 'nonexistent_id', 400),\n        ],\n        ids=['project', 'space', 'member', 'wrong kind', 'wrong id'],\n    )\n    def test_document_kind_and_id(owner_client, temp_space, request, kind, get_fixture, expected_status):\n        allure.dynamic.title(f'Создание документа - кейс с kind={kind} и kindId (ожидается {expected_status})')\n    \n>       kind_id = request.getfixturevalue(get_fixture) if get_fixture != 'nonexistent_id' else 'invalid_id'\n\ntests/test_backend/document/test_create_document.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:532: in getfixturevalue\n    fixturedef = self._get_active_fixturedef(argname)\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:617: in _get_active_fixturedef\n    fixturedef.execute(request=subrequest)\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:1071: in execute\n    raise exc.with_traceback(exc_tb)\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:1140: in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:891: in call_fixture_func\n    fixture_result = next(generator)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nowner_client = <tests.core.client.APIClient object at 0x7f60ac7d5290>\ntemp_space = '686e2144dc7db2861c816ae1'\n\n    @pytest.fixture(scope='session')\n    def temp_project(owner_client, temp_space):\n        \"\"\"Создаёт проект, который используется во всех тестах модуля.\"\"\"\n        name = generate_project_name()\n        slug = generate_slug()\n        common_kwargs = {'color': 'blue', 'icon': 'Dot', 'description': 'temporary project', 'space_id': temp_space}\n        response = owner_client.post(**create_project_endpoint(name=name, slug=slug, **common_kwargs))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:124: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1752047939816,"stop":1752047940592,"duration":776},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1752047940592,"stop":1752047941242,"duration":650},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"temp_space::0","time":{"start":1752048136220,"stop":1752048136701,"duration":481},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_create_document"},{"name":"host","value":"pkrvmfkh1xnbeme"},{"name":"thread","value":"2510-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_create_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"200"},{"name":"get_fixture","value":"'temp_project'"},{"name":"kind","value":"'Project'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":88,"unknown":0,"total":89},"items":[{"uid":"b4389e9ed0e73c00","reportUrl":"https://vaizcom.github.io/autotests/262//#testresult/b4389e9ed0e73c00","status":"passed","time":{"start":1752046688604,"stop":1752046688934,"duration":330}},{"uid":"2e4cb2cdfa043349","reportUrl":"https://vaizcom.github.io/autotests/261//#testresult/2e4cb2cdfa043349","status":"passed","time":{"start":1752044690901,"stop":1752044691246,"duration":345}},{"uid":"fc22bca23c989bd8","reportUrl":"https://vaizcom.github.io/autotests/260//#testresult/fc22bca23c989bd8","status":"passed","time":{"start":1751982696362,"stop":1751982696627,"duration":265}},{"uid":"aa61702340c5a4f5","reportUrl":"https://vaizcom.github.io/autotests/259//#testresult/aa61702340c5a4f5","status":"passed","time":{"start":1751976167910,"stop":1751976168272,"duration":362}},{"uid":"48f0b00bde708090","reportUrl":"https://vaizcom.github.io/autotests/258//#testresult/48f0b00bde708090","status":"passed","time":{"start":1751975122373,"stop":1751975122736,"duration":363}},{"uid":"8535ced992566578","reportUrl":"https://vaizcom.github.io/autotests/257//#testresult/8535ced992566578","status":"passed","time":{"start":1751973411014,"stop":1751973411319,"duration":305}},{"uid":"b7a406658910804b","reportUrl":"https://vaizcom.github.io/autotests/256//#testresult/b7a406658910804b","status":"passed","time":{"start":1751971683953,"stop":1751971684370,"duration":417}},{"uid":"cd5d715044eb0dc0","reportUrl":"https://vaizcom.github.io/autotests/255//#testresult/cd5d715044eb0dc0","status":"passed","time":{"start":1751965090379,"stop":1751965090716,"duration":337}},{"uid":"4a92f2ce3cb0cca3","reportUrl":"https://vaizcom.github.io/autotests/254//#testresult/4a92f2ce3cb0cca3","status":"passed","time":{"start":1751959180738,"stop":1751959181024,"duration":286}},{"uid":"e61746efc0796aca","reportUrl":"https://vaizcom.github.io/autotests/253//#testresult/e61746efc0796aca","status":"passed","time":{"start":1751897300500,"stop":1751897300881,"duration":381}},{"uid":"983246b0144b2c97","reportUrl":"https://vaizcom.github.io/autotests/252//#testresult/983246b0144b2c97","status":"passed","time":{"start":1751893989234,"stop":1751893989572,"duration":338}},{"uid":"ca3477727a91884d","reportUrl":"https://vaizcom.github.io/autotests/251//#testresult/ca3477727a91884d","status":"passed","time":{"start":1751889673259,"stop":1751889673596,"duration":337}},{"uid":"a774825078fb82c5","reportUrl":"https://vaizcom.github.io/autotests/250//#testresult/a774825078fb82c5","status":"passed","time":{"start":1751888350730,"stop":1751888351056,"duration":326}},{"uid":"943ecf9e0b186ad4","reportUrl":"https://vaizcom.github.io/autotests/249//#testresult/943ecf9e0b186ad4","status":"passed","time":{"start":1751887745916,"stop":1751887746250,"duration":334}},{"uid":"19441ff438b4153f","reportUrl":"https://vaizcom.github.io/autotests/248//#testresult/19441ff438b4153f","status":"passed","time":{"start":1751884521056,"stop":1751884521477,"duration":421}},{"uid":"ae3ab2c2498ebec8","reportUrl":"https://vaizcom.github.io/autotests/247//#testresult/ae3ab2c2498ebec8","status":"passed","time":{"start":1751882762493,"stop":1751882763465,"duration":972}},{"uid":"25251feac4c9ed78","reportUrl":"https://vaizcom.github.io/autotests/246//#testresult/25251feac4c9ed78","status":"passed","time":{"start":1751534999715,"stop":1751535000132,"duration":417}},{"uid":"bc1e2c7aee7ae67c","reportUrl":"https://vaizcom.github.io/autotests/245//#testresult/bc1e2c7aee7ae67c","status":"passed","time":{"start":1751525398282,"stop":1751525398626,"duration":344}},{"uid":"5e97ee6f3bd7fbd","reportUrl":"https://vaizcom.github.io/autotests/244//#testresult/5e97ee6f3bd7fbd","status":"passed","time":{"start":1751463820800,"stop":1751463821157,"duration":357}},{"uid":"8e36e45013db9f39","reportUrl":"https://vaizcom.github.io/autotests/243//#testresult/8e36e45013db9f39","status":"passed","time":{"start":1751463533184,"stop":1751463533515,"duration":331}}]},"tags":["backend"]},"source":"dd3365d107d2cea7.json","parameterValues":["200","'temp_project'","'Project'"]}