{"uid":"63d6ccd1dc6b7f40","name":"test_get_document_invalid_input[empty-string]","fullName":"tests.test_backend.document.test_get_document#test_get_document_invalid_input","historyId":"1d5d4a584eb0a48bbe054e3a52d35d64","time":{"start":1761921879949,"stop":1761921879949,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fc7d133bfd0>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761921763685,"stop":1761921763685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761921763685,"stop":1761921764117,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761921773063,"stop":1761921773182,"duration":119},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_document"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2549-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"document_id","value":"''"},{"name":"expected_error_code","value":"'InvalidForm'"},{"name":"expected_status","value":"400"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":55},"items":[{"uid":"5741c2f8ff206cbf","reportUrl":"https://vaizcom.github.io/autotests/404//#testresult/5741c2f8ff206cbf","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761912190963,"stop":1761912190963,"duration":0}},{"uid":"3c31bcbc67cac49a","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/3c31bcbc67cac49a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911303874,"stop":1761911303874,"duration":0}},{"uid":"3f224df0fadbfb81","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/3f224df0fadbfb81","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910914607,"stop":1761910914607,"duration":0}},{"uid":"348419936eecfc60","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/348419936eecfc60","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910615757,"stop":1761910615757,"duration":0}},{"uid":"58bb46caeda46a96","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/58bb46caeda46a96","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910008835,"stop":1761910008835,"duration":0}},{"uid":"3adf04142dc77850","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/3adf04142dc77850","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900039950,"stop":1761900039950,"duration":0}},{"uid":"24f7e4f537218777","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/24f7e4f537218777","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835060152,"stop":1761835060152,"duration":0}},{"uid":"749bf430f7e83a27","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/749bf430f7e83a27","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834645210,"stop":1761834645210,"duration":0}},{"uid":"f2dae1810ebe9014","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/f2dae1810ebe9014","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833481627,"stop":1761833481627,"duration":0}},{"uid":"4aa3bc752ffc1e99","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/4aa3bc752ffc1e99","status":"passed","time":{"start":1761821752109,"stop":1761821752287,"duration":178}},{"uid":"cb8e9127a826720c","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/cb8e9127a826720c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818769756,"stop":1761818769756,"duration":0}},{"uid":"37b3d8ef7a1d7f09","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/37b3d8ef7a1d7f09","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748633083,"stop":1761748633083,"duration":0}},{"uid":"a05a8382d0a0894d","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/a05a8382d0a0894d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747909346,"stop":1761747909346,"duration":0}},{"uid":"92f2e91bdcded806","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/92f2e91bdcded806","status":"passed","time":{"start":1761746932818,"stop":1761746933112,"duration":294}},{"uid":"3d08c02109193bc9","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/3d08c02109193bc9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745741225,"stop":1761745741225,"duration":0}},{"uid":"c2107148882c9348","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/c2107148882c9348","status":"passed","time":{"start":1761576765932,"stop":1761576766137,"duration":205}},{"uid":"ded9d57289322077","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/ded9d57289322077","status":"passed","time":{"start":1761557402547,"stop":1761557402769,"duration":222}},{"uid":"3b27d5f3614c67b8","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/3b27d5f3614c67b8","status":"passed","time":{"start":1761308624194,"stop":1761308624386,"duration":192}},{"uid":"819398aa19d83cb7","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/819398aa19d83cb7","status":"passed","time":{"start":1761306788209,"stop":1761306788411,"duration":202}},{"uid":"5e1f73b694bf315f","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/5e1f73b694bf315f","status":"passed","time":{"start":1761137083381,"stop":1761137083583,"duration":202}}]},"tags":["backend"]},"source":"63d6ccd1dc6b7f40.json","parameterValues":["''","'InvalidForm'","400"]}