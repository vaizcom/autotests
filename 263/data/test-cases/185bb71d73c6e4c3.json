{"uid":"185bb71d73c6e4c3","name":"Project: изолированность документов по kindId проектов","fullName":"tests.test_backend.document.test_get_documents#test_get_documents_isolation_by_kind_id","historyId":"aba8a174e7681683b54878c3943f9826","time":{"start":1752048051773,"stop":1752048051773,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f60ac7d5290>\ntemp_space = '686e2144dc7db2861c816ae1'\n\n    @pytest.fixture(scope='session')\n    def temp_project(owner_client, temp_space):\n        \"\"\"Создаёт проект, который используется во всех тестах модуля.\"\"\"\n        name = generate_project_name()\n        slug = generate_slug()\n        common_kwargs = {'color': 'blue', 'icon': 'Dot', 'description': 'temporary project', 'space_id': temp_space}\n        response = owner_client.post(**create_project_endpoint(name=name, slug=slug, **common_kwargs))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:124: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1752047939816,"stop":1752047940592,"duration":776},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1752047940592,"stop":1752047941242,"duration":650},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_project","time":{"start":1752047941242,"stop":1752047941963,"duration":721},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 124, in temp_project\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[{"name":"temp_space::0","time":{"start":1752048136220,"stop":1752048136701,"duration":481},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_documents"},{"name":"host","value":"pkrvmfkh1xnbeme"},{"name":"thread","value":"2510-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_documents"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":72,"unknown":0,"total":73},"items":[{"uid":"2d611d0fc809a34d","reportUrl":"https://vaizcom.github.io/autotests/262//#testresult/2d611d0fc809a34d","status":"passed","time":{"start":1752046744144,"stop":1752046745719,"duration":1575}},{"uid":"a54e1b7211652636","reportUrl":"https://vaizcom.github.io/autotests/261//#testresult/a54e1b7211652636","status":"passed","time":{"start":1752044758028,"stop":1752044759493,"duration":1465}},{"uid":"d47cbdcf7e3a678e","reportUrl":"https://vaizcom.github.io/autotests/260//#testresult/d47cbdcf7e3a678e","status":"passed","time":{"start":1751982743508,"stop":1751982744752,"duration":1244}},{"uid":"ca3fa5256bf57a2e","reportUrl":"https://vaizcom.github.io/autotests/259//#testresult/ca3fa5256bf57a2e","status":"passed","time":{"start":1751976224310,"stop":1751976225738,"duration":1428}},{"uid":"ee4afaf211351d6d","reportUrl":"https://vaizcom.github.io/autotests/258//#testresult/ee4afaf211351d6d","status":"passed","time":{"start":1751975176778,"stop":1751975178609,"duration":1831}},{"uid":"1bf82030144d6e4d","reportUrl":"https://vaizcom.github.io/autotests/257//#testresult/1bf82030144d6e4d","status":"passed","time":{"start":1751973462824,"stop":1751973464238,"duration":1414}},{"uid":"e18d4d550518d802","reportUrl":"https://vaizcom.github.io/autotests/256//#testresult/e18d4d550518d802","status":"passed","time":{"start":1751971739641,"stop":1751971741027,"duration":1386}},{"uid":"23959c203f8326c0","reportUrl":"https://vaizcom.github.io/autotests/255//#testresult/23959c203f8326c0","status":"passed","time":{"start":1751965145295,"stop":1751965146538,"duration":1243}},{"uid":"6acfd401f81e546e","reportUrl":"https://vaizcom.github.io/autotests/254//#testresult/6acfd401f81e546e","status":"passed","time":{"start":1751959232908,"stop":1751959234264,"duration":1356}},{"uid":"db55023812c853ad","reportUrl":"https://vaizcom.github.io/autotests/253//#testresult/db55023812c853ad","status":"passed","time":{"start":1751897360869,"stop":1751897363258,"duration":2389}},{"uid":"389067e6d169528f","reportUrl":"https://vaizcom.github.io/autotests/252//#testresult/389067e6d169528f","status":"passed","time":{"start":1751894053197,"stop":1751894054759,"duration":1562}},{"uid":"5270726127d20888","reportUrl":"https://vaizcom.github.io/autotests/251//#testresult/5270726127d20888","status":"passed","time":{"start":1751889735961,"stop":1751889737518,"duration":1557}},{"uid":"4a3f1d777475c7ec","reportUrl":"https://vaizcom.github.io/autotests/250//#testresult/4a3f1d777475c7ec","status":"passed","time":{"start":1751888411666,"stop":1751888413141,"duration":1475}},{"uid":"e3bf2a744e85d998","reportUrl":"https://vaizcom.github.io/autotests/249//#testresult/e3bf2a744e85d998","status":"passed","time":{"start":1751887807259,"stop":1751887808920,"duration":1661}},{"uid":"e5a76ba980dee7fe","reportUrl":"https://vaizcom.github.io/autotests/248//#testresult/e5a76ba980dee7fe","status":"passed","time":{"start":1751884576869,"stop":1751884578542,"duration":1673}},{"uid":"5da6a03031233fb0","reportUrl":"https://vaizcom.github.io/autotests/247//#testresult/5da6a03031233fb0","status":"passed","time":{"start":1751882865582,"stop":1751882867923,"duration":2341}},{"uid":"cbe55889a6a053fc","reportUrl":"https://vaizcom.github.io/autotests/246//#testresult/cbe55889a6a053fc","status":"passed","time":{"start":1751535065608,"stop":1751535067271,"duration":1663}},{"uid":"82da0fa38ea9c82d","reportUrl":"https://vaizcom.github.io/autotests/245//#testresult/82da0fa38ea9c82d","status":"passed","time":{"start":1751525478467,"stop":1751525480999,"duration":2532}},{"uid":"f3db98a438afe4d8","reportUrl":"https://vaizcom.github.io/autotests/244//#testresult/f3db98a438afe4d8","status":"passed","time":{"start":1751463875952,"stop":1751463877391,"duration":1439}},{"uid":"b06849e786a65b96","reportUrl":"https://vaizcom.github.io/autotests/243//#testresult/b06849e786a65b96","status":"passed","time":{"start":1751463594368,"stop":1751463595842,"duration":1474}}]},"tags":["backend"]},"source":"185bb71d73c6e4c3.json","parameterValues":[]}