{"uid":"58079179474177cc","name":"test_get_documents[space]","fullName":"tests.test_backend.document.test_get_documents#test_get_documents","historyId":"f20988ce23393700adba08998099b2aa","time":{"start":1761921880030,"stop":1761921880030,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fc7d133bfd0>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761921763685,"stop":1761921763685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761921763685,"stop":1761921764117,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761921773063,"stop":1761921773182,"duration":119},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_documents"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2549-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_documents"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"fixture_name","value":"'temp_space'"},{"name":"kind","value":"'Space'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":16,"broken":0,"skipped":0,"passed":39,"unknown":0,"total":55},"items":[{"uid":"22e68bb20ff9ee8d","reportUrl":"https://vaizcom.github.io/autotests/404//#testresult/22e68bb20ff9ee8d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761912191043,"stop":1761912191043,"duration":0}},{"uid":"528cba4593c91490","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/528cba4593c91490","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911303954,"stop":1761911303954,"duration":0}},{"uid":"1714d8d72a64a16","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/1714d8d72a64a16","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910914688,"stop":1761910914688,"duration":0}},{"uid":"8eb319e05ed1b195","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/8eb319e05ed1b195","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910615839,"stop":1761910615839,"duration":0}},{"uid":"30564ba070cf864d","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/30564ba070cf864d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910008915,"stop":1761910008915,"duration":0}},{"uid":"3ff0b54b92847aa3","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/3ff0b54b92847aa3","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900040030,"stop":1761900040030,"duration":0}},{"uid":"63c25ede4724941c","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/63c25ede4724941c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835060233,"stop":1761835060233,"duration":0}},{"uid":"1f92283f84ee1c14","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/1f92283f84ee1c14","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834645293,"stop":1761834645293,"duration":0}},{"uid":"a9c0004d430fd255","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/a9c0004d430fd255","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833481702,"stop":1761833481702,"duration":0}},{"uid":"5be25698b10aa14d","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/5be25698b10aa14d","status":"passed","time":{"start":1761821757435,"stop":1761821757847,"duration":412}},{"uid":"bfeb2c7e0e726a97","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/bfeb2c7e0e726a97","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818769836,"stop":1761818769836,"duration":0}},{"uid":"4a9400cbaf54a9ff","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/4a9400cbaf54a9ff","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748633162,"stop":1761748633162,"duration":0}},{"uid":"3e1693836279a378","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/3e1693836279a378","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747909426,"stop":1761747909426,"duration":0}},{"uid":"f92a7c2e3c0a7c85","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/f92a7c2e3c0a7c85","status":"passed","time":{"start":1761746941537,"stop":1761746943424,"duration":1887}},{"uid":"213368d3e68901df","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/213368d3e68901df","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745741305,"stop":1761745741305,"duration":0}},{"uid":"67dc42b791b1ea06","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/67dc42b791b1ea06","status":"passed","time":{"start":1761576771734,"stop":1761576773293,"duration":1559}},{"uid":"faaab386fff067fb","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/faaab386fff067fb","status":"passed","time":{"start":1761557409609,"stop":1761557410828,"duration":1219}},{"uid":"4f5790530410c03a","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/4f5790530410c03a","status":"passed","time":{"start":1761308629821,"stop":1761308631211,"duration":1390}},{"uid":"121dad57acaaa7e6","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/121dad57acaaa7e6","status":"passed","time":{"start":1761306793837,"stop":1761306794307,"duration":470}},{"uid":"122b7870760c034c","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/122b7870760c034c","status":"passed","time":{"start":1761137089281,"stop":1761137090789,"duration":1508}}]},"tags":["backend"]},"source":"58079179474177cc.json","parameterValues":["'temp_space'","'Space'"]}