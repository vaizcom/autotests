{"uid":"e875981b94440e62","name":"test_edit_document_title_length[exceed_max-member]","fullName":"tests.test_backend.document.test_edit_document#test_edit_document_title_length","historyId":"387adbb5d4a3a3579a163c700985de52","time":{"start":1761910615583,"stop":1761910615583,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fce4b119550>\n\n    @pytest.fixture(scope='function')\n    def space_id_function(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:228: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910495818,"stop":1761910495819,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910495819,"stop":1761910496047,"duration":228},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"space_id_function","time":{"start":1761910615584,"stop":1761910615698,"duration":114},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 228, in space_id_function\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_edit_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_edit_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"400"},{"name":"kind","value":"'Member'"},{"name":"kind_id_fixture","value":"'member_id_function'"},{"name":"length","value":"2049"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":51},"items":[{"uid":"6e5461953961c80a","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/6e5461953961c80a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910008603,"stop":1761910008603,"duration":0}},{"uid":"d899f2c1685dff23","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/d899f2c1685dff23","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900039723,"stop":1761900039723,"duration":0}},{"uid":"511a070ef1e4097d","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/511a070ef1e4097d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835059976,"stop":1761835059976,"duration":0}},{"uid":"b37a5805b8cf80b2","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/b37a5805b8cf80b2","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834644978,"stop":1761834644978,"duration":0}},{"uid":"14d7ba6fef8467ba","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/14d7ba6fef8467ba","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833481371,"stop":1761833481371,"duration":0}},{"uid":"7f4d83a623a54323","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/7f4d83a623a54323","status":"passed","time":{"start":1761821749468,"stop":1761821750224,"duration":756}},{"uid":"9b72be3b1d8cf3b5","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/9b72be3b1d8cf3b5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818769509,"stop":1761818769509,"duration":0}},{"uid":"9b675dc4c99d8cae","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/9b675dc4c99d8cae","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748632923,"stop":1761748632923,"duration":0}},{"uid":"eab47363e3f2ec56","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/eab47363e3f2ec56","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747909128,"stop":1761747909128,"duration":0}},{"uid":"5dc94eca0bb57c28","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/5dc94eca0bb57c28","status":"passed","time":{"start":1761746928890,"stop":1761746929912,"duration":1022}},{"uid":"f6c4c33674b999ab","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/f6c4c33674b999ab","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745741058,"stop":1761745741058,"duration":0}},{"uid":"d4314e050a136c33","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/d4314e050a136c33","status":"passed","time":{"start":1761576762003,"stop":1761576762901,"duration":898}},{"uid":"9f10bb762e9e4adc","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/9f10bb762e9e4adc","status":"passed","time":{"start":1761557398969,"stop":1761557399780,"duration":811}},{"uid":"cc020fb4a9d52e4c","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/cc020fb4a9d52e4c","status":"passed","time":{"start":1761308621378,"stop":1761308622221,"duration":843}},{"uid":"309450f959a8bb2e","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/309450f959a8bb2e","status":"passed","time":{"start":1761306785073,"stop":1761306786024,"duration":951}},{"uid":"8a95ac967ef56013","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/8a95ac967ef56013","status":"passed","time":{"start":1761137079519,"stop":1761137080827,"duration":1308}},{"uid":"57183651228b9ad0","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/57183651228b9ad0","status":"passed","time":{"start":1761135764671,"stop":1761135766340,"duration":1669}},{"uid":"90cbcfb82dbde923","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/90cbcfb82dbde923","status":"passed","time":{"start":1761134185895,"stop":1761134186778,"duration":883}},{"uid":"499f4b72684dea43","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/499f4b72684dea43","status":"passed","time":{"start":1761128558243,"stop":1761128559325,"duration":1082}},{"uid":"2f5ce57b7093e0a7","reportUrl":"https://vaizcom.github.io/autotests/383//#testresult/2f5ce57b7093e0a7","status":"passed","time":{"start":1761124663823,"stop":1761124664832,"duration":1009}}]},"tags":["backend"]},"source":"e875981b94440e62.json","parameterValues":["400","'Member'","'member_id_function'","2049"]}