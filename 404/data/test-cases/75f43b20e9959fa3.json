{"uid":"75f43b20e9959fa3","name":"Создание кастомного поля типа: Date","fullName":"tests.test_backend.board.test_create_board#test_create_custom_field_of_each_type","historyId":"d16011ed7f1c2fc76d1fcd657a88986c","time":{"start":1761912081296,"stop":1761912081296,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761912080667,"stop":1761912081009,"duration":342},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.board"},{"name":"suite","value":"test_create_board"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.board.test_create_board"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"field_type","value":"'Date'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":54},"items":[{"uid":"6d4b13703c51d45e","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/6d4b13703c51d45e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911173008,"stop":1761911173008,"duration":0}},{"uid":"d334b615aec6c902","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/d334b615aec6c902","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910801841,"stop":1761910801841,"duration":0}},{"uid":"1a2a41d85aaff048","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/1a2a41d85aaff048","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910504182,"stop":1761910504182,"duration":0}},{"uid":"2c1b654dcf9c1697","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/2c1b654dcf9c1697","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761909867216,"stop":1761909867216,"duration":0}},{"uid":"7d7d49d6bdb16b39","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/7d7d49d6bdb16b39","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761899901140,"stop":1761899901140,"duration":0}},{"uid":"816bd92c28320ec7","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/816bd92c28320ec7","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834950125,"stop":1761834950125,"duration":0}},{"uid":"65b3bd9d63811c64","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/65b3bd9d63811c64","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834497885,"stop":1761834497885,"duration":0}},{"uid":"dfab54b4dac1836d","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/dfab54b4dac1836d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833327529,"stop":1761833327529,"duration":0}},{"uid":"4ddff58738dced0a","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/4ddff58738dced0a","status":"passed","time":{"start":1761821501156,"stop":1761821501998,"duration":842}},{"uid":"f608bd06d7fb514f","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/f608bd06d7fb514f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818627806,"stop":1761818627806,"duration":0}},{"uid":"ad7bef6040a7aaf","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/ad7bef6040a7aaf","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748512391,"stop":1761748512391,"duration":0}},{"uid":"b36456aeb10bcc93","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/b36456aeb10bcc93","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747771973,"stop":1761747771973,"duration":0}},{"uid":"583af60ec0c04d3c","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/583af60ec0c04d3c","status":"passed","time":{"start":1761746616934,"stop":1761746617262,"duration":328}},{"uid":"b284b497434c5456","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/b284b497434c5456","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745637263,"stop":1761745637263,"duration":0}},{"uid":"83d05c330ba05ac1","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/83d05c330ba05ac1","status":"passed","time":{"start":1761576492842,"stop":1761576493069,"duration":227}},{"uid":"55f8ca7d3f8e0b45","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/55f8ca7d3f8e0b45","status":"passed","time":{"start":1761557149640,"stop":1761557149843,"duration":203}},{"uid":"69da617f3abe1e7e","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/69da617f3abe1e7e","status":"passed","time":{"start":1761308373989,"stop":1761308374212,"duration":223}},{"uid":"bcd26ad85c2c178b","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/bcd26ad85c2c178b","status":"passed","time":{"start":1761306521763,"stop":1761306521983,"duration":220}},{"uid":"6a077e6df21e53a0","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/6a077e6df21e53a0","status":"passed","time":{"start":1761136816206,"stop":1761136816452,"duration":246}},{"uid":"6cdc9dd3e9ca848b","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/6cdc9dd3e9ca848b","status":"passed","time":{"start":1761135468554,"stop":1761135468820,"duration":266}}]},"tags":["backend"]},"source":"75f43b20e9959fa3.json","parameterValues":["'Date'"]}