{"uid":"4b4757e66a1912dae1a509f688f20b0f","children":[{"name":"Product defects","children":[{"name":"AssertionError: Статус: 404, текст: <!DOCTYPE html>\n  <html lang=\"en\">\n  <head>\n  <meta charset=\"utf-8\">\n  <title>Error</title>\n  </head>\n  <body>\n  <pre>Cannot POST /v4/CreatePersonalAccessToken</pre>\n  </body>\n  </html>\n  \nassert 404 == 200\n +  where 404 = <Response [404]>.status_code","children":[{"name":"Создание персонального access-токена (уникальное имя, полное покрытие требований)","uid":"dea0863f39515a9c","parentUid":"803853975efa9095c22e0609cf366a03","status":"failed","time":{"start":1759744090890,"stop":1759744091424,"duration":534},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["backend"]}],"uid":"803853975efa9095c22e0609cf366a03"},{"name":"AssertionError: Первый: 404 <!DOCTYPE html>\n  <html lang=\"en\">\n  <head>\n  <meta charset=\"utf-8\">\n  <title>Error</title>\n  </head>\n  <body>\n  <pre>Cannot POST /v4/CreatePersonalAccessToken</pre>\n  </body>\n  </html>\n  \nassert 404 == 200\n +  where 404 = <Response [404]>.status_code","children":[{"name":"Создание двух токенов с одинаковым именем (дубликаты разрешены)","uid":"8efe2a5c83ee255c","parentUid":"30e1f6313fad735cf89ae55568b5800f","status":"failed","time":{"start":1759744091458,"stop":1759744091841,"duration":383},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["backend"]}],"uid":"30e1f6313fad735cf89ae55568b5800f"},{"name":"AssertionError: Ожидался статус 400, получен: 404\nassert 404 == 400\n +  where 404 = <Response [404]>.status_code","children":[{"name":"Попытка создать персональный access-токен с пустым name — ожидается ошибка","uid":"bd2d309327187ea","parentUid":"4aec2ee4f2a834259dace7e5a10b2598","status":"failed","time":{"start":1759744091847,"stop":1759744092319,"duration":472},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["backend"]}],"uid":"4aec2ee4f2a834259dace7e5a10b2598"},{"name":"AssertionError: status code: 404, text: <!DOCTYPE html>\n  <html lang=\"en\">\n  <head>\n  <meta charset=\"utf-8\">\n  <title>Error</title>\n  </head>\n  <body>\n  <pre>Cannot POST /v4/CreatePersonalAccessToken</pre>\n  </body>\n  </html>\n  \nassert 404 == 200\n +  where 404 = <Response [404]>.status_code","children":[{"name":"Проверка ограничений длины поля name при создании токена","uid":"8df1493d77331cdd","parentUid":"d460c097f3df8841bab15961b374b144","status":"failed","time":{"start":1759744092324,"stop":1759744092712,"duration":388},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["200","'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'"],"tags":["backend"]}],"uid":"d460c097f3df8841bab15961b374b144"},{"name":"AssertionError: status code: 404, text: <!DOCTYPE html>\n  <html lang=\"en\">\n  <head>\n  <meta charset=\"utf-8\">\n  <title>Error</title>\n  </head>\n  <body>\n  <pre>Cannot POST /v4/CreatePersonalAccessToken</pre>\n  </body>\n  </html>\n  \nassert 404 == 400\n +  where 404 = <Response [404]>.status_code","children":[{"name":"Проверка ограничений длины поля name при создании токена","uid":"cb43f5557edc46cf","parentUid":"0d226b3c6974794e4f2af5e0d3f46c4b","status":"failed","time":{"start":1759744092717,"stop":1759744092920,"duration":203},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["400","'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'"],"tags":["backend"]}],"uid":"0d226b3c6974794e4f2af5e0d3f46c4b"},{"name":"AssertionError: Не удалось создать токен: <!DOCTYPE html>\n  <html lang=\"en\">\n  <head>\n  <meta charset=\"utf-8\">\n  <title>Error</title>\n  </head>\n  <body>\n  <pre>Cannot POST /v4/CreatePersonalAccessToken</pre>\n  </body>\n  </html>\n  \nassert 404 == 200\n +  where 404 = <Response [404]>.status_code","children":[{"name":"Создать токен, убедиться что он есть среди полученных, удалить все токены и убедиться что список пуст","uid":"3ed311438aee6cce","parentUid":"f266fa98216b050ff86f6debda02304d","status":"failed","time":{"start":1759744093398,"stop":1759744093797,"duration":399},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["backend"]},{"name":"Повторное удаление одного токена возвращает корректную ошибку (например, 404 Not Found)","uid":"caf64fe51b65935d","parentUid":"f266fa98216b050ff86f6debda02304d","status":"failed","time":{"start":1759744093801,"stop":1759744094233,"duration":432},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["backend"]}],"uid":"f266fa98216b050ff86f6debda02304d"},{"name":"AssertionError: Ожидался статус 404, но был 404: <!DOCTYPE html>\n  <html lang=\"en\">\n  <head>\n  <meta charset=\"utf-8\">\n  <title>Error</title>\n  </head>\n  <body>\n  <pre>Cannot POST /v4/DeletePersonalAccessToken</pre>\n  </body>\n  </html>\n  \nassert 404 == 400\n +  where 404 = <Response [404]>.status_code","children":[{"name":"Попытка удалить несуществующий токен возвращает корректную ошибку (например, 404 Not Found)","uid":"62b33f40e37619d4","parentUid":"5d125db14d7d6c66aacd125bdb719ffe","status":"failed","time":{"start":1759744094237,"stop":1759744094427,"duration":190},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["backend"]}],"uid":"5d125db14d7d6c66aacd125bdb719ffe"},{"name":"AssertionError: Ошибка при создании токена: <!DOCTYPE html>\n  <html lang=\"en\">\n  <head>\n  <meta charset=\"utf-8\">\n  <title>Error</title>\n  </head>\n  <body>\n  <pre>Cannot POST /v4/CreatePersonalAccessToken</pre>\n  </body>\n  </html>\n  \nassert 404 == 200\n +  where 404 = <Response [404]>.status_code","children":[{"name":"Проверка прав: удалить персональный токен может только владелец токена","uid":"934564c09fbee4cb","parentUid":"95c484eb8232f8426a02ef1026ff9731","status":"failed","time":{"start":1759744094431,"stop":1759744094816,"duration":385},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["backend"]}],"uid":"95c484eb8232f8426a02ef1026ff9731"},{"name":"AssertionError: Статус: 404, текст: <!DOCTYPE html>\n  <html lang=\"en\">\n  <head>\n  <meta charset=\"utf-8\">\n  <title>Error</title>\n  </head>\n  <body>\n  <pre>Cannot POST /v4/GetPersonalAccessTokens</pre>\n  </body>\n  </html>\n  \nassert 404 == 200\n +  where 404 = <Response [404]>.status_code","children":[{"name":"Успешный запрос возвращает список токенов. Каждый элемент содержит id, name, createdAt, но не содержит hashedToken.","uid":"93a8b19472bb4369","parentUid":"dec29db1e411401b65f8194a41b41e59","status":"failed","time":{"start":1759744094820,"stop":1759744095194,"duration":374},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["backend"]}],"uid":"dec29db1e411401b65f8194a41b41e59"}],"uid":"8fb3a91ba5aaf9de24cc8a92edc82b5d"},{"name":"Test defects","children":[{"name":"requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","children":[{"name":"Лимит создания токенов: 1 успешный, затем не более 5 попыток до 429","uid":"e234384c3d3c58dc","parentUid":"0deff55915d4c9ebc746eac29285817c","status":"broken","time":{"start":1759744092926,"stop":1759744093373,"duration":447},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["backend"]}],"uid":"0deff55915d4c9ebc746eac29285817c"}],"uid":"bdbf199525818fae7a8651db9eafe741"}],"name":"categories"}