{"uid":"7a531a59a069f4e9","name":"test_get_documents[member]","fullName":"tests.test_backend.document.test_get_documents#test_get_documents","historyId":"030f136b9055f4bc6464c9f268396b01","time":{"start":1761912191050,"stop":1761912191050,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761912080667,"stop":1761912081009,"duration":342},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_documents"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_documents"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"fixture_name","value":"'temp_member'"},{"name":"kind","value":"'Member'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":54},"items":[{"uid":"82f27bce8ecd9372","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/82f27bce8ecd9372","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911303961,"stop":1761911303961,"duration":0}},{"uid":"c239f718b82f7387","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/c239f718b82f7387","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910914695,"stop":1761910914695,"duration":0}},{"uid":"fc68e79dd6d51027","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/fc68e79dd6d51027","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910615845,"stop":1761910615845,"duration":0}},{"uid":"20893b045bacfb91","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/20893b045bacfb91","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910008922,"stop":1761910008922,"duration":0}},{"uid":"eec006bc0e10b9e6","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/eec006bc0e10b9e6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900040037,"stop":1761900040037,"duration":0}},{"uid":"1c45627928580ed9","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/1c45627928580ed9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835060240,"stop":1761835060240,"duration":0}},{"uid":"760d26bec8fcff5","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/760d26bec8fcff5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834645299,"stop":1761834645299,"duration":0}},{"uid":"6742ca1a3d34fea9","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/6742ca1a3d34fea9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833481709,"stop":1761833481709,"duration":0}},{"uid":"cb51e93357f1c84c","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/cb51e93357f1c84c","status":"passed","time":{"start":1761821757849,"stop":1761821758240,"duration":391}},{"uid":"6afd748da5536325","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/6afd748da5536325","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818769843,"stop":1761818769843,"duration":0}},{"uid":"61585238093ef6b3","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/61585238093ef6b3","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748633169,"stop":1761748633169,"duration":0}},{"uid":"c4143b398a1b1405","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/c4143b398a1b1405","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747909433,"stop":1761747909433,"duration":0}},{"uid":"c861295c13887737","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/c861295c13887737","status":"passed","time":{"start":1761746943427,"stop":1761746945492,"duration":2065}},{"uid":"9a5f3cee6e778471","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/9a5f3cee6e778471","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745741312,"stop":1761745741312,"duration":0}},{"uid":"8d0ddb498cd96b91","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/8d0ddb498cd96b91","status":"passed","time":{"start":1761576773295,"stop":1761576774735,"duration":1440}},{"uid":"da2050ad8366c859","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/da2050ad8366c859","status":"passed","time":{"start":1761557410830,"stop":1761557412021,"duration":1191}},{"uid":"4863a6e5eba98811","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/4863a6e5eba98811","status":"passed","time":{"start":1761308631213,"stop":1761308632102,"duration":889}},{"uid":"97cf344d43dd11d5","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/97cf344d43dd11d5","status":"passed","time":{"start":1761306794309,"stop":1761306795859,"duration":1550}},{"uid":"57f119aeb843dd46","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/57f119aeb843dd46","status":"passed","time":{"start":1761137090791,"stop":1761137091503,"duration":712}},{"uid":"435f1161e822d54f","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/435f1161e822d54f","status":"passed","time":{"start":1761135776384,"stop":1761135776933,"duration":549}}]},"tags":["backend"]},"source":"7a531a59a069f4e9.json","parameterValues":["'temp_member'","'Member'"]}