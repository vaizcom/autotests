{"uid":"d938299b97d7ff47","name":"Проверка удаление всех задач на доске","fullName":"tests.test_backend.task_service.create_task.test_delete_all_tasks_on_main_board#test_delete_all_tasks_on_main_board","historyId":"09ff67133fb35acc381b0225c0ca8404","time":{"start":1761900058244,"stop":1761900058429,"duration":185},"description":"\n    Удаляет все задачи на основной доске (main_board).\n    ","descriptionHtml":"<pre><code>Удаляет все задачи на основной доске (main_board).\n</code></pre>\n","status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-uat.vaiz.dev/v4/GetBoard","statusTrace":"request = <FixtureRequest for <Function test_delete_all_tasks_on_main_board>>\nowner_client = <tests.core.client.APIClient object at 0x7f2708f7bf10>\nmain_space = '6866309d85fb8d104544a61e', main_board = '6866731185fb8d104544e826'\ncreate_task_in_main = <function create_task_in_main.<locals>._create_task at 0x7f27089f8e00>\n\n    @allure.parent_suite(\"create_task\")\n    @allure.title(\"Проверка удаление всех задач на доске\")\n    def test_delete_all_tasks_on_main_board(request, owner_client, main_space, main_board, create_task_in_main):\n        \"\"\"\n        Удаляет все задачи на основной доске (main_board).\n        \"\"\"\n    \n        client = get_client(request, \"owner_client\")\n        created_task_ids = []\n        random_count = random.randint(1, 10)\n        for i in range(1, random_count + 1):\n>           task = create_task_in_main(\n                \"owner_client\",\n                name=f\"Random task #{i}\",\n            )\n\ntests/test_backend/task_service/create_task/test_delete_all_tasks_on_main_board.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_backend/task_service/create_task/conftest.py:32: in _create_task\n    random_type_id = kwargs.get(\"types\") or [get_random_type_id(client, main_board, main_space)]\ntests/test_backend/task_service/create_task/utils.py:52: in get_random_type_id\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-uat.vaiz.dev/v4/GetBoard\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/requests/models.py:1024: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761899890641,"stop":1761899890641,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761899890642,"stop":1761899890642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761899890642,"stop":1761899890642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761899890642,"stop":1761899891240,"duration":598},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761899890642,"stop":1761899890642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1761899894466,"stop":1761899894790,"duration":324},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1761899894790,"stop":1761899895081,"duration":291},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_project","time":{"start":1761899895081,"stop":1761899895654,"duration":573},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_board","time":{"start":1761899898729,"stop":1761899899003,"duration":274},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_task_in_main","time":{"start":1761900058244,"stop":1761900058244,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"create_task"},{"name":"tag","value":"backend"},{"name":"suite","value":"test_delete_all_tasks_on_main_board"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2554-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.task_service.create_task.test_delete_all_tasks_on_main_board"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":9,"unknown":0,"total":17},"items":[{"uid":"2fdf8d227275d251","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/2fdf8d227275d251","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api.vaiz.dev/v4/GetBoard","time":{"start":1761835073793,"stop":1761835073955,"duration":162}},{"uid":"bb3705a8427badb3","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/bb3705a8427badb3","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-uat.vaiz.dev/v4/GetBoard","time":{"start":1761834664404,"stop":1761834664593,"duration":189}},{"uid":"949c0a832c795a34","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/949c0a832c795a34","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetBoard","time":{"start":1761833500108,"stop":1761833500286,"duration":178}},{"uid":"f8ae6da763634c80","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/f8ae6da763634c80","status":"passed","time":{"start":1761821852745,"stop":1761821861778,"duration":9033}},{"uid":"a55c50e2eb1f4e1c","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/a55c50e2eb1f4e1c","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetBoard","time":{"start":1761818786448,"stop":1761818786649,"duration":201}},{"uid":"8d7af7e2e205fb55","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/8d7af7e2e205fb55","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetBoard","time":{"start":1761748648151,"stop":1761748648289,"duration":138}},{"uid":"6bedbcc70f92c516","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/6bedbcc70f92c516","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetBoard","time":{"start":1761747925551,"stop":1761747925729,"duration":178}},{"uid":"a0e4bfb483777ec","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/a0e4bfb483777ec","status":"passed","time":{"start":1761747072329,"stop":1761747083753,"duration":11424}},{"uid":"a077dffcda5bdc2","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/a077dffcda5bdc2","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetBoard","time":{"start":1761745754855,"stop":1761745754988,"duration":133}},{"uid":"80d134ce00091f05","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/80d134ce00091f05","status":"passed","time":{"start":1761576889912,"stop":1761576905233,"duration":15321}},{"uid":"4c9274756945038d","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/4c9274756945038d","status":"passed","time":{"start":1761557503371,"stop":1761557508529,"duration":5158}},{"uid":"f0f9bf1c98774d8a","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/f0f9bf1c98774d8a","status":"passed","time":{"start":1761308724797,"stop":1761308733538,"duration":8741}},{"uid":"96f1690511a1396a","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/96f1690511a1396a","status":"passed","time":{"start":1761306889851,"stop":1761306908231,"duration":18380}},{"uid":"643ca3f8c3f1a8e4","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/643ca3f8c3f1a8e4","status":"passed","time":{"start":1761137191628,"stop":1761137194993,"duration":3365}},{"uid":"9812f9d61b010dd1","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/9812f9d61b010dd1","status":"passed","time":{"start":1761135892871,"stop":1761135905452,"duration":12581}},{"uid":"a6afdfbd2dd9f1a9","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/a6afdfbd2dd9f1a9","status":"passed","time":{"start":1761134295612,"stop":1761134304242,"duration":8630}}]},"tags":["backend"]},"source":"d938299b97d7ff47.json","parameterValues":[]}