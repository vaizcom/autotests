{"uid":"900d4380d4ab6f44","name":"Проверка счетчика сабтасок в taskTable в родительской задаче","fullName":"tests.test_backend.task.test_taskTable_total_subtask_counter#test_parent_task_total_subtask_count_increases_after_subtask_creation","historyId":"86c35029c5bf63c26b9e9e7098494a8a","time":{"start":1760614984713,"stop":1760614989223,"duration":4510},"description":"\n    Тест проверяет увеличение счетчика total сабтасок у родительской задачи после добавления сабтасок.\n    ","descriptionHtml":"<pre><code>Тест проверяет увеличение счетчика total сабтасок у родительской задачи после добавления сабтасок.\n</code></pre>\n","status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/CreateTask","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fa9954aae50>\nmain_space = '6866309d85fb8d104544a61e'\ncreate_task_in_main = <function create_task_in_main.<locals>._create_task at 0x7fa99508e340>\n\n    @allure.title(\"Проверка счетчика сабтасок в taskTable в родительской задаче\")\n    def test_parent_task_total_subtask_count_increases_after_subtask_creation(owner_client, main_space,create_task_in_main):\n        \"\"\"\n        Тест проверяет увеличение счетчика total сабтасок у родительской задачи после добавления сабтасок.\n        \"\"\"\n        client = owner_client\n        # Создадим родительскую задачу без сабтасок\n        parent_task = create_task_in_main(\"owner_client\", name=\"Parent task for total subtask count test\")\n        parent_task_id = parent_task[\"_id\"]\n        created_subtask_ids = []\n    \n        try:\n            with allure.step(\"Получаем начальное значение total у родительской задачи\"):\n                initial_total = get_parent_task_subtask_count(client, main_space, parent_task_id)\n                assert initial_total == 0\n    \n            with allure.step(\"Создаем первую сабтаску с указанием родительской задачи\"):\n                subtask1 = create_task_in_main(\n                    \"owner_client\",\n                    parent_task=parent_task_id,\n                    name=\"Subtask 1 for parent task total count test\",\n                )\n                created_subtask_ids.append(subtask1[\"_id\"])\n    \n            with allure.step(\"Проверяем, что total увеличился на 1\"):\n                total_after_first = get_parent_task_subtask_count(client, main_space, parent_task_id)\n                assert total_after_first == initial_total + 1, f\"Ожидался total={initial_total + 1}, получили {total_after_first}\"\n    \n            with allure.step(\"Создаем последовательно рандомное количество сабтасок (от 1 до 10) и проверяем total\"):\n                random_count = random.randint(1, 10)\n                for i in range(1, random_count + 1):\n>                   subtask = create_task_in_main(\n                        \"owner_client\",\n                        parent_task=parent_task_id,\n                        name=f\"Random subtask #{i} for parent task total count test\",\n                    )\n\ntests/test_backend/task/test_taskTable_total_subtask_counter.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_backend/task/conftest.py:67: in _create_task\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/CreateTask\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/requests/models.py:1024: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1760614504489,"stop":1760614504489,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1760614504489,"stop":1760614504489,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1760614504489,"stop":1760614504489,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1760614504489,"stop":1760614504489,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1760614504490,"stop":1760614505094,"duration":604},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1760614505094,"stop":1760614505625,"duration":531},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_project","time":{"start":1760614505625,"stop":1760614505864,"duration":239},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1760614505865,"stop":1760614506182,"duration":317},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_board","time":{"start":1760614510083,"stop":1760614510336,"duration":253},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_task_in_main","time":{"start":1760614984713,"stop":1760614984713,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Тест проверяет увеличение счетчика total сабтасок у родительской задачи после добавления сабтасок.\n    ","status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/CreateTask","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fa9954aae50>\nmain_space = '6866309d85fb8d104544a61e'\ncreate_task_in_main = <function create_task_in_main.<locals>._create_task at 0x7fa99508e340>\n\n    @allure.title(\"Проверка счетчика сабтасок в taskTable в родительской задаче\")\n    def test_parent_task_total_subtask_count_increases_after_subtask_creation(owner_client, main_space,create_task_in_main):\n        \"\"\"\n        Тест проверяет увеличение счетчика total сабтасок у родительской задачи после добавления сабтасок.\n        \"\"\"\n        client = owner_client\n        # Создадим родительскую задачу без сабтасок\n        parent_task = create_task_in_main(\"owner_client\", name=\"Parent task for total subtask count test\")\n        parent_task_id = parent_task[\"_id\"]\n        created_subtask_ids = []\n    \n        try:\n            with allure.step(\"Получаем начальное значение total у родительской задачи\"):\n                initial_total = get_parent_task_subtask_count(client, main_space, parent_task_id)\n                assert initial_total == 0\n    \n            with allure.step(\"Создаем первую сабтаску с указанием родительской задачи\"):\n                subtask1 = create_task_in_main(\n                    \"owner_client\",\n                    parent_task=parent_task_id,\n                    name=\"Subtask 1 for parent task total count test\",\n                )\n                created_subtask_ids.append(subtask1[\"_id\"])\n    \n            with allure.step(\"Проверяем, что total увеличился на 1\"):\n                total_after_first = get_parent_task_subtask_count(client, main_space, parent_task_id)\n                assert total_after_first == initial_total + 1, f\"Ожидался total={initial_total + 1}, получили {total_after_first}\"\n    \n            with allure.step(\"Создаем последовательно рандомное количество сабтасок (от 1 до 10) и проверяем total\"):\n                random_count = random.randint(1, 10)\n                for i in range(1, random_count + 1):\n>                   subtask = create_task_in_main(\n                        \"owner_client\",\n                        parent_task=parent_task_id,\n                        name=f\"Random subtask #{i} for parent task total count test\",\n                    )\n\ntests/test_backend/task/test_taskTable_total_subtask_counter.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_backend/task/conftest.py:67: in _create_task\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/CreateTask\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/requests/models.py:1024: HTTPError","steps":[{"name":"Получаем начальное значение total у родительской задачи","time":{"start":1760614985900,"stop":1760614986151,"duration":251},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Создаем первую сабтаску с указанием родительской задачи","time":{"start":1760614986151,"stop":1760614987352,"duration":1201},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем, что total увеличился на 1","time":{"start":1760614987352,"stop":1760614987634,"duration":282},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Создаем последовательно рандомное количество сабтасок (от 1 до 10) и проверяем total","time":{"start":1760614987634,"stop":1760614988632,"duration":998},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/CreateTask\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/task/test_taskTable_total_subtask_counter.py\", line 49, in test_parent_task_total_subtask_count_increases_after_subtask_creation\n    subtask = create_task_in_main(\n              ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/test_backend/task/conftest.py\", line 67, in _create_task\n    response.raise_for_status()\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/requests/models.py\", line 1024, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Удаляем все созданные сабтаски и родительскую задачу","time":{"start":1760614988633,"stop":1760614989223,"duration":590},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.task"},{"name":"suite","value":"test_taskTable_total_subtask_counter"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2550-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.task.test_taskTable_total_subtask_counter"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":3,"unknown":0,"total":4},"items":[{"uid":"db09380fa1ad59cd","reportUrl":"https://vaizcom.github.io/autotests/378//#testresult/db09380fa1ad59cd","status":"passed","time":{"start":1760599789801,"stop":1760599802575,"duration":12774}},{"uid":"6bc18a358f8f2200","reportUrl":"https://vaizcom.github.io/autotests/377//#testresult/6bc18a358f8f2200","status":"passed","time":{"start":1760535781769,"stop":1760535793037,"duration":11268}},{"uid":"f441614326ad23b9","reportUrl":"https://vaizcom.github.io/autotests/376//#testresult/f441614326ad23b9","status":"passed","time":{"start":1760534318925,"stop":1760534337051,"duration":18126}}]},"tags":["backend"]},"source":"900d4380d4ab6f44.json","parameterValues":[]}