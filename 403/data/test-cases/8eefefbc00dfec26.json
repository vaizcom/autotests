{"uid":"8eefefbc00dfec26","name":"test_get_ydocument_invalid_id[null]","fullName":"tests.test_backend.document.test_get_y_document#test_get_ydocument_invalid_id","historyId":"157bed99cdc7c958e668e89123522b58","time":{"start":1761911307871,"stop":1761911307871,"duration":0},"description":"\n    Негативный сценарий: разные некорректные document_id.\n    ","descriptionHtml":"<pre><code>Негативный сценарий: разные некорректные document_id.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fbc912cb790>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761911162887,"stop":1761911162887,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761911162888,"stop":1761911163517,"duration":629},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761911172524,"stop":1761911172705,"duration":181},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_y_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_y_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"400"},{"name":"fake_id","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":53},"items":[{"uid":"928fed2be2779f6d","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/928fed2be2779f6d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910917726,"stop":1761910917726,"duration":0}},{"uid":"4957fb5cdab08044","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/4957fb5cdab08044","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910619368,"stop":1761910619368,"duration":0}},{"uid":"2ad94bbcde509733","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/2ad94bbcde509733","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910012851,"stop":1761910012851,"duration":0}},{"uid":"b9046b21d71f7272","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/b9046b21d71f7272","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900043943,"stop":1761900043943,"duration":0}},{"uid":"db498f66de5ba2ac","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/db498f66de5ba2ac","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835063081,"stop":1761835063081,"duration":0}},{"uid":"9f068adb7d0a4307","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/9f068adb7d0a4307","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834649886,"stop":1761834649886,"duration":0}},{"uid":"94afc265bf8fc25b","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/94afc265bf8fc25b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833485821,"stop":1761833485821,"duration":0}},{"uid":"780d613ee8977fbb","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/780d613ee8977fbb","status":"passed","time":{"start":1761821822180,"stop":1761821822405,"duration":225}},{"uid":"bf4c445965328a6c","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/bf4c445965328a6c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818773705,"stop":1761818773705,"duration":0}},{"uid":"5cb4a9d08aa07035","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/5cb4a9d08aa07035","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748636808,"stop":1761748636808,"duration":0}},{"uid":"a5cd2bf68eb1d6bd","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/a5cd2bf68eb1d6bd","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747913919,"stop":1761747913919,"duration":0}},{"uid":"eed4965516e4b250","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/eed4965516e4b250","status":"passed","time":{"start":1761747030590,"stop":1761747030894,"duration":304}},{"uid":"7f2230d8c7c014c8","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/7f2230d8c7c014c8","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745744229,"stop":1761745744229,"duration":0}},{"uid":"cb0a79425df81b1c","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/cb0a79425df81b1c","status":"passed","time":{"start":1761576852894,"stop":1761576853095,"duration":201}},{"uid":"f00f2b58963b9175","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/f00f2b58963b9175","status":"passed","time":{"start":1761557473262,"stop":1761557473466,"duration":204}},{"uid":"cd2178595b56c564","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/cd2178595b56c564","status":"passed","time":{"start":1761308691221,"stop":1761308691415,"duration":194}},{"uid":"663eb72cbb3ebe23","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/663eb72cbb3ebe23","status":"passed","time":{"start":1761306858456,"stop":1761306858651,"duration":195}},{"uid":"5fc16eb14287912c","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/5fc16eb14287912c","status":"passed","time":{"start":1761137156826,"stop":1761137157033,"duration":207}},{"uid":"903fb7c4ae1fedd2","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/903fb7c4ae1fedd2","status":"passed","time":{"start":1761135855117,"stop":1761135855360,"duration":243}},{"uid":"9cb879bf41b1b1f0","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/9cb879bf41b1b1f0","status":"passed","time":{"start":1761134264229,"stop":1761134264422,"duration":193}}]},"tags":["backend"]},"source":"8eefefbc00dfec26.json","parameterValues":["400","None"]}