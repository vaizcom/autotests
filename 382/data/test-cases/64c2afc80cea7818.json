{"uid":"64c2afc80cea7818","name":"Create task with minimal payload: клиент=guest_client, ожидаемый статус=403","fullName":"tests.test_backend.task.access_task.test_create_task#test_create_task_with_minimal_payload","historyId":"67e9b685fa26dff2b68f44e0a4390fd7","time":{"start":1761119580901,"stop":1761119581339,"duration":438},"description":"\n    Тест проверки создания задачи с минимальным набором полей в системе управления проектами под разными ролями.\n\n    Цель теста — убедиться, что можно успешно создать задачу, указав только минимально необходимые данные, и что поведение API зависит от прав пользователя (типа клиента).\n    В процессе теста дополнительно валидируются структура созданной задачи, значения по умолчанию, связи (creator, board и пр.), а также удаление задачи после проверки.\n    assert_task_keys обеспечивает падение теста при добавлении/удалении ключей с понятным сообщением.\n\n    Ход теста:\n        1. Получение клиента согласно переданной роли через фикстуру.\n        2. Получение id пользователя, с помощью которого осуществляется создание задачи.\n        3. Формирование минимального payload и попытка создать задачу через API.\n        4. Проверка статус-кода ответа.\n        5. Если задача успешно создана (ответ 200):\n            - Проверка наполнения и структуры ответа\n    ","descriptionHtml":"<pre><code>Тест проверки создания задачи с минимальным набором полей в системе управления проектами под разными ролями.\n\nЦель теста — убедиться, что можно успешно создать задачу, указав только минимально необходимые данные, и что поведение API зависит от прав пользователя (типа клиента).\nВ процессе теста дополнительно валидируются структура созданной задачи, значения по умолчанию, связи (creator, board и пр.), а также удаление задачи после проверки.\nassert_task_keys обеспечивает падение теста при добавлении/удалении ключей с понятным сообщением.\n\nХод теста:\n    1. Получение клиента согласно переданной роли через фикстуру.\n    2. Получение id пользователя, с помощью которого осуществляется создание задачи.\n    3. Формирование минимального payload и попытка создать задачу через API.\n    4. Проверка статус-кода ответа.\n    5. Если задача успешно создана (ответ 200):\n        - Проверка наполнения и структуры ответа\n</code></pre>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1761119169458,"stop":1761119169458,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1761119169458,"stop":1761119169898,"duration":440},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761119169458,"stop":1761119169458,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761119169458,"stop":1761119169458,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761119169458,"stop":1761119169458,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1761119169898,"stop":1761119170757,"duration":859},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_project","time":{"start":1761119170757,"stop":1761119171158,"duration":401},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"guest_client","time":{"start":1761119174104,"stop":1761119174534,"duration":430},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_board","time":{"start":1761119174935,"stop":1761119175228,"duration":293},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Тест проверки создания задачи с минимальным набором полей в системе управления проектами под разными ролями.\n\n    Цель теста — убедиться, что можно успешно создать задачу, указав только минимально необходимые данные, и что поведение API зависит от прав пользователя (типа клиента).\n    В процессе теста дополнительно валидируются структура созданной задачи, значения по умолчанию, связи (creator, board и пр.), а также удаление задачи после проверки.\n    assert_task_keys обеспечивает падение теста при добавлении/удалении ключей с понятным сообщением.\n\n    Ход теста:\n        1. Получение клиента согласно переданной роли через фикстуру.\n        2. Получение id пользователя, с помощью которого осуществляется создание задачи.\n        3. Формирование минимального payload и попытка создать задачу через API.\n        4. Проверка статус-кода ответа.\n        5. Если задача успешно создана (ответ 200):\n            - Проверка наполнения и структуры ответа\n    ","status":"passed","steps":[{"name":"Создание задачи с минимальным payload","time":{"start":1761119581131,"stop":1761119581339,"duration":208},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверка статус-кода: ожидаем 403","time":{"start":1761119581339,"stop":1761119581339,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.task.access_task"},{"name":"suite","value":"test_create_task"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2601-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.task.access_task.test_create_task"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"client_fixture","value":"'guest_client'"},{"name":"expected_status","value":"403"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":25,"unknown":0,"total":25},"items":[{"uid":"80a8fa3b885a8959","reportUrl":"https://vaizcom.github.io/autotests/381//#testresult/80a8fa3b885a8959","status":"passed","time":{"start":1761053596091,"stop":1761053596545,"duration":454}},{"uid":"27934923635e5744","reportUrl":"https://vaizcom.github.io/autotests/380//#testresult/27934923635e5744","status":"passed","time":{"start":1761047513570,"stop":1761047514059,"duration":489}},{"uid":"af2c7a164e3b4084","reportUrl":"https://vaizcom.github.io/autotests/379//#testresult/af2c7a164e3b4084","status":"passed","time":{"start":1760614928947,"stop":1760614929689,"duration":742}},{"uid":"e4c8b0ed09efb7d1","reportUrl":"https://vaizcom.github.io/autotests/378//#testresult/e4c8b0ed09efb7d1","status":"passed","time":{"start":1760599730848,"stop":1760599731351,"duration":503}},{"uid":"d47a34841912a9bf","reportUrl":"https://vaizcom.github.io/autotests/377//#testresult/d47a34841912a9bf","status":"passed","time":{"start":1760535728928,"stop":1760535729347,"duration":419}},{"uid":"1027ab4db3d2aaf1","reportUrl":"https://vaizcom.github.io/autotests/376//#testresult/1027ab4db3d2aaf1","status":"passed","time":{"start":1760534264775,"stop":1760534265861,"duration":1086}},{"uid":"b861832c8dd7e8e6","reportUrl":"https://vaizcom.github.io/autotests/375//#testresult/b861832c8dd7e8e6","status":"passed","time":{"start":1760532777967,"stop":1760532779000,"duration":1033}},{"uid":"8b3e40d624b1af8c","reportUrl":"https://vaizcom.github.io/autotests/374//#testresult/8b3e40d624b1af8c","status":"passed","time":{"start":1760529572053,"stop":1760529572494,"duration":441}},{"uid":"23ee0d0030d3cfbf","reportUrl":"https://vaizcom.github.io/autotests/373//#testresult/23ee0d0030d3cfbf","status":"passed","time":{"start":1760511009336,"stop":1760511009848,"duration":512}},{"uid":"7f97d5856d1083f7","reportUrl":"https://vaizcom.github.io/autotests/372//#testresult/7f97d5856d1083f7","status":"passed","time":{"start":1760449445625,"stop":1760449446013,"duration":388}},{"uid":"439a4ad4b1dc1a08","reportUrl":"https://vaizcom.github.io/autotests/371//#testresult/439a4ad4b1dc1a08","status":"passed","time":{"start":1760447207362,"stop":1760447207776,"duration":414}},{"uid":"3cbcc5afe5c264d7","reportUrl":"https://vaizcom.github.io/autotests/370//#testresult/3cbcc5afe5c264d7","status":"passed","time":{"start":1760428057350,"stop":1760428057730,"duration":380}},{"uid":"726fc70a2c32c763","reportUrl":"https://vaizcom.github.io/autotests/369//#testresult/726fc70a2c32c763","status":"passed","time":{"start":1760360362878,"stop":1760360363666,"duration":788}},{"uid":"e4f4b58b5b1dd53b","reportUrl":"https://vaizcom.github.io/autotests/368//#testresult/e4f4b58b5b1dd53b","status":"passed","time":{"start":1760342345324,"stop":1760342346180,"duration":856}},{"uid":"fc5e1a3f8f9d0d41","reportUrl":"https://vaizcom.github.io/autotests/367//#testresult/fc5e1a3f8f9d0d41","status":"passed","time":{"start":1760102058874,"stop":1760102059401,"duration":527}},{"uid":"348318f6df1c9c85","reportUrl":"https://vaizcom.github.io/autotests/366//#testresult/348318f6df1c9c85","status":"passed","time":{"start":1760099045793,"stop":1760099046351,"duration":558}},{"uid":"bb87840c61f70d17","reportUrl":"https://vaizcom.github.io/autotests/365//#testresult/bb87840c61f70d17","status":"passed","time":{"start":1760087507005,"stop":1760087507839,"duration":834}},{"uid":"2ddaa732d9a560c7","reportUrl":"https://vaizcom.github.io/autotests/364//#testresult/2ddaa732d9a560c7","status":"passed","time":{"start":1760017665921,"stop":1760017666404,"duration":483}},{"uid":"7dbdb22d7c7d5528","reportUrl":"https://vaizcom.github.io/autotests/363//#testresult/7dbdb22d7c7d5528","status":"passed","time":{"start":1760014740809,"stop":1760014741279,"duration":470}},{"uid":"d4a5e87aebd5a62f","reportUrl":"https://vaizcom.github.io/autotests/362//#testresult/d4a5e87aebd5a62f","status":"passed","time":{"start":1760013846848,"stop":1760013847412,"duration":564}}]},"tags":["backend"]},"source":"64c2afc80cea7818.json","parameterValues":["'guest_client'","403"]}