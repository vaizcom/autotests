{"uid":"1a9244687ab3aa8e","name":"test_board_name_validation[@#$%^&*()!]","fullName":"tests.test_backend.board.board_validation_test#test_board_name_validation","historyId":"87df970918ede2d6616435a674c84714","time":{"start":1761899900888,"stop":1761899900888,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f2708f7bf10>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761899890641,"stop":1761899890641,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761899890642,"stop":1761899890642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761899890642,"stop":1761899890642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761899890642,"stop":1761899891240,"duration":598},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761899890642,"stop":1761899890642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761899900632,"stop":1761899900818,"duration":186},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.board"},{"name":"suite","value":"board_validation_test"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2554-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.board.board_validation_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"200"},{"name":"name","value":"'@#$%^&*()!'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":49},"items":[{"uid":"687adfac872db4e8","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/687adfac872db4e8","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834949875,"stop":1761834949875,"duration":0}},{"uid":"c851b2ead8b1294f","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/c851b2ead8b1294f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834497591,"stop":1761834497591,"duration":0}},{"uid":"a0579815e58ac206","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/a0579815e58ac206","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833327305,"stop":1761833327305,"duration":0}},{"uid":"d0e30e703039debb","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/d0e30e703039debb","status":"passed","time":{"start":1761821492936,"stop":1761821493141,"duration":205}},{"uid":"c728987e6e4b5d6f","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/c728987e6e4b5d6f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818627563,"stop":1761818627563,"duration":0}},{"uid":"f3b60602a0fd57b9","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/f3b60602a0fd57b9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748512145,"stop":1761748512145,"duration":0}},{"uid":"fdf8cfa746756922","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/fdf8cfa746756922","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747771731,"stop":1761747771731,"duration":0}},{"uid":"7eabadceade16ffa","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/7eabadceade16ffa","status":"passed","time":{"start":1761746603145,"stop":1761746603473,"duration":328}},{"uid":"eef262027d95b8e8","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/eef262027d95b8e8","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745637017,"stop":1761745637017,"duration":0}},{"uid":"608cd266eb1c9376","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/608cd266eb1c9376","status":"passed","time":{"start":1761576482957,"stop":1761576483215,"duration":258}},{"uid":"fdc12184f04ee02e","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/fdc12184f04ee02e","status":"passed","time":{"start":1761557140665,"stop":1761557140888,"duration":223}},{"uid":"ba57dcc37363289f","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/ba57dcc37363289f","status":"passed","time":{"start":1761308364231,"stop":1761308364443,"duration":212}},{"uid":"9647a3e1c5946467","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/9647a3e1c5946467","status":"passed","time":{"start":1761306511700,"stop":1761306511936,"duration":236}},{"uid":"2dfd387d2411cc26","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/2dfd387d2411cc26","status":"passed","time":{"start":1761136805787,"stop":1761136806048,"duration":261}},{"uid":"4253e0b1166d47d5","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/4253e0b1166d47d5","status":"passed","time":{"start":1761135456805,"stop":1761135457097,"duration":292}},{"uid":"e3f327473a202d48","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/e3f327473a202d48","status":"passed","time":{"start":1761133923954,"stop":1761133924193,"duration":239}},{"uid":"996b8730e1aa250c","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/996b8730e1aa250c","status":"passed","time":{"start":1761128221064,"stop":1761128221372,"duration":308}},{"uid":"50e5e0364857537d","reportUrl":"https://vaizcom.github.io/autotests/383//#testresult/50e5e0364857537d","status":"passed","time":{"start":1761124325167,"stop":1761124325459,"duration":292}},{"uid":"1bc89cb7473c6ba0","reportUrl":"https://vaizcom.github.io/autotests/382//#testresult/1bc89cb7473c6ba0","status":"passed","time":{"start":1761119179652,"stop":1761119179886,"duration":234}},{"uid":"8501a6d51f55b7c5","reportUrl":"https://vaizcom.github.io/autotests/381//#testresult/8501a6d51f55b7c5","status":"passed","time":{"start":1761053224968,"stop":1761053225188,"duration":220}}]},"tags":["backend"]},"source":"1a9244687ab3aa8e.json","parameterValues":["200","'@#$%^&*()!'"]}