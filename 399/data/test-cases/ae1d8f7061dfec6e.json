{"uid":"ae1d8f7061dfec6e","name":"Test edit space name","fullName":"tests.test_backend.space.test_space#test_edit_space_name","historyId":"acc0a6247a23c83e0afd67b8e1f0ee00","time":{"start":1761900044071,"stop":1761900044071,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f2708f7bf10>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761899890641,"stop":1761899890641,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761899890642,"stop":1761899890642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761899890642,"stop":1761899890642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761899890642,"stop":1761899891240,"duration":598},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761899890642,"stop":1761899890642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761899900632,"stop":1761899900818,"duration":186},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.space"},{"name":"suite","value":"test_space"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2554-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.space.test_space"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":49},"items":[{"uid":"3cb82da015dcb4ea","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/3cb82da015dcb4ea","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835063225,"stop":1761835063225,"duration":0}},{"uid":"69209f3b1bef308","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/69209f3b1bef308","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834650046,"stop":1761834650046,"duration":0}},{"uid":"698c5d5dfbaf54a2","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/698c5d5dfbaf54a2","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833485932,"stop":1761833485932,"duration":0}},{"uid":"f226448520d34c41","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/f226448520d34c41","status":"passed","time":{"start":1761821827795,"stop":1761821828628,"duration":833}},{"uid":"d953b2d65b940645","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/d953b2d65b940645","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818773830,"stop":1761818773830,"duration":0}},{"uid":"9f9115247e4a18d7","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/9f9115247e4a18d7","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748636953,"stop":1761748636953,"duration":0}},{"uid":"8c038721211b19b9","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/8c038721211b19b9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747914062,"stop":1761747914062,"duration":0}},{"uid":"f59fe95ba81ed4e2","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/f59fe95ba81ed4e2","status":"passed","time":{"start":1761747039474,"stop":1761747040886,"duration":1412}},{"uid":"7b20b10fa8f6fb88","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/7b20b10fa8f6fb88","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745744373,"stop":1761745744373,"duration":0}},{"uid":"6a6a1be949bc553d","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/6a6a1be949bc553d","status":"passed","time":{"start":1761576859880,"stop":1761576861082,"duration":1202}},{"uid":"c13167aa52ac1b3c","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/c13167aa52ac1b3c","status":"passed","time":{"start":1761557479413,"stop":1761557480298,"duration":885}},{"uid":"9d8c383e1edcdf63","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/9d8c383e1edcdf63","status":"passed","time":{"start":1761308696586,"stop":1761308697243,"duration":657}},{"uid":"819482242e63f1db","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/819482242e63f1db","status":"passed","time":{"start":1761306864366,"stop":1761306865135,"duration":769}},{"uid":"4145c2a82ddc1476","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/4145c2a82ddc1476","status":"passed","time":{"start":1761137163786,"stop":1761137164594,"duration":808}},{"uid":"2d9558ba7007ac8f","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/2d9558ba7007ac8f","status":"passed","time":{"start":1761135862183,"stop":1761135863452,"duration":1269}},{"uid":"ff64e91c6896ace5","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/ff64e91c6896ace5","status":"passed","time":{"start":1761134269940,"stop":1761134271120,"duration":1180}},{"uid":"7e1ced54a8e508a2","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/7e1ced54a8e508a2","status":"passed","time":{"start":1761128661318,"stop":1761128662600,"duration":1282}},{"uid":"c47b41238609c6ae","reportUrl":"https://vaizcom.github.io/autotests/383//#testresult/c47b41238609c6ae","status":"passed","time":{"start":1761124756353,"stop":1761124757157,"duration":804}},{"uid":"293d7a7c3954ee5b","reportUrl":"https://vaizcom.github.io/autotests/382//#testresult/293d7a7c3954ee5b","status":"passed","time":{"start":1761119563173,"stop":1761119563866,"duration":693}},{"uid":"73a576e293eca63f","reportUrl":"https://vaizcom.github.io/autotests/381//#testresult/73a576e293eca63f","status":"passed","time":{"start":1761053579342,"stop":1761053580073,"duration":731}}]},"tags":["backend"]},"source":"ae1d8f7061dfec6e.json","parameterValues":[]}