{"uid":"dd949353be451670","name":"Проверка увеличения счетчика задач у milestone после создания задач и соответствия completed","fullName":"tests.test_backend.task_service.create_task.test_milestone_tasks_total_and_completed#test_milestone_total_and_completed_after_task_creation","historyId":"558adb939acc8d06137609a1366a7373","time":{"start":1761818786665,"stop":1761818786836,"duration":171},"description":"\n    Тест проверяет:\n    - увеличение счетчика total задач у milestone после создания задач,\n    - и что completed-задачи учитываются корректно (через get_milestone_completed).\n    ","descriptionHtml":"<pre><code>Тест проверяет:\n- увеличение счетчика total задач у milestone после создания задач,\n- и что completed-задачи учитываются корректно (через get_milestone_completed).\n</code></pre>\n","status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f7f24a9bfd0>\nmain_space = '6866309d85fb8d104544a61e'\ncreate_task_in_main = <function create_task_in_main.<locals>._create_task at 0x7f7f241dc9a0>\nmain_board = '6866731185fb8d104544e826'\n\n    @allure.parent_suite(\"create_task\")\n    @allure.title(\"Проверка увеличения счетчика задач у milestone после создания задач и соответствия completed\")\n    def test_milestone_total_and_completed_after_task_creation(owner_client, main_space, create_task_in_main, main_board):\n        \"\"\"\n        Тест проверяет:\n        - увеличение счетчика total задач у milestone после создания задач,\n        - и что completed-задачи учитываются корректно (через get_milestone_completed).\n        \"\"\"\n        milestone_name = \"Milestone total task count\"\n        client = owner_client\n>       milestone_id = get_named_milestone_id(client, main_space, main_board, milestone_name)\n\ntests/test_backend/task_service/create_task/test_milestone_tasks_total_and_completed.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_backend/task_service/create_task/utils.py:229: in get_named_milestone_id\n    resp.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/requests/models.py:1024: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761818618312,"stop":1761818618312,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761818618312,"stop":1761818618312,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761818618312,"stop":1761818618312,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761818618313,"stop":1761818618313,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761818618313,"stop":1761818618921,"duration":608},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1761818622457,"stop":1761818623066,"duration":609},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1761818623066,"stop":1761818623350,"duration":284},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_project","time":{"start":1761818623350,"stop":1761818623607,"duration":257},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_board","time":{"start":1761818625746,"stop":1761818626055,"duration":309},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_task_in_main","time":{"start":1761818786665,"stop":1761818786665,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"create_task"},{"name":"tag","value":"backend"},{"name":"suite","value":"test_milestone_tasks_total_and_completed"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2546-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.task_service.create_task.test_milestone_tasks_total_and_completed"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":8,"unknown":0,"total":12},"items":[{"uid":"553dd4b11aa5372b","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/553dd4b11aa5372b","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","time":{"start":1761748648306,"stop":1761748648424,"duration":118}},{"uid":"e0dca013fb2ae26","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/e0dca013fb2ae26","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","time":{"start":1761747925745,"stop":1761747925926,"duration":181}},{"uid":"7ceda1fe37c15174","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/7ceda1fe37c15174","status":"passed","time":{"start":1761747083755,"stop":1761747091667,"duration":7912}},{"uid":"5e519de9d0245942","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/5e519de9d0245942","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","time":{"start":1761745755021,"stop":1761745755142,"duration":121}},{"uid":"8f78fef07dccd5f8","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/8f78fef07dccd5f8","status":"passed","time":{"start":1761576905234,"stop":1761576919071,"duration":13837}},{"uid":"f8901b062534b726","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/f8901b062534b726","status":"passed","time":{"start":1761557508531,"stop":1761557517962,"duration":9431}},{"uid":"6eee4ab50417cebb","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/6eee4ab50417cebb","status":"passed","time":{"start":1761308733540,"stop":1761308748480,"duration":14940}},{"uid":"f761f5950a872c06","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/f761f5950a872c06","status":"passed","time":{"start":1761306908233,"stop":1761306928474,"duration":20241}},{"uid":"f7bd4378d9b1bfc0","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/f7bd4378d9b1bfc0","status":"passed","time":{"start":1761137194995,"stop":1761137205500,"duration":10505}},{"uid":"51bbbae7525b6076","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/51bbbae7525b6076","status":"passed","time":{"start":1761135905454,"stop":1761135926690,"duration":21236}},{"uid":"bf46ed0e5cb2c279","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/bf46ed0e5cb2c279","status":"passed","time":{"start":1761134304244,"stop":1761134322840,"duration":18596}}]},"tags":["backend"]},"source":"dd949353be451670.json","parameterValues":[]}