{"uid":"6e5ed759af4b8fcc","name":"Создание кастомного поля типа: Member","fullName":"tests.test_backend.board.test_create_board#test_create_custom_field_of_each_type","historyId":"e48c323ea04292e94f033c6b89a2475e","time":{"start":1761910504190,"stop":1761910504190,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fce4b119550>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910495818,"stop":1761910495819,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910495819,"stop":1761910496047,"duration":228},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761910503762,"stop":1761910503877,"duration":115},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.board"},{"name":"suite","value":"test_create_board"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.board.test_create_board"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"field_type","value":"'Member'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":10,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":51},"items":[{"uid":"cd6d07e6f50678c6","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/cd6d07e6f50678c6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761909867223,"stop":1761909867223,"duration":0}},{"uid":"c0b84db7957dad27","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/c0b84db7957dad27","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761899901148,"stop":1761899901148,"duration":0}},{"uid":"f3b88e04af8b77a1","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/f3b88e04af8b77a1","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834950133,"stop":1761834950133,"duration":0}},{"uid":"464fc74c793477c","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/464fc74c793477c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834497893,"stop":1761834497893,"duration":0}},{"uid":"ed033e70e42ba01b","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/ed033e70e42ba01b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833327535,"stop":1761833327535,"duration":0}},{"uid":"abd7f3af62153cc2","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/abd7f3af62153cc2","status":"passed","time":{"start":1761821502000,"stop":1761821502231,"duration":231}},{"uid":"6a3213a22b72ae8e","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/6a3213a22b72ae8e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818627813,"stop":1761818627813,"duration":0}},{"uid":"28c81c6fa60ea80c","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/28c81c6fa60ea80c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748512398,"stop":1761748512398,"duration":0}},{"uid":"50e2bcdbc5429d37","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/50e2bcdbc5429d37","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747771980,"stop":1761747771980,"duration":0}},{"uid":"5b156b750d0c6ed1","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/5b156b750d0c6ed1","status":"passed","time":{"start":1761746617264,"stop":1761746617599,"duration":335}},{"uid":"3e8052721f4a4f13","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/3e8052721f4a4f13","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745637270,"stop":1761745637270,"duration":0}},{"uid":"9d143aaa2cf2e891","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/9d143aaa2cf2e891","status":"passed","time":{"start":1761576493071,"stop":1761576493303,"duration":232}},{"uid":"e217356fb4e99aa0","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/e217356fb4e99aa0","status":"passed","time":{"start":1761557149844,"stop":1761557150069,"duration":225}},{"uid":"bcb28167f0d61cb7","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/bcb28167f0d61cb7","status":"passed","time":{"start":1761308374214,"stop":1761308374439,"duration":225}},{"uid":"9f8853a5a9dc074c","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/9f8853a5a9dc074c","status":"passed","time":{"start":1761306521984,"stop":1761306522232,"duration":248}},{"uid":"abc34eb6d6469f56","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/abc34eb6d6469f56","status":"passed","time":{"start":1761136816454,"stop":1761136816692,"duration":238}},{"uid":"cbe8622e6e0fb531","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/cbe8622e6e0fb531","status":"passed","time":{"start":1761135468822,"stop":1761135469111,"duration":289}},{"uid":"57fc22f06af5aeda","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/57fc22f06af5aeda","status":"passed","time":{"start":1761133934170,"stop":1761133934392,"duration":222}},{"uid":"9a3304919296231d","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/9a3304919296231d","status":"passed","time":{"start":1761128233834,"stop":1761128234112,"duration":278}},{"uid":"66c2ab7d7e050ee8","reportUrl":"https://vaizcom.github.io/autotests/383//#testresult/66c2ab7d7e050ee8","status":"passed","time":{"start":1761124337960,"stop":1761124338258,"duration":298}}]},"tags":["backend"]},"source":"6e5ed759af4b8fcc.json","parameterValues":["'Member'"]}