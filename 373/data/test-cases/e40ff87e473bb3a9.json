{"uid":"e40ff87e473bb3a9","name":"test_task_indexing_in_group[ten_tasks_index_10]","fullName":"tests.test_backend.task.test_task_indexing_in_group#test_task_indexing_in_group","historyId":"f6f9ca24654b582b828ae43fa1833444","time":{"start":1760511139257,"stop":1760511169010,"duration":29753},"description":"\n    Тест проверяет корректность позиционирования задач при создании новой задачи в группе на доске (board).\n    ","descriptionHtml":"<pre><code>Тест проверяет корректность позиционирования задач при создании новой задачи в группе на доске (board).\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Группа 6866731185fb8d104544e827 осталась не пустой: ['68ef44ae165f71382bd72950']","statusTrace":"request = <FixtureRequest for <Function test_task_indexing_in_group[ten_tasks_index_10]>>\ncreate_task_in_main = <function create_task_in_main.<locals>._create_task at 0x7f92765dcd60>\nmain_space = '6866309d85fb8d104544a61e', main_board = '6866731185fb8d104544e826'\ninitial_tasks = 10, create_index = 10, expected_position = 10\ntitle = 'Группа из 10 тасок, индекс=10'\n\n    @pytest.mark.parametrize(\n        \"initial_tasks, create_index, expected_position, title\",\n        [\n            (0, None, 0, \"Пустая группа, индекс не указан\"),\n            (0, 0, 0, \"Пустая группа, индекс=0\"),\n            (0, 10, 0, \"Пустая группа, индекс=10\"),\n            (10, 2, 2, \"Группа из 10 тасок, индекс=2\"),\n            (10, 999, 10, \"Группа из 10 тасок, индекс=999\"),\n            (10, 0, 0, \"Группа из 10 тасок, индекс=0\"),\n            (10, 10,10, \"Группа из 10 тасок, индекс=10\"),\n            (10,9,9, \"Группа из 10 тасок, индекс=9\")\n        ],\n        ids=[\n            \"empty_group_no_index\",\n            \"empty_group_index_0\",\n            \"empty_group_index_10\",\n            \"ten_tasks_index_2\",\n            \"ten_tasks_index_999\",\n            \"ten_tasks_index_0\",\n            \"ten_tasks_index_10\",\n            \"ten_tasks_index_9\"\n        ]\n    )\n    def test_task_indexing_in_group(\n        request, create_task_in_main, main_space, main_board, initial_tasks, create_index, expected_position, title,\n    ):\n        \"\"\"\n        Тест проверяет корректность позиционирования задач при создании новой задачи в группе на доске (board).\n        \"\"\"\n    \n        with allure.step(\"Получить ID первой группы на доске\"):\n            client = request.getfixturevalue(\"owner_client\")\n            resp = client.post(**get_board_endpoint(main_board, main_space))\n            group_id = resp.json()[\"payload\"][\"board\"][\"groups\"][0][\"_id\"]\n    \n        with allure.step(\"Очистить все задачи в выбранной группе\"):\n            delete_all_group_tasks(client, main_board, main_space, group_id)\n    \n        try:\n            with allure.step(\"Убедиться, что группа действительно пуста\"):\n                for try_num in range(5):\n                    board = client.post(**get_board_endpoint(main_board, main_space)).json()[\"payload\"][\"board\"]\n                    task_ids = board[\"taskOrderByGroups\"].get(group_id, [])\n                    if not task_ids:\n                        break\n                    time.sleep(1)\n                assert not task_ids, f\"Группа не пуста после очистки! Остались: {task_ids}\"\n    \n            with allure.step(\"Добавить стартовые задачи в группу (если требуется по сценарию)\"):\n                for i in range(initial_tasks):\n                    create_task_in_main(\n                        client_fixture=\"owner_client\",\n                        group=group_id,\n                        index=i,\n                        name=f\"Initial Task #{i}\"\n                    )\n    \n            with allure.step(f\"Создать новую тестовую задачу: {title}\"):\n                params = {\n                    \"client_fixture\": \"owner_client\",\n                    \"group\": group_id,\n                    \"name\": \"Target Task!!!!\",\n                    \"index\": create_index,\n                }\n                target_task = create_task_in_main(**params)\n                target_task_id = target_task[\"_id\"]\n    \n            with allure.step(\"Запросить список задач группы и проверить корректность порядка\"):\n                board = client.post(**get_board_endpoint(main_board, main_space)).json()[\"payload\"][\"board\"]\n                task_ids = board[\"taskOrderByGroups\"][group_id]\n                assert target_task_id in task_ids, \"Задача должна быть в списке задач группы\"\n                actual_position = task_ids.index(target_task_id)\n                assert actual_position == expected_position, (\n                    f\"Задача в позиции {actual_position}, ожидалось {expected_position}. Список: {task_ids}\"\n                )\n    \n            # Проверка количества задач: всегда должно быть initial_tasks + 1\n                expected_count = initial_tasks + 1\n                assert len(task_ids) == expected_count, (\n                    f\"Ожидалось задач: {expected_count}, получено: {len(task_ids)}.\\n\"\n                    f\"Список задач: {task_ids}\"\n                )\n                if expected_count == 1:\n                    assert actual_position == 0, \"Если задача единственная, её индекс должен быть 0\"\n                    assert task_ids == [target_task_id], (\n                        f\"Единственная задача должна быть именно той, что создана сейчас. Получено: {task_ids}\"\n                    )\n        finally:\n            with allure.step(\"Финальная очистка группы после завершения теста\"):\n                safe_delete_all_tasks_in_group(client, main_board, main_space, group_id)\n>               wait_group_empty(client, main_board, main_space, group_id)\n\ntests/test_backend/task/test_task_indexing_in_group.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nclient = <tests.core.client.APIClient object at 0x7f9276887090>\nboard_id = '6866731185fb8d104544e826', space_id = '6866309d85fb8d104544a61e'\ngroup_id = '6866731185fb8d104544e827', timeout = 10, poll_interval = 0.5\n\n    def wait_group_empty(client, board_id, space_id, group_id, timeout=10, poll_interval=0.5):\n        \"\"\"Ожидает, пока группа не станет пустой, либо истекает timeout (сек)\"\"\"\n        start_time = time.time()\n        while time.time() - start_time < timeout:\n            board = client.post(**get_board_endpoint(board_id, space_id)).json()[\"payload\"][\"board\"]\n            tasks = board[\"taskOrderByGroups\"].get(group_id, [])\n            if not tasks:\n                return\n            time.sleep(poll_interval)\n        # Если tasks не пуст — значит, что-то не так\n>       raise AssertionError(f\"Группа {group_id} осталась не пустой: {tasks}\")\nE       AssertionError: Группа 6866731185fb8d104544e827 осталась не пустой: ['68ef44ae165f71382bd72950']\n\ntests/test_backend/task/utils.py:224: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1760510565520,"stop":1760510565521,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1760510565520,"stop":1760510565520,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1760510565520,"stop":1760510565520,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1760510565521,"stop":1760510566146,"duration":625},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1760510565521,"stop":1760510565521,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1760510566146,"stop":1760510566736,"duration":590},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_project","time":{"start":1760510566736,"stop":1760510566976,"duration":240},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1760510566978,"stop":1760510567566,"duration":588},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_board","time":{"start":1760510571366,"stop":1760510571911,"duration":545},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_task_in_main","time":{"start":1760511139257,"stop":1760511139257,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Тест проверяет корректность позиционирования задач при создании новой задачи в группе на доске (board).\n    ","status":"failed","statusMessage":"AssertionError: Группа 6866731185fb8d104544e827 осталась не пустой: ['68ef44ae165f71382bd72950']","statusTrace":"request = <FixtureRequest for <Function test_task_indexing_in_group[ten_tasks_index_10]>>\ncreate_task_in_main = <function create_task_in_main.<locals>._create_task at 0x7f92765dcd60>\nmain_space = '6866309d85fb8d104544a61e', main_board = '6866731185fb8d104544e826'\ninitial_tasks = 10, create_index = 10, expected_position = 10\ntitle = 'Группа из 10 тасок, индекс=10'\n\n    @pytest.mark.parametrize(\n        \"initial_tasks, create_index, expected_position, title\",\n        [\n            (0, None, 0, \"Пустая группа, индекс не указан\"),\n            (0, 0, 0, \"Пустая группа, индекс=0\"),\n            (0, 10, 0, \"Пустая группа, индекс=10\"),\n            (10, 2, 2, \"Группа из 10 тасок, индекс=2\"),\n            (10, 999, 10, \"Группа из 10 тасок, индекс=999\"),\n            (10, 0, 0, \"Группа из 10 тасок, индекс=0\"),\n            (10, 10,10, \"Группа из 10 тасок, индекс=10\"),\n            (10,9,9, \"Группа из 10 тасок, индекс=9\")\n        ],\n        ids=[\n            \"empty_group_no_index\",\n            \"empty_group_index_0\",\n            \"empty_group_index_10\",\n            \"ten_tasks_index_2\",\n            \"ten_tasks_index_999\",\n            \"ten_tasks_index_0\",\n            \"ten_tasks_index_10\",\n            \"ten_tasks_index_9\"\n        ]\n    )\n    def test_task_indexing_in_group(\n        request, create_task_in_main, main_space, main_board, initial_tasks, create_index, expected_position, title,\n    ):\n        \"\"\"\n        Тест проверяет корректность позиционирования задач при создании новой задачи в группе на доске (board).\n        \"\"\"\n    \n        with allure.step(\"Получить ID первой группы на доске\"):\n            client = request.getfixturevalue(\"owner_client\")\n            resp = client.post(**get_board_endpoint(main_board, main_space))\n            group_id = resp.json()[\"payload\"][\"board\"][\"groups\"][0][\"_id\"]\n    \n        with allure.step(\"Очистить все задачи в выбранной группе\"):\n            delete_all_group_tasks(client, main_board, main_space, group_id)\n    \n        try:\n            with allure.step(\"Убедиться, что группа действительно пуста\"):\n                for try_num in range(5):\n                    board = client.post(**get_board_endpoint(main_board, main_space)).json()[\"payload\"][\"board\"]\n                    task_ids = board[\"taskOrderByGroups\"].get(group_id, [])\n                    if not task_ids:\n                        break\n                    time.sleep(1)\n                assert not task_ids, f\"Группа не пуста после очистки! Остались: {task_ids}\"\n    \n            with allure.step(\"Добавить стартовые задачи в группу (если требуется по сценарию)\"):\n                for i in range(initial_tasks):\n                    create_task_in_main(\n                        client_fixture=\"owner_client\",\n                        group=group_id,\n                        index=i,\n                        name=f\"Initial Task #{i}\"\n                    )\n    \n            with allure.step(f\"Создать новую тестовую задачу: {title}\"):\n                params = {\n                    \"client_fixture\": \"owner_client\",\n                    \"group\": group_id,\n                    \"name\": \"Target Task!!!!\",\n                    \"index\": create_index,\n                }\n                target_task = create_task_in_main(**params)\n                target_task_id = target_task[\"_id\"]\n    \n            with allure.step(\"Запросить список задач группы и проверить корректность порядка\"):\n                board = client.post(**get_board_endpoint(main_board, main_space)).json()[\"payload\"][\"board\"]\n                task_ids = board[\"taskOrderByGroups\"][group_id]\n                assert target_task_id in task_ids, \"Задача должна быть в списке задач группы\"\n                actual_position = task_ids.index(target_task_id)\n                assert actual_position == expected_position, (\n                    f\"Задача в позиции {actual_position}, ожидалось {expected_position}. Список: {task_ids}\"\n                )\n    \n            # Проверка количества задач: всегда должно быть initial_tasks + 1\n                expected_count = initial_tasks + 1\n                assert len(task_ids) == expected_count, (\n                    f\"Ожидалось задач: {expected_count}, получено: {len(task_ids)}.\\n\"\n                    f\"Список задач: {task_ids}\"\n                )\n                if expected_count == 1:\n                    assert actual_position == 0, \"Если задача единственная, её индекс должен быть 0\"\n                    assert task_ids == [target_task_id], (\n                        f\"Единственная задача должна быть именно той, что создана сейчас. Получено: {task_ids}\"\n                    )\n        finally:\n            with allure.step(\"Финальная очистка группы после завершения теста\"):\n                safe_delete_all_tasks_in_group(client, main_board, main_space, group_id)\n>               wait_group_empty(client, main_board, main_space, group_id)\n\ntests/test_backend/task/test_task_indexing_in_group.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nclient = <tests.core.client.APIClient object at 0x7f9276887090>\nboard_id = '6866731185fb8d104544e826', space_id = '6866309d85fb8d104544a61e'\ngroup_id = '6866731185fb8d104544e827', timeout = 10, poll_interval = 0.5\n\n    def wait_group_empty(client, board_id, space_id, group_id, timeout=10, poll_interval=0.5):\n        \"\"\"Ожидает, пока группа не станет пустой, либо истекает timeout (сек)\"\"\"\n        start_time = time.time()\n        while time.time() - start_time < timeout:\n            board = client.post(**get_board_endpoint(board_id, space_id)).json()[\"payload\"][\"board\"]\n            tasks = board[\"taskOrderByGroups\"].get(group_id, [])\n            if not tasks:\n                return\n            time.sleep(poll_interval)\n        # Если tasks не пуст — значит, что-то не так\n>       raise AssertionError(f\"Группа {group_id} осталась не пустой: {tasks}\")\nE       AssertionError: Группа 6866731185fb8d104544e827 осталась не пустой: ['68ef44ae165f71382bd72950']\n\ntests/test_backend/task/utils.py:224: AssertionError","steps":[{"name":"Получить ID первой группы на доске","time":{"start":1760511139257,"stop":1760511139510,"duration":253},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Очистить все задачи в выбранной группе","time":{"start":1760511139510,"stop":1760511139771,"duration":261},"status":"passed","steps":[{"name":"Удаляем все задачи из группы 6866731185fb8d104544e827","time":{"start":1760511139510,"stop":1760511139771,"duration":261},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Убедиться, что группа действительно пуста","time":{"start":1760511139771,"stop":1760511140010,"duration":239},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Добавить стартовые задачи в группу (если требуется по сценарию)","time":{"start":1760511140010,"stop":1760511148536,"duration":8526},"status":"passed","steps":[{"name":"Получение клиента для owner_client","time":{"start":1760511140010,"stop":1760511140010,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Запрашиваем данные борды с ID: 6866731185fb8d104544e826","time":{"start":1760511140010,"stop":1760511140248,"duration":238},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем наличие typesList","time":{"start":1760511140249,"stop":1760511140249,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Рандомно выбираем `type` из typesList","time":{"start":1760511140249,"stop":1760511140249,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Получение клиента для owner_client","time":{"start":1760511140800,"stop":1760511140800,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Запрашиваем данные борды с ID: 6866731185fb8d104544e826","time":{"start":1760511140800,"stop":1760511141043,"duration":243},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем наличие typesList","time":{"start":1760511141044,"stop":1760511141044,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Рандомно выбираем `type` из typesList","time":{"start":1760511141044,"stop":1760511141044,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Получение клиента для owner_client","time":{"start":1760511141592,"stop":1760511141592,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Запрашиваем данные борды с ID: 6866731185fb8d104544e826","time":{"start":1760511141592,"stop":1760511141885,"duration":293},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем наличие typesList","time":{"start":1760511141885,"stop":1760511141885,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Рандомно выбираем `type` из typesList","time":{"start":1760511141885,"stop":1760511141885,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Получение клиента для owner_client","time":{"start":1760511142598,"stop":1760511142598,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Запрашиваем данные борды с ID: 6866731185fb8d104544e826","time":{"start":1760511142598,"stop":1760511142837,"duration":239},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем наличие typesList","time":{"start":1760511142837,"stop":1760511142837,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Рандомно выбираем `type` из typesList","time":{"start":1760511142837,"stop":1760511142837,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Получение клиента для owner_client","time":{"start":1760511143384,"stop":1760511143384,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Запрашиваем данные борды с ID: 6866731185fb8d104544e826","time":{"start":1760511143384,"stop":1760511144071,"duration":687},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем наличие typesList","time":{"start":1760511144071,"stop":1760511144071,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Рандомно выбираем `type` из typesList","time":{"start":1760511144071,"stop":1760511144071,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Получение клиента для owner_client","time":{"start":1760511144620,"stop":1760511144620,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Запрашиваем данные борды с ID: 6866731185fb8d104544e826","time":{"start":1760511144620,"stop":1760511144856,"duration":236},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем наличие typesList","time":{"start":1760511144856,"stop":1760511144856,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Рандомно выбираем `type` из typesList","time":{"start":1760511144856,"stop":1760511144856,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Получение клиента для owner_client","time":{"start":1760511145414,"stop":1760511145414,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Запрашиваем данные борды с ID: 6866731185fb8d104544e826","time":{"start":1760511145414,"stop":1760511145653,"duration":239},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем наличие typesList","time":{"start":1760511145653,"stop":1760511145653,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Рандомно выбираем `type` из typesList","time":{"start":1760511145653,"stop":1760511145653,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Получение клиента для owner_client","time":{"start":1760511146215,"stop":1760511146215,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Запрашиваем данные борды с ID: 6866731185fb8d104544e826","time":{"start":1760511146215,"stop":1760511146462,"duration":247},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем наличие typesList","time":{"start":1760511146462,"stop":1760511146462,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Рандомно выбираем `type` из typesList","time":{"start":1760511146462,"stop":1760511146462,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Получение клиента для owner_client","time":{"start":1760511147008,"stop":1760511147008,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Запрашиваем данные борды с ID: 6866731185fb8d104544e826","time":{"start":1760511147008,"stop":1760511147252,"duration":244},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем наличие typesList","time":{"start":1760511147252,"stop":1760511147252,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Рандомно выбираем `type` из typesList","time":{"start":1760511147252,"stop":1760511147252,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Получение клиента для owner_client","time":{"start":1760511147761,"stop":1760511147761,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Запрашиваем данные борды с ID: 6866731185fb8d104544e826","time":{"start":1760511147761,"stop":1760511147996,"duration":235},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем наличие typesList","time":{"start":1760511147996,"stop":1760511147996,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Рандомно выбираем `type` из typesList","time":{"start":1760511147996,"stop":1760511147996,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":40,"attachmentsCount":0,"hasContent":true},{"name":"Создать новую тестовую задачу: Группа из 10 тасок, индекс=10","time":{"start":1760511148536,"stop":1760511149338,"duration":802},"status":"passed","steps":[{"name":"Получение клиента для owner_client","time":{"start":1760511148536,"stop":1760511148536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Запрашиваем данные борды с ID: 6866731185fb8d104544e826","time":{"start":1760511148536,"stop":1760511148779,"duration":243},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем наличие typesList","time":{"start":1760511148779,"stop":1760511148779,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Рандомно выбираем `type` из typesList","time":{"start":1760511148779,"stop":1760511148779,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true},{"name":"Запросить список задач группы и проверить корректность порядка","time":{"start":1760511149338,"stop":1760511149576,"duration":238},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Финальная очистка группы после завершения теста","time":{"start":1760511149576,"stop":1760511169008,"duration":19432},"status":"failed","statusMessage":"AssertionError: Группа 6866731185fb8d104544e827 осталась не пустой: ['68ef44ae165f71382bd72950']\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/task/test_task_indexing_in_group.py\", line 101, in test_task_indexing_in_group\n    wait_group_empty(client, main_board, main_space, group_id)\n  File \"/home/runner/work/autotests/autotests/tests/test_backend/task/utils.py\", line 224, in wait_group_empty\n    raise AssertionError(f\"Группа {group_id} осталась не пустой: {tasks}\")\n","steps":[{"name":"Удаляем все задачи из группы 6866731185fb8d104544e827 (безаварийно)","time":{"start":1760511149576,"stop":1760511158280,"duration":8704},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":53,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.task"},{"name":"suite","value":"test_task_indexing_in_group"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2553-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.task.test_task_indexing_in_group"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"create_index","value":"10"},{"name":"expected_position","value":"10"},{"name":"initial_tasks","value":"10"},{"name":"title","value":"'Группа из 10 тасок, индекс=10'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":15},"items":[{"uid":"83886f318f525f43","reportUrl":"https://vaizcom.github.io/autotests/372//#testresult/83886f318f525f43","status":"passed","time":{"start":1760449558580,"stop":1760449576243,"duration":17663}},{"uid":"9b9dfce3f22c735f","reportUrl":"https://vaizcom.github.io/autotests/371//#testresult/9b9dfce3f22c735f","status":"passed","time":{"start":1760447309136,"stop":1760447325521,"duration":16385}},{"uid":"b1af1ef2b1a7779c","reportUrl":"https://vaizcom.github.io/autotests/370//#testresult/b1af1ef2b1a7779c","status":"failed","statusDetails":"AssertionError: Группа 6866731185fb8d104544e827 осталась не пустой: ['68edf5efa3af031bc9d3d491', '68edf3b6a3af031bc9d3c997', '68edf3b5a3af031bc9d3c8f3', '68edf3b3a3af031bc9d3c84d']","time":{"start":1760428307192,"stop":1760428342536,"duration":35344}},{"uid":"96875db610e6b5e5","reportUrl":"https://vaizcom.github.io/autotests/369//#testresult/96875db610e6b5e5","status":"passed","time":{"start":1760360472189,"stop":1760360492912,"duration":20723}},{"uid":"f4f831571676982d","reportUrl":"https://vaizcom.github.io/autotests/368//#testresult/f4f831571676982d","status":"passed","time":{"start":1760342434232,"stop":1760342453410,"duration":19178}},{"uid":"5d93abebccf25912","reportUrl":"https://vaizcom.github.io/autotests/367//#testresult/5d93abebccf25912","status":"failed","statusDetails":"AssertionError: Группа 6866731185fb8d104544e827 осталась не пустой: ['68e8fcf620bb30c7a47e1935', '68e8fce520bb30c7a47e17a5']","time":{"start":1760102254445,"stop":1760102281595,"duration":27150}},{"uid":"1646e0372c3dd2f6","reportUrl":"https://vaizcom.github.io/autotests/366//#testresult/1646e0372c3dd2f6","status":"passed","time":{"start":1760099145283,"stop":1760099165550,"duration":20267}},{"uid":"dd2e7a0eb3263484","reportUrl":"https://vaizcom.github.io/autotests/365//#testresult/dd2e7a0eb3263484","status":"passed","time":{"start":1760087595327,"stop":1760087616091,"duration":20764}},{"uid":"1aea16cceeba083d","reportUrl":"https://vaizcom.github.io/autotests/364//#testresult/1aea16cceeba083d","status":"failed","statusDetails":"AssertionError: Группа 6866731185fb8d104544e827 осталась не пустой: ['68e77cc62b66e4965012913b']","time":{"start":1760017758236,"stop":1760017772668,"duration":14432}},{"uid":"b583306e0b039a44","reportUrl":"https://vaizcom.github.io/autotests/363//#testresult/b583306e0b039a44","status":"failed","statusDetails":"AssertionError: Группа 6866731185fb8d104544e827 осталась не пустой: ['68e77cc62b66e4965012913b']","time":{"start":1760014830771,"stop":1760014843832,"duration":13061}},{"uid":"282ea9989af27f49","reportUrl":"https://vaizcom.github.io/autotests/362//#testresult/282ea9989af27f49","status":"failed","statusDetails":"AssertionError: Группа 6866731185fb8d104544e827 осталась не пустой: ['68e77cc62b66e4965012913b']","time":{"start":1760013941075,"stop":1760013954576,"duration":13501}},{"uid":"fe5851821ec95b15","reportUrl":"https://vaizcom.github.io/autotests/361//#testresult/fe5851821ec95b15","status":"passed","time":{"start":1759931842880,"stop":1759931856774,"duration":13894}},{"uid":"1236305380b199b7","reportUrl":"https://vaizcom.github.io/autotests/360//#testresult/1236305380b199b7","status":"passed","time":{"start":1759916110830,"stop":1759916123125,"duration":12295}},{"uid":"b032bf40af318a79","reportUrl":"https://vaizcom.github.io/autotests/359//#testresult/b032bf40af318a79","status":"failed","statusDetails":"AssertionError: Группа 6866731185fb8d104544e827 осталась не пустой: ['68e615e40354864d83fed360']","time":{"start":1759909403952,"stop":1759909417562,"duration":13610}}]},"tags":["backend"]},"source":"e40ff87e473bb3a9.json","parameterValues":["10","10","10","'Группа из 10 тасок, индекс=10'"]}