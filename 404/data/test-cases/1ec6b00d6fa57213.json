{"uid":"1ec6b00d6fa57213","name":"test_edit_document_invalid_id[empty]","fullName":"tests.test_backend.document.test_edit_document#test_edit_document_invalid_id","historyId":"6ce0765815d25347d71cae2354e4f6a4","time":{"start":1761912190034,"stop":1761912190034,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761912080667,"stop":1761912081009,"duration":342},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_edit_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_edit_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"400"},{"name":"fake_id","value":"''"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":54},"items":[{"uid":"92b04337a32d1512","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/92b04337a32d1512","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911302594,"stop":1761911302594,"duration":0}},{"uid":"54bb3d7968d8ba69","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/54bb3d7968d8ba69","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910913138,"stop":1761910913138,"duration":0}},{"uid":"7b5fc672c1961134","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/7b5fc672c1961134","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910614881,"stop":1761910614881,"duration":0}},{"uid":"6c1010e60d7b9509","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/6c1010e60d7b9509","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910007617,"stop":1761910007617,"duration":0}},{"uid":"5768a2edcc4152b8","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/5768a2edcc4152b8","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900038743,"stop":1761900038743,"duration":0}},{"uid":"a25a313b457c3bc0","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/a25a313b457c3bc0","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835059301,"stop":1761835059301,"duration":0}},{"uid":"22a20d74b86e2421","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/22a20d74b86e2421","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834643904,"stop":1761834643904,"duration":0}},{"uid":"c2c1f10d8717c2ac","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/c2c1f10d8717c2ac","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833480109,"stop":1761833480109,"duration":0}},{"uid":"103f0bfba0d0701b","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/103f0bfba0d0701b","status":"passed","time":{"start":1761821734758,"stop":1761821734939,"duration":181}},{"uid":"e621a007c0297f61","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/e621a007c0297f61","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818768439,"stop":1761818768439,"duration":0}},{"uid":"86009536462f66dc","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/86009536462f66dc","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748632242,"stop":1761748632242,"duration":0}},{"uid":"cc00e78f1502dee","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/cc00e78f1502dee","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747908129,"stop":1761747908129,"duration":0}},{"uid":"ad543ec4262baf09","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/ad543ec4262baf09","status":"passed","time":{"start":1761746905835,"stop":1761746906133,"duration":298}},{"uid":"d68e79d1162df331","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/d68e79d1162df331","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745740330,"stop":1761745740330,"duration":0}},{"uid":"8493e5c8e0ce714c","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/8493e5c8e0ce714c","status":"passed","time":{"start":1761576740898,"stop":1761576741132,"duration":234}},{"uid":"d319c50f2ba96d9c","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/d319c50f2ba96d9c","status":"passed","time":{"start":1761557383688,"stop":1761557383933,"duration":245}},{"uid":"5cce114b2f9d2991","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/5cce114b2f9d2991","status":"passed","time":{"start":1761308606455,"stop":1761308606647,"duration":192}},{"uid":"6e28fc9cd4cbc83","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/6e28fc9cd4cbc83","status":"passed","time":{"start":1761306769312,"stop":1761306769517,"duration":205}},{"uid":"423653f8bf801809","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/423653f8bf801809","status":"passed","time":{"start":1761137062684,"stop":1761137063085,"duration":401}},{"uid":"f7e249b44a51238f","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/f7e249b44a51238f","status":"passed","time":{"start":1761135744566,"stop":1761135744819,"duration":253}}]},"tags":["backend"]},"source":"1ec6b00d6fa57213.json","parameterValues":["400","''"]}