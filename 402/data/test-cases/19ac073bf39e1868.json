{"uid":"19ac073bf39e1868","name":"test_board_name_validation[valid name with spaces]","fullName":"tests.test_backend.board.board_validation_test#test_board_name_validation","historyId":"7c1aabbc078ff4c5e92ed96b2f0b1421","time":{"start":1761910801596,"stop":1761910801596,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f1c6962ef90>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910792963,"stop":1761910793391,"duration":428},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761910801404,"stop":1761910801539,"duration":135},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.board"},{"name":"suite","value":"board_validation_test"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2545-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.board.board_validation_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"200"},{"name":"name","value":"'Имя с пробелами'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":52},"items":[{"uid":"be449bfbed7a19c2","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/be449bfbed7a19c2","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910503937,"stop":1761910503937,"duration":0}},{"uid":"3e2ac03b076e03bd","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/3e2ac03b076e03bd","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761909866964,"stop":1761909866964,"duration":0}},{"uid":"1834dddce32e664f","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/1834dddce32e664f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761899900900,"stop":1761899900900,"duration":0}},{"uid":"289428ec5a9b2b63","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/289428ec5a9b2b63","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834949882,"stop":1761834949882,"duration":0}},{"uid":"7e91db50d3448d71","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/7e91db50d3448d71","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834497599,"stop":1761834497599,"duration":0}},{"uid":"eeee045079fc6640","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/eeee045079fc6640","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833327312,"stop":1761833327312,"duration":0}},{"uid":"157e74baf654da26","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/157e74baf654da26","status":"passed","time":{"start":1761821493143,"stop":1761821493355,"duration":212}},{"uid":"6b57f735e2770aa7","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/6b57f735e2770aa7","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818627570,"stop":1761818627570,"duration":0}},{"uid":"accd0b6efb566117","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/accd0b6efb566117","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748512151,"stop":1761748512151,"duration":0}},{"uid":"bdc8d5e117af3105","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/bdc8d5e117af3105","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747771737,"stop":1761747771737,"duration":0}},{"uid":"775d9052ec8ba229","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/775d9052ec8ba229","status":"passed","time":{"start":1761746603475,"stop":1761746603800,"duration":325}},{"uid":"4bd3415642756259","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/4bd3415642756259","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745637024,"stop":1761745637024,"duration":0}},{"uid":"3398e675aad1e535","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/3398e675aad1e535","status":"passed","time":{"start":1761576483217,"stop":1761576483454,"duration":237}},{"uid":"2458531c12a003ff","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/2458531c12a003ff","status":"passed","time":{"start":1761557140890,"stop":1761557141119,"duration":229}},{"uid":"4d4c3310c451c8f3","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/4d4c3310c451c8f3","status":"passed","time":{"start":1761308364445,"stop":1761308364688,"duration":243}},{"uid":"49a26827501df49f","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/49a26827501df49f","status":"passed","time":{"start":1761306511938,"stop":1761306512165,"duration":227}},{"uid":"b52f424943b8796c","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/b52f424943b8796c","status":"passed","time":{"start":1761136806050,"stop":1761136806318,"duration":268}},{"uid":"b166ec267791a060","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/b166ec267791a060","status":"passed","time":{"start":1761135457099,"stop":1761135457643,"duration":544}},{"uid":"315871429dc31191","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/315871429dc31191","status":"passed","time":{"start":1761133924195,"stop":1761133924492,"duration":297}},{"uid":"db97af81cce6bc6b","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/db97af81cce6bc6b","status":"passed","time":{"start":1761128221375,"stop":1761128221668,"duration":293}}]},"tags":["backend"]},"source":"19ac073bf39e1868.json","parameterValues":["200","'Имя с пробелами'"]}