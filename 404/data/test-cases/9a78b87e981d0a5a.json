{"uid":"9a78b87e981d0a5a","name":"Проверка создания нескольких сабтасков с разными milestone, также не наследует milestone родителя.","fullName":"tests.test_backend.task_service.create_task.test_subtask_milestones_from_payload#test_create_subtasks_with_various_milestones","historyId":"c4f5e7225414309e2adc310854fba40f","time":{"start":1761921893403,"stop":1761921893522,"duration":119},"description":"\n    Создание сабтасков с разными milestone.\n\n    Шаги:\n    1. Получить ID milestone для родителя (A), сабтасков (B и C).\n    2. Создать родительскую задачу.\n    3. Сформировать payload с несколькими сабтасками (разные milestone, пустой milestone).\n    4. Создать сабтаски.\n    5. Проверить, что у каждого сабтаска свой milestone/отсутствие milestone.\n    6. Удалить все созданные сабтаски и родителя.\n    ","descriptionHtml":"<pre><code>Создание сабтасков с разными milestone.\n\nШаги:\n1. Получить ID milestone для родителя (A), сабтасков (B и C).\n2. Создать родительскую задачу.\n3. Сформировать payload с несколькими сабтасками (разные milestone, пустой milestone).\n4. Создать сабтаски.\n5. Проверить, что у каждого сабтаска свой milestone/отсутствие milestone.\n6. Удалить все созданные сабтаски и родителя.\n</code></pre>\n","status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api.vaiz.dev/v4/GetMilestones","statusTrace":"create_task_in_main = <function create_task_in_main.<locals>._create_task at 0x7fc7d0f37ba0>\nowner_client = <tests.core.client.APIClient object at 0x7fc7d133bfd0>\nmain_space = '6866309d85fb8d104544a61e', main_board = '6866731185fb8d104544e826'\n\n    @allure.parent_suite(\"create_task\")\n    @allure.title(\"Проверка создания нескольких сабтасков с разными milestone, также не наследует milestone родителя.\")\n    def test_create_subtasks_with_various_milestones(\n        create_task_in_main, owner_client, main_space, main_board\n    ):\n        \"\"\"\n        Создание сабтасков с разными milestone.\n    \n        Шаги:\n        1. Получить ID milestone для родителя (A), сабтасков (B и C).\n        2. Создать родительскую задачу.\n        3. Сформировать payload с несколькими сабтасками (разные milestone, пустой milestone).\n        4. Создать сабтаски.\n        5. Проверить, что у каждого сабтаска свой milestone/отсутствие milestone.\n        6. Удалить все созданные сабтаски и родителя.\n        \"\"\"\n        with allure.step(\"Получаем ID milestone для родителя (A)\"):\n>           parent_ms_id = get_parent_ms_1(owner_client, main_space, main_board)\n\ntests/test_backend/task_service/create_task/test_subtask_milestones_from_payload.py:110: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_backend/task_service/create_task/utils.py:238: in get_parent_ms_1\n    return get_named_milestone_id(client, space_id, board_id, \"parent_ms_1\")\ntests/test_backend/task_service/create_task/utils.py:229: in get_named_milestone_id\n    resp.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api.vaiz.dev/v4/GetMilestones\n\n/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/requests/models.py:1024: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761921763685,"stop":1761921763685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761921763685,"stop":1761921764117,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1761921767245,"stop":1761921767518,"duration":273},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1761921767518,"stop":1761921767725,"duration":207},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_project","time":{"start":1761921767725,"stop":1761921768196,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_board","time":{"start":1761921771027,"stop":1761921771249,"duration":222},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_task_in_main","time":{"start":1761921893402,"stop":1761921893402,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Создание сабтасков с разными milestone.\n\n    Шаги:\n    1. Получить ID milestone для родителя (A), сабтасков (B и C).\n    2. Создать родительскую задачу.\n    3. Сформировать payload с несколькими сабтасками (разные milestone, пустой milestone).\n    4. Создать сабтаски.\n    5. Проверить, что у каждого сабтаска свой milestone/отсутствие milestone.\n    6. Удалить все созданные сабтаски и родителя.\n    ","status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api.vaiz.dev/v4/GetMilestones","statusTrace":"create_task_in_main = <function create_task_in_main.<locals>._create_task at 0x7fc7d0f37ba0>\nowner_client = <tests.core.client.APIClient object at 0x7fc7d133bfd0>\nmain_space = '6866309d85fb8d104544a61e', main_board = '6866731185fb8d104544e826'\n\n    @allure.parent_suite(\"create_task\")\n    @allure.title(\"Проверка создания нескольких сабтасков с разными milestone, также не наследует milestone родителя.\")\n    def test_create_subtasks_with_various_milestones(\n        create_task_in_main, owner_client, main_space, main_board\n    ):\n        \"\"\"\n        Создание сабтасков с разными milestone.\n    \n        Шаги:\n        1. Получить ID milestone для родителя (A), сабтасков (B и C).\n        2. Создать родительскую задачу.\n        3. Сформировать payload с несколькими сабтасками (разные milestone, пустой milestone).\n        4. Создать сабтаски.\n        5. Проверить, что у каждого сабтаска свой milestone/отсутствие milestone.\n        6. Удалить все созданные сабтаски и родителя.\n        \"\"\"\n        with allure.step(\"Получаем ID milestone для родителя (A)\"):\n>           parent_ms_id = get_parent_ms_1(owner_client, main_space, main_board)\n\ntests/test_backend/task_service/create_task/test_subtask_milestones_from_payload.py:110: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_backend/task_service/create_task/utils.py:238: in get_parent_ms_1\n    return get_named_milestone_id(client, space_id, board_id, \"parent_ms_1\")\ntests/test_backend/task_service/create_task/utils.py:229: in get_named_milestone_id\n    resp.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api.vaiz.dev/v4/GetMilestones\n\n/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/requests/models.py:1024: HTTPError","steps":[{"name":"Получаем ID milestone для родителя (A)","time":{"start":1761921893403,"stop":1761921893521,"duration":118},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api.vaiz.dev/v4/GetMilestones\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/task_service/create_task/test_subtask_milestones_from_payload.py\", line 110, in test_create_subtasks_with_various_milestones\n    parent_ms_id = get_parent_ms_1(owner_client, main_space, main_board)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/test_backend/task_service/create_task/utils.py\", line 238, in get_parent_ms_1\n    return get_named_milestone_id(client, space_id, board_id, \"parent_ms_1\")\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/test_backend/task_service/create_task/utils.py\", line 229, in get_named_milestone_id\n    resp.raise_for_status()\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/requests/models.py\", line 1024, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"create_task"},{"name":"tag","value":"backend"},{"name":"suite","value":"test_subtask_milestones_from_payload"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2549-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.task_service.create_task.test_subtask_milestones_from_payload"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":14,"skipped":0,"passed":9,"unknown":0,"total":23},"items":[{"uid":"d5fb387c78d8b4be","reportUrl":"https://vaizcom.github.io/autotests/404//#testresult/d5fb387c78d8b4be","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api.vaiz.dev/v4/GetMilestones","time":{"start":1761912204696,"stop":1761912204824,"duration":128}},{"uid":"d1d01ac25ea23024","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/d1d01ac25ea23024","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api.vaiz.dev/v4/GetMilestones","time":{"start":1761911321551,"stop":1761911321724,"duration":173}},{"uid":"d33177b3c5de6cf1","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/d33177b3c5de6cf1","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","time":{"start":1761910929574,"stop":1761910929688,"duration":114}},{"uid":"fb8c4a1f2f92f90c","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/fb8c4a1f2f92f90c","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","time":{"start":1761910630861,"stop":1761910630978,"duration":117}},{"uid":"bc1794a9c174b0b3","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/bc1794a9c174b0b3","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","time":{"start":1761910027658,"stop":1761910027829,"duration":171}},{"uid":"4797a080fe68d019","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/4797a080fe68d019","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-uat.vaiz.dev/v4/GetMilestones","time":{"start":1761900059221,"stop":1761900059397,"duration":176}},{"uid":"760a3a70fa58c6c3","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/760a3a70fa58c6c3","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api.vaiz.dev/v4/GetMilestones","time":{"start":1761835074551,"stop":1761835074670,"duration":119}},{"uid":"5720ec877684e7ed","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/5720ec877684e7ed","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-uat.vaiz.dev/v4/GetMilestones","time":{"start":1761834665676,"stop":1761834665872,"duration":196}},{"uid":"e57b983fe1cd7fde","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/e57b983fe1cd7fde","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","time":{"start":1761833501115,"stop":1761833501298,"duration":183}},{"uid":"4d45c8115dba2780","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/4d45c8115dba2780","status":"passed","time":{"start":1761821881153,"stop":1761821888519,"duration":7366}},{"uid":"abec836f562cbca9","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/abec836f562cbca9","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","time":{"start":1761818787451,"stop":1761818787621,"duration":170}},{"uid":"a776a7113d79f730","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/a776a7113d79f730","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","time":{"start":1761748648869,"stop":1761748648987,"duration":118}},{"uid":"55fbd8e95007356c","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/55fbd8e95007356c","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","time":{"start":1761747926525,"stop":1761747926706,"duration":181}},{"uid":"f30d15cb8fe1b29","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/f30d15cb8fe1b29","status":"passed","time":{"start":1761747116887,"stop":1761747126675,"duration":9788}},{"uid":"585056233ffba7dc","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/585056233ffba7dc","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","time":{"start":1761745755569,"stop":1761745755694,"duration":125}},{"uid":"b959fea4b1a60e4d","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/b959fea4b1a60e4d","status":"passed","time":{"start":1761576953153,"stop":1761576960707,"duration":7554}},{"uid":"bb463d251a000aeb","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/bb463d251a000aeb","status":"passed","time":{"start":1761557534697,"stop":1761557540938,"duration":6241}},{"uid":"445ea49d43e29990","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/445ea49d43e29990","status":"passed","time":{"start":1761308770273,"stop":1761308776311,"duration":6038}},{"uid":"f38f234cc69615ba","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/f38f234cc69615ba","status":"passed","time":{"start":1761306939067,"stop":1761306946456,"duration":7389}},{"uid":"3b1b0fd9f5a13811","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/3b1b0fd9f5a13811","status":"passed","time":{"start":1761137224704,"stop":1761137231758,"duration":7054}}]},"tags":["backend"]},"source":"9a78b87e981d0a5a.json","parameterValues":[]}