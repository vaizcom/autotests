{"uid":"2994dc7651f946e","name":"test_get_documents_mismatched_kind_and_id[member-wrong-id]","fullName":"tests.test_backend.document.test_get_documents#test_get_documents_mismatched_kind_and_id","historyId":"55cfb54d281ddec9c0be30591e297e9f","time":{"start":1761921880442,"stop":1761921880442,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fc7d133bfd0>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761921763685,"stop":1761921763685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761921763685,"stop":1761921764117,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761921773063,"stop":1761921773182,"duration":119},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_documents"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2549-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_documents"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case_title","value":"'kind=Member с kindId от Project'"},{"name":"kind","value":"'Member'"},{"name":"wrong_fixture","value":"'temp_project'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":55},"items":[{"uid":"161439d239927a9d","reportUrl":"https://vaizcom.github.io/autotests/404//#testresult/161439d239927a9d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761912191454,"stop":1761912191454,"duration":0}},{"uid":"2d9ac053b30f04d8","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/2d9ac053b30f04d8","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911304438,"stop":1761911304438,"duration":0}},{"uid":"11f43458e320f8f6","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/11f43458e320f8f6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910915105,"stop":1761910915105,"duration":0}},{"uid":"37871883c1aedbcf","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/37871883c1aedbcf","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910616249,"stop":1761910616249,"duration":0}},{"uid":"76d5fc8f7e8b7766","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/76d5fc8f7e8b7766","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910009400,"stop":1761910009400,"duration":0}},{"uid":"269b8426e59b089e","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/269b8426e59b089e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900040492,"stop":1761900040492,"duration":0}},{"uid":"b93696fa0b37b1cb","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/b93696fa0b37b1cb","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835060646,"stop":1761835060646,"duration":0}},{"uid":"8aa7516e7d78e861","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/8aa7516e7d78e861","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834645792,"stop":1761834645792,"duration":0}},{"uid":"42906d9db4df8fb7","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/42906d9db4df8fb7","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833482159,"stop":1761833482159,"duration":0}},{"uid":"858db09e9f66e046","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/858db09e9f66e046","status":"passed","time":{"start":1761821763295,"stop":1761821763479,"duration":184}},{"uid":"697af0980b4da765","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/697af0980b4da765","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818770304,"stop":1761818770304,"duration":0}},{"uid":"c5a2b9f6032f3e02","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/c5a2b9f6032f3e02","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748633577,"stop":1761748633577,"duration":0}},{"uid":"414fe659463e7ad9","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/414fe659463e7ad9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747909886,"stop":1761747909886,"duration":0}},{"uid":"839a0e759dd38e3e","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/839a0e759dd38e3e","status":"passed","time":{"start":1761746953069,"stop":1761746953357,"duration":288}},{"uid":"d7f89143ace21288","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/d7f89143ace21288","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745741723,"stop":1761745741723,"duration":0}},{"uid":"850b5c10c4675bea","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/850b5c10c4675bea","status":"passed","time":{"start":1761576782628,"stop":1761576782984,"duration":356}},{"uid":"284ba17155fd98d8","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/284ba17155fd98d8","status":"passed","time":{"start":1761557417024,"stop":1761557417211,"duration":187}},{"uid":"ab59c8dd89723384","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/ab59c8dd89723384","status":"passed","time":{"start":1761308636827,"stop":1761308637015,"duration":188}},{"uid":"ba669bf844a3f503","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/ba669bf844a3f503","status":"passed","time":{"start":1761306801208,"stop":1761306801427,"duration":219}},{"uid":"d874570a33f7a5b2","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/d874570a33f7a5b2","status":"passed","time":{"start":1761137096822,"stop":1761137097024,"duration":202}}]},"tags":["backend"]},"source":"2994dc7651f946e.json","parameterValues":["'kind=Member с kindId от Project'","'Member'","'temp_project'"]}