{"uid":"262549e2ce860b97","name":"Редактирование кастомного поля типа: Date","fullName":"tests.test_backend.board.test_create_board#test_edit_custom_field_common_fields","historyId":"b5ec783d4e537808a55a4ffe861b08be","time":{"start":1761912081345,"stop":1761912081345,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761912080667,"stop":1761912081009,"duration":342},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.board"},{"name":"suite","value":"test_create_board"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.board.test_create_board"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"field_type","value":"'Date'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":54},"items":[{"uid":"f8315e723df3757a","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/f8315e723df3757a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911173057,"stop":1761911173057,"duration":0}},{"uid":"551ca4bf2ec96246","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/551ca4bf2ec96246","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910801891,"stop":1761910801891,"duration":0}},{"uid":"99c1f0731923dd78","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/99c1f0731923dd78","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910504232,"stop":1761910504232,"duration":0}},{"uid":"d4ec38d78e4b1c7a","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/d4ec38d78e4b1c7a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761909867267,"stop":1761909867267,"duration":0}},{"uid":"6c4f5bbbc4375ec8","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/6c4f5bbbc4375ec8","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761899901191,"stop":1761899901191,"duration":0}},{"uid":"3c6c60850dc3f168","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/3c6c60850dc3f168","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834950175,"stop":1761834950175,"duration":0}},{"uid":"d0fa43165844f6e1","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/d0fa43165844f6e1","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834497940,"stop":1761834497940,"duration":0}},{"uid":"e3600f9d7f8aa72f","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/e3600f9d7f8aa72f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833327573,"stop":1761833327573,"duration":0}},{"uid":"a18bbc87968b8ce3","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/a18bbc87968b8ce3","status":"passed","time":{"start":1761821504088,"stop":1761821504526,"duration":438}},{"uid":"40369447889a96f1","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/40369447889a96f1","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818627855,"stop":1761818627855,"duration":0}},{"uid":"39effb0bb56339a6","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/39effb0bb56339a6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748512441,"stop":1761748512441,"duration":0}},{"uid":"70f190207593b335","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/70f190207593b335","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747772023,"stop":1761747772023,"duration":0}},{"uid":"87f041a11ae050c6","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/87f041a11ae050c6","status":"passed","time":{"start":1761746620192,"stop":1761746620855,"duration":663}},{"uid":"d2acdb5f538bcd8c","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/d2acdb5f538bcd8c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745637312,"stop":1761745637312,"duration":0}},{"uid":"16956746a1d34ae9","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/16956746a1d34ae9","status":"passed","time":{"start":1761576495478,"stop":1761576495961,"duration":483}},{"uid":"860ab69459f16b90","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/860ab69459f16b90","status":"passed","time":{"start":1761557151964,"stop":1761557152408,"duration":444}},{"uid":"5d66ffd809af2acc","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/5d66ffd809af2acc","status":"passed","time":{"start":1761308376182,"stop":1761308376615,"duration":433}},{"uid":"c2614015133be034","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/c2614015133be034","status":"passed","time":{"start":1761306524197,"stop":1761306524663,"duration":466}},{"uid":"e5c6ac9cd08083c2","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/e5c6ac9cd08083c2","status":"passed","time":{"start":1761136818716,"stop":1761136819209,"duration":493}},{"uid":"83b44d0136b69ac8","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/83b44d0136b69ac8","status":"passed","time":{"start":1761135471450,"stop":1761135471989,"duration":539}}]},"tags":["backend"]},"source":"262549e2ce860b97.json","parameterValues":["'Date'"]}