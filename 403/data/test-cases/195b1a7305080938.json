{"uid":"195b1a7305080938","name":"Редактирование кастомного поля типа: Text","fullName":"tests.test_backend.board.test_create_board#test_edit_custom_field_common_fields","historyId":"7474d770648ed9570463a2d702be361f","time":{"start":1761911173036,"stop":1761911173036,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fbc912cb790>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761911162887,"stop":1761911162887,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761911162888,"stop":1761911163517,"duration":629},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761911172524,"stop":1761911172705,"duration":181},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.board"},{"name":"suite","value":"test_create_board"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.board.test_create_board"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"field_type","value":"'Text'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":53},"items":[{"uid":"299ddeb3a6ad860c","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/299ddeb3a6ad860c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910801869,"stop":1761910801869,"duration":0}},{"uid":"808daefc85e88ac5","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/808daefc85e88ac5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910504211,"stop":1761910504211,"duration":0}},{"uid":"f3d17da01c7274c2","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/f3d17da01c7274c2","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761909867245,"stop":1761909867245,"duration":0}},{"uid":"25dcd2956c58d5a5","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/25dcd2956c58d5a5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761899901169,"stop":1761899901169,"duration":0}},{"uid":"5205349253768379","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/5205349253768379","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834950154,"stop":1761834950154,"duration":0}},{"uid":"4ec136a928ed4a37","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/4ec136a928ed4a37","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834497917,"stop":1761834497917,"duration":0}},{"uid":"d8f210ae47b7362a","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/d8f210ae47b7362a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833327554,"stop":1761833327554,"duration":0}},{"uid":"f38402fd0ed26d01","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/f38402fd0ed26d01","status":"passed","time":{"start":1761821502704,"stop":1761821503148,"duration":444}},{"uid":"42911aae0463c1b3","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/42911aae0463c1b3","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818627834,"stop":1761818627834,"duration":0}},{"uid":"209031afa22eb431","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/209031afa22eb431","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748512419,"stop":1761748512419,"duration":0}},{"uid":"fb756d6d8d2e0d7f","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/fb756d6d8d2e0d7f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747772001,"stop":1761747772001,"duration":0}},{"uid":"f6f3efc6c4b1fb8f","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/f6f3efc6c4b1fb8f","status":"passed","time":{"start":1761746618251,"stop":1761746618902,"duration":651}},{"uid":"43054ed3594ec50c","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/43054ed3594ec50c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745637291,"stop":1761745637291,"duration":0}},{"uid":"3eb7d7ff34f8c6f6","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/3eb7d7ff34f8c6f6","status":"passed","time":{"start":1761576493875,"stop":1761576494552,"duration":677}},{"uid":"85a3a547f0bbae1e","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/85a3a547f0bbae1e","status":"passed","time":{"start":1761557150573,"stop":1761557151053,"duration":480}},{"uid":"d147c1d5a49602a2","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/d147c1d5a49602a2","status":"passed","time":{"start":1761308374889,"stop":1761308375318,"duration":429}},{"uid":"fd72674e1180b234","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/fd72674e1180b234","status":"passed","time":{"start":1761306522706,"stop":1761306523230,"duration":524}},{"uid":"a1a6b046ba7d7110","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/a1a6b046ba7d7110","status":"passed","time":{"start":1761136817218,"stop":1761136817732,"duration":514}},{"uid":"549c44bac2a25e36","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/549c44bac2a25e36","status":"passed","time":{"start":1761135469681,"stop":1761135470265,"duration":584}},{"uid":"cec77aeeb6f2c140","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/cec77aeeb6f2c140","status":"passed","time":{"start":1761133934866,"stop":1761133935349,"duration":483}}]},"tags":["backend"]},"source":"195b1a7305080938.json","parameterValues":["'Text'"]}