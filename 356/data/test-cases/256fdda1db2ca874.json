{"uid":"256fdda1db2ca874","name":"Проверка доступа с некорректным ID документа","fullName":"tests.test_backend.document.access_doc.test_matrix_access_docs#test_access_with_invalid_ids","historyId":"ae32a36c285b657aaaf85efde25f58e9","time":{"start":1759837444694,"stop":1759837444868,"duration":174},"description":"\n    Проверяет, что запросы с некорректными document_id или space_id вызывают ошибку.\n    ","descriptionHtml":"<pre><code>Проверяет, что запросы с некорректными document_id или space_id вызывают ошибку.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Ожидался статус 400, получен 503\nassert 503 == 400\n +  where 503 = <Response [503]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f0d403af650>\ndocument_id = 'invalid-id-123', space_id = 'valid-space-id'\nexpected_status = 400, expected_error_code = 'InvalidForm'\n\n    @allure.title('Проверка доступа с некорректным ID документа')\n    @pytest.mark.parametrize(\n        'document_id, space_id, expected_status, expected_error_code',\n        [\n            ('invalid-id-123', 'valid-space-id', 400, 'InvalidForm'),\n            ('valid-document-id', 'invalid-space-id-456', 400, 'InvalidForm'),\n            ('invalid-id-789', 'invalid-space-id', 400, 'InvalidForm'),\n        ],\n        ids=['invalid document_id', 'invalid space_id', 'invalid both'],\n    )\n    def test_access_with_invalid_ids(owner_client, document_id, space_id, expected_status, expected_error_code):\n        \"\"\"\n        Проверяет, что запросы с некорректными document_id или space_id вызывают ошибку.\n        \"\"\"\n        with allure.step(f'Попытка получить доступ к документу {document_id} в пространстве {space_id}'):\n            response = owner_client.post(**get_document_endpoint(document_id=document_id, space_id=space_id))\n    \n        with allure.step(f'Проверка, что статус ответа = {expected_status} и ошибка соответствующая'):\n>           assert response.status_code == expected_status, f'Ожидался статус {expected_status}, получен {response.status_code}'\nE           AssertionError: Ожидался статус 400, получен 503\nE           assert 503 == 400\nE            +  where 503 = <Response [503]>.status_code\n\ntests/test_backend/document/access_doc/test_matrix_access_docs.py:117: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1759837147179,"stop":1759837147495,"duration":316},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Проверяет, что запросы с некорректными document_id или space_id вызывают ошибку.\n    ","status":"failed","statusMessage":"AssertionError: Ожидался статус 400, получен 503\nassert 503 == 400\n +  where 503 = <Response [503]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f0d403af650>\ndocument_id = 'invalid-id-123', space_id = 'valid-space-id'\nexpected_status = 400, expected_error_code = 'InvalidForm'\n\n    @allure.title('Проверка доступа с некорректным ID документа')\n    @pytest.mark.parametrize(\n        'document_id, space_id, expected_status, expected_error_code',\n        [\n            ('invalid-id-123', 'valid-space-id', 400, 'InvalidForm'),\n            ('valid-document-id', 'invalid-space-id-456', 400, 'InvalidForm'),\n            ('invalid-id-789', 'invalid-space-id', 400, 'InvalidForm'),\n        ],\n        ids=['invalid document_id', 'invalid space_id', 'invalid both'],\n    )\n    def test_access_with_invalid_ids(owner_client, document_id, space_id, expected_status, expected_error_code):\n        \"\"\"\n        Проверяет, что запросы с некорректными document_id или space_id вызывают ошибку.\n        \"\"\"\n        with allure.step(f'Попытка получить доступ к документу {document_id} в пространстве {space_id}'):\n            response = owner_client.post(**get_document_endpoint(document_id=document_id, space_id=space_id))\n    \n        with allure.step(f'Проверка, что статус ответа = {expected_status} и ошибка соответствующая'):\n>           assert response.status_code == expected_status, f'Ожидался статус {expected_status}, получен {response.status_code}'\nE           AssertionError: Ожидался статус 400, получен 503\nE           assert 503 == 400\nE            +  where 503 = <Response [503]>.status_code\n\ntests/test_backend/document/access_doc/test_matrix_access_docs.py:117: AssertionError","steps":[{"name":"Попытка получить доступ к документу invalid-id-123 в пространстве valid-space-id","time":{"start":1759837444694,"stop":1759837444868,"duration":174},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверка, что статус ответа = 400 и ошибка соответствующая","time":{"start":1759837444868,"stop":1759837444868,"duration":0},"status":"failed","statusMessage":"AssertionError: Ожидался статус 400, получен 503\nassert 503 == 400\n +  where 503 = <Response [503]>.status_code\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/document/access_doc/test_matrix_access_docs.py\", line 117, in test_access_with_invalid_ids\n    assert response.status_code == expected_status, f'Ожидался статус {expected_status}, получен {response.status_code}'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document.access_doc"},{"name":"suite","value":"test_matrix_access_docs"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2583-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.access_doc.test_matrix_access_docs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"document_id","value":"'invalid-id-123'"},{"name":"expected_error_code","value":"'InvalidForm'"},{"name":"expected_status","value":"400"},{"name":"space_id","value":"'valid-space-id'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":4},"items":[{"uid":"c6afc41a0c50548a","reportUrl":"https://vaizcom.github.io/autotests/355//#testresult/c6afc41a0c50548a","status":"passed","time":{"start":1759836229889,"stop":1759836230038,"duration":149}},{"uid":"c58ca8c7d4b3177d","reportUrl":"https://vaizcom.github.io/autotests/354//#testresult/c58ca8c7d4b3177d","status":"passed","time":{"start":1759835607150,"stop":1759835607286,"duration":136}},{"uid":"da51a3f0c7929b6c","reportUrl":"https://vaizcom.github.io/autotests/353//#testresult/da51a3f0c7929b6c","status":"passed","time":{"start":1759834714264,"stop":1759834714457,"duration":193}}]},"tags":["backend"]},"source":"256fdda1db2ca874.json","parameterValues":["'invalid-id-123'","'InvalidForm'","400","'valid-space-id'"]}