{"uid":"dc52cc86566b9eca","name":"Ошибка при попытке получить борду по несуществующему boardId","fullName":"tests.test_backend.board.test_get_board#test_get_board_with_invalid_id","historyId":"f09982577626a8396b15dc3a57414f73","time":{"start":1761921773566,"stop":1761921773566,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fc7d133bfd0>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761921763685,"stop":1761921763685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761921763685,"stop":1761921764117,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761921773063,"stop":1761921773182,"duration":119},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.board"},{"name":"suite","value":"test_get_board"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2549-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.board.test_get_board"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":55},"items":[{"uid":"af41ca584f8c5ea4","reportUrl":"https://vaizcom.github.io/autotests/404//#testresult/af41ca584f8c5ea4","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761912081380,"stop":1761912081380,"duration":0}},{"uid":"2e5ecf5a7b1d777","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/2e5ecf5a7b1d777","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911173092,"stop":1761911173092,"duration":0}},{"uid":"1a65465a72442752","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/1a65465a72442752","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910801926,"stop":1761910801926,"duration":0}},{"uid":"eda202785dfe1d63","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/eda202785dfe1d63","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910504268,"stop":1761910504268,"duration":0}},{"uid":"5b359ab6f88bfff0","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/5b359ab6f88bfff0","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761909867303,"stop":1761909867303,"duration":0}},{"uid":"7b3206c739ec653d","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/7b3206c739ec653d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761899901226,"stop":1761899901226,"duration":0}},{"uid":"e673ed6283e61702","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/e673ed6283e61702","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834950211,"stop":1761834950211,"duration":0}},{"uid":"67d7cd6a69846637","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/67d7cd6a69846637","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834497978,"stop":1761834497978,"duration":0}},{"uid":"c2a9c206c215856d","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/c2a9c206c215856d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833327604,"stop":1761833327604,"duration":0}},{"uid":"8028e8e04142a6cb","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/8028e8e04142a6cb","status":"passed","time":{"start":1761821506372,"stop":1761821506576,"duration":204}},{"uid":"1918d1a9ffc7a53a","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/1918d1a9ffc7a53a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818627889,"stop":1761818627889,"duration":0}},{"uid":"2f419e62346d834f","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/2f419e62346d834f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748512476,"stop":1761748512476,"duration":0}},{"uid":"a86b9436940c0697","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/a86b9436940c0697","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747772058,"stop":1761747772058,"duration":0}},{"uid":"c5002df6587ea4d","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/c5002df6587ea4d","status":"passed","time":{"start":1761746623428,"stop":1761746623733,"duration":305}},{"uid":"c7427aaaf70147b4","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/c7427aaaf70147b4","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745637347,"stop":1761745637347,"duration":0}},{"uid":"f892a9848a02cec7","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/f892a9848a02cec7","status":"passed","time":{"start":1761576497825,"stop":1761576498029,"duration":204}},{"uid":"f1b67acf7b1d7b1d","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/f1b67acf7b1d7b1d","status":"passed","time":{"start":1761557154223,"stop":1761557154460,"duration":237}},{"uid":"665797f14c4eed75","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/665797f14c4eed75","status":"passed","time":{"start":1761308378413,"stop":1761308378614,"duration":201}},{"uid":"aba34b1ea26c825a","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/aba34b1ea26c825a","status":"passed","time":{"start":1761306527140,"stop":1761306527340,"duration":200}},{"uid":"c808d92f59c519e8","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/c808d92f59c519e8","status":"passed","time":{"start":1761136821170,"stop":1761136821379,"duration":209}}]},"tags":["backend"]},"source":"dc52cc86566b9eca.json","parameterValues":[]}