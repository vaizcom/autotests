{"uid":"aef33c4e8734d470","name":"test_duplicate_document_invalid_id[null]","fullName":"tests.test_backend.document.test_duplicate_document#test_duplicate_document_invalid_id","historyId":"d25b36d8ac3faac98ac7e8d1f79363eb","time":{"start":1761912189719,"stop":1761912189719,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @pytest.fixture(scope='function')\n    def space_id_function(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:228: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"space_id_function","time":{"start":1761912189719,"stop":1761912189846,"duration":127},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 228, in space_id_function\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_duplicate_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_duplicate_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"400"},{"name":"fake_id","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":54},"items":[{"uid":"e336c1e68f284d08","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/e336c1e68f284d08","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911302179,"stop":1761911302179,"duration":0}},{"uid":"a7498af47714c2c8","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/a7498af47714c2c8","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910912831,"stop":1761910912831,"duration":0}},{"uid":"eb14b083161b9f07","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/eb14b083161b9f07","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910614590,"stop":1761910614590,"duration":0}},{"uid":"11f6da9eac3fadde","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/11f6da9eac3fadde","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910007199,"stop":1761910007199,"duration":0}},{"uid":"d826c7c4b64574c6","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/d826c7c4b64574c6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900038292,"stop":1761900038292,"duration":0}},{"uid":"935a70723961b8d1","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/935a70723961b8d1","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835059001,"stop":1761835059001,"duration":0}},{"uid":"da99d1e269e1920c","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/da99d1e269e1920c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834643451,"stop":1761834643451,"duration":0}},{"uid":"d945a5f1bb2efe53","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/d945a5f1bb2efe53","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833479401,"stop":1761833479401,"duration":0}},{"uid":"9d904c7b03cd1216","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/9d904c7b03cd1216","status":"passed","time":{"start":1761821728370,"stop":1761821728704,"duration":334}},{"uid":"9271ab0c13889ce0","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/9271ab0c13889ce0","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818767667,"stop":1761818767667,"duration":0}},{"uid":"83a549a703d3f966","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/83a549a703d3f966","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748631934,"stop":1761748631934,"duration":0}},{"uid":"fff6973c6011e6ac","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/fff6973c6011e6ac","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747907707,"stop":1761747907707,"duration":0}},{"uid":"2ad3b2cae4e07548","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/2ad3b2cae4e07548","status":"passed","time":{"start":1761746897648,"stop":1761746898028,"duration":380}},{"uid":"c55f7cf4840be169","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/c55f7cf4840be169","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745740014,"stop":1761745740014,"duration":0}},{"uid":"7065c9f74a86938a","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/7065c9f74a86938a","status":"passed","time":{"start":1761576732225,"stop":1761576732690,"duration":465}},{"uid":"73074ec5f82a1dde","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/73074ec5f82a1dde","status":"passed","time":{"start":1761557377525,"stop":1761557377880,"duration":355}},{"uid":"eaf0d20c41673b66","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/eaf0d20c41673b66","status":"passed","time":{"start":1761308600948,"stop":1761308601290,"duration":342}},{"uid":"13bffc3dd0a35f5e","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/13bffc3dd0a35f5e","status":"passed","time":{"start":1761306762884,"stop":1761306763402,"duration":518}},{"uid":"312a09df3e8f0778","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/312a09df3e8f0778","status":"passed","time":{"start":1761137056483,"stop":1761137056873,"duration":390}},{"uid":"ad35a5430ca4660","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/ad35a5430ca4660","status":"passed","time":{"start":1761135736874,"stop":1761135737446,"duration":572}}]},"tags":["backend"]},"source":"aef33c4e8734d470.json","parameterValues":["400","None"]}