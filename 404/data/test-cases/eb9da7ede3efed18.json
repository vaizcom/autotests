{"uid":"eb9da7ede3efed18","name":"test_create_document[Project]","fullName":"tests.test_backend.document.test_create_document#test_create_document","historyId":"aac546663882cccf8ab3d1763f8cccd2","time":{"start":1761921877225,"stop":1761921877225,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fc7d133bfd0>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761921763685,"stop":1761921763685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761921763685,"stop":1761921764117,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761921773063,"stop":1761921773182,"duration":119},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_create_document"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2549-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_create_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"kind","value":"'Project'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":55},"items":[{"uid":"d00e72da9135a05e","reportUrl":"https://vaizcom.github.io/autotests/404//#testresult/d00e72da9135a05e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761912188145,"stop":1761912188145,"duration":0}},{"uid":"358e7334daf7694b","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/358e7334daf7694b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911300084,"stop":1761911300084,"duration":0}},{"uid":"9bf41845924d5894","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/9bf41845924d5894","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910911749,"stop":1761910911749,"duration":0}},{"uid":"6e5730e35659cb76","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/6e5730e35659cb76","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910613625,"stop":1761910613625,"duration":0}},{"uid":"14e02cc7003c6ef7","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/14e02cc7003c6ef7","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910005485,"stop":1761910005485,"duration":0}},{"uid":"a67c56e82061965f","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/a67c56e82061965f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900036976,"stop":1761900036976,"duration":0}},{"uid":"3ed67759819e9931","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/3ed67759819e9931","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835057587,"stop":1761835057587,"duration":0}},{"uid":"d4643b51b8f5a2e7","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/d4643b51b8f5a2e7","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834642075,"stop":1761834642075,"duration":0}},{"uid":"df42ed4f5877077b","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/df42ed4f5877077b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833478207,"stop":1761833478207,"duration":0}},{"uid":"ee80b0ccfbcbe3e4","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/ee80b0ccfbcbe3e4","status":"passed","time":{"start":1761821714216,"stop":1761821714443,"duration":227}},{"uid":"14f6ef9e439e79ff","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/14f6ef9e439e79ff","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818766460,"stop":1761818766460,"duration":0}},{"uid":"58444f03d7a55fd4","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/58444f03d7a55fd4","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748630243,"stop":1761748630243,"duration":0}},{"uid":"38c12d17837b892","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/38c12d17837b892","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747905785,"stop":1761747905785,"duration":0}},{"uid":"d9b7cc910bb9eac2","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/d9b7cc910bb9eac2","status":"passed","time":{"start":1761746877395,"stop":1761746877727,"duration":332}},{"uid":"c653656c6c05b6ae","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/c653656c6c05b6ae","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745738262,"stop":1761745738262,"duration":0}},{"uid":"f9c73dfb21b18c3b","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/f9c73dfb21b18c3b","status":"passed","time":{"start":1761576712728,"stop":1761576713024,"duration":296}},{"uid":"ec80870603ad5350","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/ec80870603ad5350","status":"passed","time":{"start":1761557363035,"stop":1761557363267,"duration":232}},{"uid":"4d2cb24467a720fc","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/4d2cb24467a720fc","status":"passed","time":{"start":1761308587206,"stop":1761308587435,"duration":229}},{"uid":"c8f2d89185c5364","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/c8f2d89185c5364","status":"passed","time":{"start":1761306748709,"stop":1761306748975,"duration":266}},{"uid":"d10ec9a7b9b53aac","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/d10ec9a7b9b53aac","status":"passed","time":{"start":1761137041712,"stop":1761137041980,"duration":268}}]},"tags":["backend"]},"source":"eb9da7ede3efed18.json","parameterValues":["'Project'"]}