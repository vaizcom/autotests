{"uid":"6665e3fa68908d12","name":"test_get_document_foreign_access_denied[project]","fullName":"tests.test_backend.document.test_get_document#test_get_document_foreign_access_denied","historyId":"d3aa34fd9fc95da5c7604dce011707b4","time":{"start":1761910615791,"stop":1761910615791,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fce4b119550>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910495818,"stop":1761910495819,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910495819,"stop":1761910496047,"duration":228},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"guest_client","time":{"start":1761910501824,"stop":1761910502079,"duration":255},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761910503762,"stop":1761910503877,"duration":115},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"foreign_space","time":{"start":1761910613779,"stop":1761910614208,"duration":429},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"foreign_space::0","time":{"start":1761910632963,"stop":1761910633160,"duration":197},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"fixture_name","value":"'temp_project'"},{"name":"kind","value":"'Project'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":51},"items":[{"uid":"3c682595e94032a6","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/3c682595e94032a6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910008869,"stop":1761910008869,"duration":0}},{"uid":"5a458e9107e855f2","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/5a458e9107e855f2","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900039983,"stop":1761900039983,"duration":0}},{"uid":"e24ed89890692d7","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/e24ed89890692d7","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835060186,"stop":1761835060186,"duration":0}},{"uid":"8c89227a96486a85","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/8c89227a96486a85","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834645245,"stop":1761834645245,"duration":0}},{"uid":"4af81aacbb314e07","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/4af81aacbb314e07","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833481658,"stop":1761833481658,"duration":0}},{"uid":"12184b011aba3f55","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/12184b011aba3f55","status":"passed","time":{"start":1761821753018,"stop":1761821753411,"duration":393}},{"uid":"d2eb2cb48ecb2892","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/d2eb2cb48ecb2892","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818769790,"stop":1761818769790,"duration":0}},{"uid":"b715e8b7af52af2","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/b715e8b7af52af2","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748633116,"stop":1761748633116,"duration":0}},{"uid":"e77836647ba20687","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/e77836647ba20687","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747909379,"stop":1761747909379,"duration":0}},{"uid":"48c13cd4918dbaa0","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/48c13cd4918dbaa0","status":"passed","time":{"start":1761746934337,"stop":1761746934919,"duration":582}},{"uid":"143cc150a48a0c1f","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/143cc150a48a0c1f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745741259,"stop":1761745741259,"duration":0}},{"uid":"2b49fa50b041db82","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/2b49fa50b041db82","status":"passed","time":{"start":1761576766969,"stop":1761576767430,"duration":461}},{"uid":"202f4a5dbdd642b0","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/202f4a5dbdd642b0","status":"passed","time":{"start":1761557403731,"stop":1761557404312,"duration":581}},{"uid":"eef789e299b45c08","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/eef789e299b45c08","status":"passed","time":{"start":1761308625274,"stop":1761308625697,"duration":423}},{"uid":"c9e33939fc17c3f8","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/c9e33939fc17c3f8","status":"passed","time":{"start":1761306789276,"stop":1761306789707,"duration":431}},{"uid":"a7a0ea28cd9010f2","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/a7a0ea28cd9010f2","status":"passed","time":{"start":1761137084444,"stop":1761137084862,"duration":418}},{"uid":"4054ce1cda0e3e12","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/4054ce1cda0e3e12","status":"passed","time":{"start":1761135770110,"stop":1761135770685,"duration":575}},{"uid":"3f843bf082f6fe08","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/3f843bf082f6fe08","status":"passed","time":{"start":1761134189806,"stop":1761134190242,"duration":436}},{"uid":"fe4c82b29239df10","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/fe4c82b29239df10","status":"passed","time":{"start":1761128563911,"stop":1761128564449,"duration":538}},{"uid":"b3675057b3c5d36b","reportUrl":"https://vaizcom.github.io/autotests/383//#testresult/b3675057b3c5d36b","status":"passed","time":{"start":1761124669376,"stop":1761124669889,"duration":513}}]},"tags":["backend"]},"source":"6665e3fa68908d12.json","parameterValues":["'temp_project'","'Project'"]}