{"uid":"48f3cc3c3f897db6","name":"Проверка доступа к siblings Project-документа: создатель - member, просматривающий - manager","fullName":"tests.test_backend.document.access_doc.test_get_siblings_doc_access#test_get_project_and_space_siblings_docs_access_by_roles","historyId":"55674c3c1dcf625db86cf6bd0a94e356","time":{"start":1759767525327,"stop":1759767525596,"duration":269},"description":"\n    Проверяет доступ к siblings документов при разных комбинациях:\n    - Создателя документа\n    - Просматривающего пользователя\n    - Типа документа (Space/Project)\n\n    Проверки:\n        1. Создание трёх последовательных документов указанной ролью\n        2. Запрос siblings для среднего документа другой ролью\n        3. Проверка статуса ответа и корректности данных siblings\n    ","descriptionHtml":"<pre><code>Проверяет доступ к siblings документов при разных комбинациях:\n- Создателя документа\n- Просматривающего пользователя\n- Типа документа (Space/Project)\n\nПроверки:\n    1. Создание трёх последовательных документов указанной ролью\n    2. Запрос siblings для среднего документа другой ролью\n    3. Проверка статуса ответа и корректности данных siblings\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"request = <FixtureRequest for <Function test_get_project_and_space_siblings_docs_access_by_roles[project_doc-member_docs_by_manager_403]>>\nmain_space = '6866309d85fb8d104544a61e', creator_fixture = 'member_client'\nclient_fixture = 'manager_client', expected_status = 200, kind = 'Project'\ncontainer_fixture = 'main_project'\n\n    @pytest.mark.parametrize(\n        'creator_fixture, client_fixture, expected_status',\n        [\n            ('owner_client', 'owner_client', 200),\n            ('owner_client', 'manager_client', 200),\n            ('owner_client', 'member_client', 200),\n            ('owner_client', 'guest_client', 200),\n            ('manager_client', 'owner_client', 200),\n            ('manager_client', 'manager_client', 200),\n            ('manager_client', 'member_client', 200),\n            ('manager_client', 'guest_client', 200),\n            ('member_client', 'owner_client', 200),\n            ('member_client', 'manager_client', 200),\n            ('member_client', 'member_client', 200),\n            ('member_client', 'guest_client', 200),\n        ],\n        ids=[\n            'owner_self_docs_200',\n            'owner_docs_by_manager_403',\n            'owner_docs_by_member_403',\n            'owner_docs_by_guest_403',\n            'manager_docs_by_owner_403',\n            'manager_self_docs_200',\n            'manager_docs_by_member_403',\n            'manager_docs_by_guest_403',\n            'member_docs_by_owner_403',\n            'member_docs_by_manager_403',\n            'member_self_docs_200',\n            'member_docs_by_guest_403',\n        ],\n    )\n    @pytest.mark.parametrize(\n        'kind, container_fixture',\n        [\n            ('Space', 'main_space'),\n            ('Project', 'main_project'),\n        ],\n        ids=['space_doc', 'project_doc'],\n    )\n    def test_get_project_and_space_siblings_docs_access_by_roles(\n        request, main_space, creator_fixture, client_fixture, expected_status, kind, container_fixture\n    ):\n        \"\"\"\n        Проверяет доступ к siblings документов при разных комбинациях:\n        - Создателя документа\n        - Просматривающего пользователя\n        - Типа документа (Space/Project)\n    \n        Проверки:\n            1. Создание трёх последовательных документов указанной ролью\n            2. Запрос siblings для среднего документа другой ролью\n            3. Проверка статуса ответа и корректности данных siblings\n        \"\"\"\n        creator = request.getfixturevalue(creator_fixture)\n        viewer = request.getfixturevalue(client_fixture)\n        creator_role = creator_fixture.replace('_client', '')\n        viewer_role = client_fixture.replace('_client', '')\n        container_id = request.getfixturevalue(container_fixture)\n    \n        current_date = datetime.now().strftime('%d.%m_%H:%M:%S')\n    \n        allure.dynamic.title(\n            f'Проверка доступа к siblings {kind}-документа: создатель - {creator_role}, просматривающий - {viewer_role}'\n        )\n    \n        doc_ids = []\n        with allure.step(f'Создание трёх {kind}-документов пользователем {creator_role}'):\n            for index in range(3):\n                title = f'{current_date}_{creator_role}_{kind}_Doc_{index}'\n                create_resp = creator.post(\n                    **create_document_endpoint(kind=kind, kind_id=container_id, space_id=main_space, title=title)\n                )\n>               assert (\n                    create_resp.status_code == 200\n                ), f'Ошибка при создании документа {index}: статус {create_resp.status_code}'\nE               AssertionError: Ошибка при создании документа 0: статус 400\nE               assert 400 == 200\nE                +  where 400 = <Response [400]>.status_code\n\ntests/test_backend/document/access_doc/test_get_siblings_doc_access.py:86: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1759767275032,"stop":1759767275032,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1759767275033,"stop":1759767275033,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1759767275033,"stop":1759767275033,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1759767275033,"stop":1759767275653,"duration":620},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1759767275033,"stop":1759767275033,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1759767275653,"stop":1759767276290,"duration":637},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_project","time":{"start":1759767276290,"stop":1759767276592,"duration":302},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"manager_client","time":{"start":1759767278005,"stop":1759767278446,"duration":441},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"member_client","time":{"start":1759767279249,"stop":1759767279709,"duration":460},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Проверяет доступ к siblings документов при разных комбинациях:\n    - Создателя документа\n    - Просматривающего пользователя\n    - Типа документа (Space/Project)\n\n    Проверки:\n        1. Создание трёх последовательных документов указанной ролью\n        2. Запрос siblings для среднего документа другой ролью\n        3. Проверка статуса ответа и корректности данных siblings\n    ","status":"failed","statusMessage":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"request = <FixtureRequest for <Function test_get_project_and_space_siblings_docs_access_by_roles[project_doc-member_docs_by_manager_403]>>\nmain_space = '6866309d85fb8d104544a61e', creator_fixture = 'member_client'\nclient_fixture = 'manager_client', expected_status = 200, kind = 'Project'\ncontainer_fixture = 'main_project'\n\n    @pytest.mark.parametrize(\n        'creator_fixture, client_fixture, expected_status',\n        [\n            ('owner_client', 'owner_client', 200),\n            ('owner_client', 'manager_client', 200),\n            ('owner_client', 'member_client', 200),\n            ('owner_client', 'guest_client', 200),\n            ('manager_client', 'owner_client', 200),\n            ('manager_client', 'manager_client', 200),\n            ('manager_client', 'member_client', 200),\n            ('manager_client', 'guest_client', 200),\n            ('member_client', 'owner_client', 200),\n            ('member_client', 'manager_client', 200),\n            ('member_client', 'member_client', 200),\n            ('member_client', 'guest_client', 200),\n        ],\n        ids=[\n            'owner_self_docs_200',\n            'owner_docs_by_manager_403',\n            'owner_docs_by_member_403',\n            'owner_docs_by_guest_403',\n            'manager_docs_by_owner_403',\n            'manager_self_docs_200',\n            'manager_docs_by_member_403',\n            'manager_docs_by_guest_403',\n            'member_docs_by_owner_403',\n            'member_docs_by_manager_403',\n            'member_self_docs_200',\n            'member_docs_by_guest_403',\n        ],\n    )\n    @pytest.mark.parametrize(\n        'kind, container_fixture',\n        [\n            ('Space', 'main_space'),\n            ('Project', 'main_project'),\n        ],\n        ids=['space_doc', 'project_doc'],\n    )\n    def test_get_project_and_space_siblings_docs_access_by_roles(\n        request, main_space, creator_fixture, client_fixture, expected_status, kind, container_fixture\n    ):\n        \"\"\"\n        Проверяет доступ к siblings документов при разных комбинациях:\n        - Создателя документа\n        - Просматривающего пользователя\n        - Типа документа (Space/Project)\n    \n        Проверки:\n            1. Создание трёх последовательных документов указанной ролью\n            2. Запрос siblings для среднего документа другой ролью\n            3. Проверка статуса ответа и корректности данных siblings\n        \"\"\"\n        creator = request.getfixturevalue(creator_fixture)\n        viewer = request.getfixturevalue(client_fixture)\n        creator_role = creator_fixture.replace('_client', '')\n        viewer_role = client_fixture.replace('_client', '')\n        container_id = request.getfixturevalue(container_fixture)\n    \n        current_date = datetime.now().strftime('%d.%m_%H:%M:%S')\n    \n        allure.dynamic.title(\n            f'Проверка доступа к siblings {kind}-документа: создатель - {creator_role}, просматривающий - {viewer_role}'\n        )\n    \n        doc_ids = []\n        with allure.step(f'Создание трёх {kind}-документов пользователем {creator_role}'):\n            for index in range(3):\n                title = f'{current_date}_{creator_role}_{kind}_Doc_{index}'\n                create_resp = creator.post(\n                    **create_document_endpoint(kind=kind, kind_id=container_id, space_id=main_space, title=title)\n                )\n>               assert (\n                    create_resp.status_code == 200\n                ), f'Ошибка при создании документа {index}: статус {create_resp.status_code}'\nE               AssertionError: Ошибка при создании документа 0: статус 400\nE               assert 400 == 200\nE                +  where 400 = <Response [400]>.status_code\n\ntests/test_backend/document/access_doc/test_get_siblings_doc_access.py:86: AssertionError","steps":[{"name":"Создание трёх Project-документов пользователем member","time":{"start":1759767525327,"stop":1759767525596,"duration":269},"status":"failed","statusMessage":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/document/access_doc/test_get_siblings_doc_access.py\", line 86, in test_get_project_and_space_siblings_docs_access_by_roles\n    assert (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document.access_doc"},{"name":"suite","value":"test_get_siblings_doc_access"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2552-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.access_doc.test_get_siblings_doc_access"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"client_fixture","value":"'manager_client'"},{"name":"container_fixture","value":"'main_project'"},{"name":"creator_fixture","value":"'member_client'"},{"name":"expected_status","value":"200"},{"name":"kind","value":"'Project'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":1,"skipped":0,"passed":33,"unknown":0,"total":35},"items":[{"uid":"d338aa9b81f99ca3","reportUrl":"https://vaizcom.github.io/autotests/343//#testresult/d338aa9b81f99ca3","status":"passed","time":{"start":1759767471025,"stop":1759767472994,"duration":1969}},{"uid":"4b2c2dc72591b2fe","reportUrl":"https://vaizcom.github.io/autotests/341//#testresult/4b2c2dc72591b2fe","status":"passed","time":{"start":1759753937989,"stop":1759753939986,"duration":1997}},{"uid":"8fa9c8df1ae2c97e","reportUrl":"https://vaizcom.github.io/autotests/340//#testresult/8fa9c8df1ae2c97e","status":"passed","time":{"start":1759743899119,"stop":1759743901114,"duration":1995}},{"uid":"5722f4e92a2b5347","reportUrl":"https://vaizcom.github.io/autotests/339//#testresult/5722f4e92a2b5347","status":"broken","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='api.vaiz.dev', port=443): Max retries exceeded with url: /v4/Login (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7fb5f6e8f010>, 'Connection to api.vaiz.dev timed out. (connect timeout=None)'))","time":{"start":1759485535414,"stop":1759485535414,"duration":0}},{"uid":"e327c19e170ab3c1","reportUrl":"https://vaizcom.github.io/autotests/338//#testresult/e327c19e170ab3c1","status":"passed","time":{"start":1759232525607,"stop":1759232527423,"duration":1816}},{"uid":"b8a52e7fbe0e4615","reportUrl":"https://vaizcom.github.io/autotests/337//#testresult/b8a52e7fbe0e4615","status":"passed","time":{"start":1759140806333,"stop":1759140808412,"duration":2079}},{"uid":"b68cbff3d137d178","reportUrl":"https://vaizcom.github.io/autotests/335//#testresult/b68cbff3d137d178","status":"passed","time":{"start":1758891884667,"stop":1758891887650,"duration":2983}},{"uid":"1842fc8f96761238","reportUrl":"https://vaizcom.github.io/autotests/334//#testresult/1842fc8f96761238","status":"passed","time":{"start":1758807836667,"stop":1758807839547,"duration":2880}},{"uid":"d9cba7aeff0bf533","reportUrl":"https://vaizcom.github.io/autotests/333//#testresult/d9cba7aeff0bf533","status":"passed","time":{"start":1758806711232,"stop":1758806714451,"duration":3219}},{"uid":"407ff7f8c708bc3e","reportUrl":"https://vaizcom.github.io/autotests/332//#testresult/407ff7f8c708bc3e","status":"passed","time":{"start":1758791290805,"stop":1758791293399,"duration":2594}},{"uid":"df4618fa63436a36","reportUrl":"https://vaizcom.github.io/autotests/331//#testresult/df4618fa63436a36","status":"passed","time":{"start":1758540597340,"stop":1758540599955,"duration":2615}},{"uid":"e90057b1b0f1a74b","reportUrl":"https://vaizcom.github.io/autotests/330//#testresult/e90057b1b0f1a74b","status":"passed","time":{"start":1758289235001,"stop":1758289237883,"duration":2882}},{"uid":"98cfa5cd76510549","reportUrl":"https://vaizcom.github.io/autotests/329//#testresult/98cfa5cd76510549","status":"passed","time":{"start":1755852396480,"stop":1755852398650,"duration":2170}},{"uid":"b90717b5c82d7f36","reportUrl":"https://vaizcom.github.io/autotests/328//#testresult/b90717b5c82d7f36","status":"passed","time":{"start":1755851905407,"stop":1755851907551,"duration":2144}},{"uid":"c4e5f48023633b2a","reportUrl":"https://vaizcom.github.io/autotests/327//#testresult/c4e5f48023633b2a","status":"passed","time":{"start":1755848045543,"stop":1755848047832,"duration":2289}},{"uid":"a510c025af8d74c5","reportUrl":"https://vaizcom.github.io/autotests/326//#testresult/a510c025af8d74c5","status":"passed","time":{"start":1755777913688,"stop":1755777916874,"duration":3186}},{"uid":"69b7d3a387d3b550","reportUrl":"https://vaizcom.github.io/autotests/325//#testresult/69b7d3a387d3b550","status":"passed","time":{"start":1755774548772,"stop":1755774551223,"duration":2451}},{"uid":"d8e0227fff03265c","reportUrl":"https://vaizcom.github.io/autotests/324//#testresult/d8e0227fff03265c","status":"passed","time":{"start":1755694682709,"stop":1755694685296,"duration":2587}},{"uid":"3e8114fc013e1f5a","reportUrl":"https://vaizcom.github.io/autotests/323//#testresult/3e8114fc013e1f5a","status":"passed","time":{"start":1755694111206,"stop":1755694113517,"duration":2311}},{"uid":"c9932967643e7378","reportUrl":"https://vaizcom.github.io/autotests/322//#testresult/c9932967643e7378","status":"passed","time":{"start":1755687178836,"stop":1755687181589,"duration":2753}}]},"tags":["backend"]},"source":"48f3cc3c3f897db6.json","parameterValues":["'manager_client'","'main_project'","'member_client'","200","'Project'"]}