{"uid":"91d9c82feebcac2f","name":"test_get_documents_invalid_inputs[missing kind]","fullName":"tests.test_backend.document.test_get_documents#test_get_documents_invalid_inputs","historyId":"976477323cdb505a52b454f67ca61aec","time":{"start":1761910615866,"stop":1761910615866,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fce4b119550>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910495818,"stop":1761910495819,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910495819,"stop":1761910496047,"duration":228},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761910503762,"stop":1761910503877,"duration":115},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_documents"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_documents"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case_id","value":"'missing kind'"},{"name":"expected_status","value":"400"},{"name":"kind","value":"None"},{"name":"kind_id","value":"'valid_project_id'"},{"name":"space_id","value":"'valid_space_id'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":51},"items":[{"uid":"cb7f2ac371824817","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/cb7f2ac371824817","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910008942,"stop":1761910008942,"duration":0}},{"uid":"2f103ce496b42e9d","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/2f103ce496b42e9d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900040057,"stop":1761900040057,"duration":0}},{"uid":"d1ac119e23460bd9","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/d1ac119e23460bd9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835060260,"stop":1761835060260,"duration":0}},{"uid":"b46bb73eec021876","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/b46bb73eec021876","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834645321,"stop":1761834645321,"duration":0}},{"uid":"7d7184f37da88a50","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/7d7184f37da88a50","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833481728,"stop":1761833481728,"duration":0}},{"uid":"d42c6faab135179b","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/d42c6faab135179b","status":"passed","time":{"start":1761821758604,"stop":1761821758779,"duration":175}},{"uid":"9013093bcd347e1d","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/9013093bcd347e1d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818769863,"stop":1761818769863,"duration":0}},{"uid":"d1f6403f2cd9afde","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/d1f6403f2cd9afde","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748633189,"stop":1761748633189,"duration":0}},{"uid":"959092b5f8d9b60","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/959092b5f8d9b60","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747909453,"stop":1761747909453,"duration":0}},{"uid":"d0870b4dd5651f94","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/d0870b4dd5651f94","status":"passed","time":{"start":1761746946093,"stop":1761746946452,"duration":359}},{"uid":"d693c660cb05be25","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/d693c660cb05be25","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745741332,"stop":1761745741332,"duration":0}},{"uid":"4fa8004807b4985c","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/4fa8004807b4985c","status":"passed","time":{"start":1761576775188,"stop":1761576775422,"duration":234}},{"uid":"89401ae858536d7a","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/89401ae858536d7a","status":"passed","time":{"start":1761557412421,"stop":1761557412613,"duration":192}},{"uid":"795a68d14c661787","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/795a68d14c661787","status":"passed","time":{"start":1761308632493,"stop":1761308632701,"duration":208}},{"uid":"f6fa6c1dcb2d2547","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/f6fa6c1dcb2d2547","status":"passed","time":{"start":1761306796272,"stop":1761306796485,"duration":213}},{"uid":"ab71fd2a66e4c080","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/ab71fd2a66e4c080","status":"passed","time":{"start":1761137091925,"stop":1761137092150,"duration":225}},{"uid":"7d88a9dbf470fffa","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/7d88a9dbf470fffa","status":"passed","time":{"start":1761135777457,"stop":1761135777711,"duration":254}},{"uid":"4798baa0211baf7e","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/4798baa0211baf7e","status":"passed","time":{"start":1761134195720,"stop":1761134195906,"duration":186}},{"uid":"bf6e6a202dca7f4c","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/bf6e6a202dca7f4c","status":"passed","time":{"start":1761128572292,"stop":1761128572545,"duration":253}},{"uid":"52e2e6293fa31e44","reportUrl":"https://vaizcom.github.io/autotests/383//#testresult/52e2e6293fa31e44","status":"passed","time":{"start":1761124676784,"stop":1761124677041,"duration":257}}]},"tags":["backend"]},"source":"91d9c82feebcac2f.json","parameterValues":["'missing kind'","400","None","'valid_project_id'","'valid_space_id'"]}