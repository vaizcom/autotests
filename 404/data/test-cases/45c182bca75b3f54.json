{"uid":"45c182bca75b3f54","name":"Тест: Проверка предельной длины slug","fullName":"tests.test_backend.project.test_project#test_project_slug_too_long","historyId":"2cb76e81e4a27f4607f4f034fc6f46c4","time":{"start":1761912194071,"stop":1761912194071,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761912080667,"stop":1761912081009,"duration":342},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.project"},{"name":"suite","value":"test_project"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.project.test_project"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":54},"items":[{"uid":"27990f563b50aabe","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/27990f563b50aabe","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911307914,"stop":1761911307914,"duration":0}},{"uid":"a3d6934caa6b2b87","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/a3d6934caa6b2b87","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910917767,"stop":1761910917767,"duration":0}},{"uid":"37776794425a6168","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/37776794425a6168","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910619409,"stop":1761910619409,"duration":0}},{"uid":"315854b5e6542e30","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/315854b5e6542e30","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910012892,"stop":1761910012892,"duration":0}},{"uid":"fda24ced51d82178","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/fda24ced51d82178","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900043984,"stop":1761900043984,"duration":0}},{"uid":"3b368668a5f8ceec","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/3b368668a5f8ceec","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835063122,"stop":1761835063122,"duration":0}},{"uid":"55b46567c44402c2","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/55b46567c44402c2","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834649928,"stop":1761834649928,"duration":0}},{"uid":"585d3c34e0538cb","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/585d3c34e0538cb","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833485856,"stop":1761833485856,"duration":0}},{"uid":"b87972f43167fc9","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/b87972f43167fc9","status":"passed","time":{"start":1761821824866,"stop":1761821825064,"duration":198}},{"uid":"a5636a97ad530446","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/a5636a97ad530446","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818773744,"stop":1761818773744,"duration":0}},{"uid":"7c4d7254fd8a290e","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/7c4d7254fd8a290e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748636849,"stop":1761748636849,"duration":0}},{"uid":"67301e0d83031c12","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/67301e0d83031c12","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747913960,"stop":1761747913960,"duration":0}},{"uid":"ddc745b9aba2e539","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/ddc745b9aba2e539","status":"passed","time":{"start":1761747034975,"stop":1761747035287,"duration":312}},{"uid":"379ea486c9a9b2e5","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/379ea486c9a9b2e5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745744269,"stop":1761745744269,"duration":0}},{"uid":"5d40c18514a5345","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/5d40c18514a5345","status":"passed","time":{"start":1761576856335,"stop":1761576856553,"duration":218}},{"uid":"fe4a309ce751b349","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/fe4a309ce751b349","status":"passed","time":{"start":1761557476454,"stop":1761557476641,"duration":187}},{"uid":"f291a2ad51758280","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/f291a2ad51758280","status":"passed","time":{"start":1761308693626,"stop":1761308693818,"duration":192}},{"uid":"159e1d4e9b764a05","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/159e1d4e9b764a05","status":"passed","time":{"start":1761306861081,"stop":1761306861293,"duration":212}},{"uid":"afed3ab6ac199c92","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/afed3ab6ac199c92","status":"passed","time":{"start":1761137159388,"stop":1761137159590,"duration":202}},{"uid":"eb2e9e5c912eb073","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/eb2e9e5c912eb073","status":"passed","time":{"start":1761135858480,"stop":1761135858721,"duration":241}}]},"tags":["backend"]},"source":"45c182bca75b3f54.json","parameterValues":[]}