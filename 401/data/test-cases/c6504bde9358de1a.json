{"uid":"c6504bde9358de1a","name":"test_get_document_success[member]","fullName":"tests.test_backend.document.test_get_document#test_get_document_success","historyId":"35b51b63abb9292e7a37bd034127f5a4","time":{"start":1761910615737,"stop":1761910615737,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fce4b119550>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910495818,"stop":1761910495819,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910495819,"stop":1761910496047,"duration":228},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761910503762,"stop":1761910503877,"duration":115},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"fixture_name","value":"'temp_member'"},{"name":"kind","value":"'Member'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":51},"items":[{"uid":"64a16b6233047173","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/64a16b6233047173","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910008800,"stop":1761910008800,"duration":0}},{"uid":"da492d8ee7195928","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/da492d8ee7195928","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900039915,"stop":1761900039915,"duration":0}},{"uid":"fecfba3202c53c63","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/fecfba3202c53c63","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835060131,"stop":1761835060131,"duration":0}},{"uid":"21cf2f2377f3ac19","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/21cf2f2377f3ac19","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834645189,"stop":1761834645189,"duration":0}},{"uid":"676087b7510bf105","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/676087b7510bf105","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833481579,"stop":1761833481579,"duration":0}},{"uid":"6279fbcd2df292f6","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/6279fbcd2df292f6","status":"passed","time":{"start":1761821751353,"stop":1761821751747,"duration":394}},{"uid":"edbdb1cf12437ca3","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/edbdb1cf12437ca3","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818769721,"stop":1761818769721,"duration":0}},{"uid":"534a15781971f40f","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/534a15781971f40f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748633063,"stop":1761748633063,"duration":0}},{"uid":"d0a7e55c6c06c059","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/d0a7e55c6c06c059","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747909326,"stop":1761747909326,"duration":0}},{"uid":"908343457a4f5692","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/908343457a4f5692","status":"passed","time":{"start":1761746931601,"stop":1761746932229,"duration":628}},{"uid":"521c89bfc6bbea5a","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/521c89bfc6bbea5a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745741205,"stop":1761745741205,"duration":0}},{"uid":"a4e56c52369350d3","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/a4e56c52369350d3","status":"passed","time":{"start":1761576764969,"stop":1761576765522,"duration":553}},{"uid":"da882940bc398ca8","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/da882940bc398ca8","status":"passed","time":{"start":1761557401565,"stop":1761557402088,"duration":523}},{"uid":"64ecb810c36c9c6","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/64ecb810c36c9c6","status":"passed","time":{"start":1761308623373,"stop":1761308623782,"duration":409}},{"uid":"67b4bc90f1ed6b2a","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/67b4bc90f1ed6b2a","status":"passed","time":{"start":1761306787314,"stop":1761306787788,"duration":474}},{"uid":"667222616ee9d0ad","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/667222616ee9d0ad","status":"passed","time":{"start":1761137082509,"stop":1761137082951,"duration":442}},{"uid":"65cf22d0133467b6","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/65cf22d0133467b6","status":"passed","time":{"start":1761135767810,"stop":1761135768358,"duration":548}},{"uid":"18f2a3cd6fbdbca8","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/18f2a3cd6fbdbca8","status":"passed","time":{"start":1761134187981,"stop":1761134188425,"duration":444}},{"uid":"ee8220b4aa8ec6f","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/ee8220b4aa8ec6f","status":"passed","time":{"start":1761128560861,"stop":1761128561417,"duration":556}},{"uid":"e5a6192ce3782ddd","reportUrl":"https://vaizcom.github.io/autotests/383//#testresult/e5a6192ce3782ddd","status":"passed","time":{"start":1761124666410,"stop":1761124666954,"duration":544}}]},"tags":["backend"]},"source":"c6504bde9358de1a.json","parameterValues":["'temp_member'","'Member'"]}