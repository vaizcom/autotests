{"uid":"2afc0830bacb93c4","name":"Проверка создания задачи с конкретным payload и структурой ответа : клиент=guest_client, ожидаемый статус=403","fullName":"tests.test_backend.task_service.create_task.access_task.test_create_task#test_create_task_with_specific_payload_and_response","historyId":"58d42cab26e9d769a937896138659b87","time":{"start":1761747923781,"stop":1761747925341,"duration":1560},"description":"\n    Данный тест проверяет возможность создания задачи с заранее определённым набором данных (payload) через API\n     управления задачами для различных ролей пользователей, а также корректность и полноту возвращаемого ответа.\n     Тест эмулирует действия разных типов клиентов (владелец, менеджер, участник, гость) и сравнивает фактический результат с ожидаемым HTTP-статусом.\n    ","descriptionHtml":"<pre><code>Данный тест проверяет возможность создания задачи с заранее определённым набором данных (payload) через API\n управления задачами для различных ролей пользователей, а также корректность и полноту возвращаемого ответа.\n Тест эмулирует действия разных типов клиентов (владелец, менеджер, участник, гость) и сравнивает фактический результат с ожидаемым HTTP-статусом.\n</code></pre>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1761747760277,"stop":1761747760277,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761747760277,"stop":1761747760277,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761747760277,"stop":1761747760277,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761747760278,"stop":1761747760278,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1761747765139,"stop":1761747765458,"duration":319},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1761747765458,"stop":1761747765749,"duration":291},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_project","time":{"start":1761747765749,"stop":1761747766336,"duration":587},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"guest_client","time":{"start":1761747768642,"stop":1761747768959,"duration":317},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_board","time":{"start":1761747769204,"stop":1761747769462,"duration":258},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Данный тест проверяет возможность создания задачи с заранее определённым набором данных (payload) через API\n     управления задачами для различных ролей пользователей, а также корректность и полноту возвращаемого ответа.\n     Тест эмулирует действия разных типов клиентов (владелец, менеджер, участник, гость) и сравнивает фактический результат с ожидаемым HTTP-статусом.\n    ","status":"passed","steps":[{"name":"Генерация payload","time":{"start":1761747925072,"stop":1761747925072,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Отправляем запрос на создание задачи","time":{"start":1761747925072,"stop":1761747925340,"duration":268},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверка статус-кода: ожидаем 403","time":{"start":1761747925340,"stop":1761747925340,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"access_task"},{"name":"tag","value":"backend"},{"name":"suite","value":"test_create_task"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2581-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.task_service.create_task.access_task.test_create_task"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"client_fixture","value":"'guest_client'"},{"name":"expected_status","value":"403"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":10},"items":[{"uid":"2d1bb17113641077","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/2d1bb17113641077","status":"passed","time":{"start":1761747069349,"stop":1761747070720,"duration":1371}},{"uid":"dee818d0a8224066","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/dee818d0a8224066","status":"passed","time":{"start":1761745752330,"stop":1761745753586,"duration":1256}},{"uid":"e6b85400fabf7985","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/e6b85400fabf7985","status":"passed","time":{"start":1761576886713,"stop":1761576888218,"duration":1505}},{"uid":"487db834f61324ff","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/487db834f61324ff","status":"passed","time":{"start":1761557500969,"stop":1761557502147,"duration":1178}},{"uid":"4199eeb2f924dda1","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/4199eeb2f924dda1","status":"passed","time":{"start":1761308720736,"stop":1761308723042,"duration":2306}},{"uid":"4bbf0967b86deea6","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/4bbf0967b86deea6","status":"passed","time":{"start":1761306887192,"stop":1761306888493,"duration":1301}},{"uid":"15ef3426ad63163b","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/15ef3426ad63163b","status":"passed","time":{"start":1761137188580,"stop":1761137190047,"duration":1467}},{"uid":"21daa93af3d7a3ce","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/21daa93af3d7a3ce","status":"passed","time":{"start":1761135889650,"stop":1761135891299,"duration":1649}},{"uid":"9de5cd4597380cee","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/9de5cd4597380cee","status":"passed","time":{"start":1761134292661,"stop":1761134294212,"duration":1551}}]},"tags":["backend"]},"source":"2afc0830bacb93c4.json","parameterValues":["'guest_client'","403"]}