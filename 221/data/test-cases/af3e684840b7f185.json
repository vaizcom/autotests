{"uid":"af3e684840b7f185","name":"Проверка siblins родителя (kind=Member)","fullName":"tests.test_backend.document.test_get_siblings#test_get_document_parent_siblings","historyId":"71803360235334e501dfa8367a2bb33f","time":{"start":1751008210799,"stop":1751008211375,"duration":576},"description":"Тест проверки siblins и родителей для родительского документа","descriptionHtml":"<p>Тест проверки siblins и родителей для родительского документа</p>\n","status":"failed","statusMessage":"AssertionError: prevSibling не должен присутствовать в ответе\nassert 'prevSibling' not in {'parents': [], 'prevSibling': {'_id': '685e43cfbba5519683c27865', 'kind': 'Member', 'kindId': '685e4381bba5519683c26401', 'map': [], ...}, 'tree': [{'document': {'_id': '685e43d2bba5519683c278e5', 'kind': 'Member', 'kindId': '685e4381bba5519683c26401', 'map': [], ...}, 'id': '685e43d2bba5519683c278e5', 'lft': 0, 'rgt': 1}]}","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f1a217f4190>\nrequest = <FixtureRequest for <Function test_get_document_parent_siblings[member]>>\ntemp_space = '685e4381bba5519683c263ff', kind = 'Member'\nkind_id_fixture = 'temp_member'\n\n    @pytest.mark.parametrize(\n        'kind, kind_id_fixture',\n        [\n            ('Project', 'temp_project'),\n            ('Space', 'temp_space'),\n            ('Member', 'temp_member'),\n        ],\n        ids=['project', 'space', 'member'],\n    )\n    def test_get_document_parent_siblings(owner_client, request, temp_space, kind, kind_id_fixture):\n        \"\"\"Тест проверки siblins и родителей для родительского документа\"\"\"\n        kind_id = request.getfixturevalue(kind_id_fixture)\n        space_id = temp_space\n        allure.dynamic.title(f'Проверка siblins родителя (kind={kind})')\n    \n        # Создаем родительский документ\n        resp = owner_client.post(**create_document_endpoint(kind=kind, kind_id=kind_id, space_id=space_id, title='Parent'))\n        assert resp.status_code == 200, f'Ожидался статус 200, но получен {resp.status_code}'\n        parent_id = resp.json()['payload']['document']['_id']\n    \n        # Запрос siblins для родительского документа\n        with allure.step('Запрос siblins для родительского документа'):\n            parent_resp = owner_client.post(**get_document_siblings_endpoint(document_id=parent_id, space_id=space_id))\n            assert parent_resp.status_code == 200, f'Ожидался статус 200, но получен {parent_resp.status_code}'\n            data = parent_resp.json()\n            assert (\n                data.get('type') == 'GetDocumentSiblings'\n            ), f\"Ожидался type 'GetDocumentSiblings', но получен {data.get('type')}\"\n        parent_payload = parent_resp.json()['payload']\n    \n        # Проверка отсутствия prevSibling и nextSibling\n        with allure.step('Проверка отсутствия prevSibling и nextSibling'):\n>           assert 'prevSibling' not in parent_payload, 'prevSibling не должен присутствовать в ответе'\nE           AssertionError: prevSibling не должен присутствовать в ответе\nE           assert 'prevSibling' not in {'parents': [], 'prevSibling': {'_id': '685e43cfbba5519683c27865', 'kind': 'Member', 'kindId': '685e4381bba5519683c26401', 'map': [], ...}, 'tree': [{'document': {'_id': '685e43d2bba5519683c278e5', 'kind': 'Member', 'kindId': '685e4381bba5519683c26401', 'map': [], ...}, 'id': '685e43d2bba5519683c278e5', 'lft': 0, 'rgt': 1}]}\n\ntests/test_backend/document/test_get_siblings.py:43: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"delete_output_dir","time":{"start":1751008128676,"stop":1751008128676,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1751008128676,"stop":1751008128676,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1751008128676,"stop":1751008128676,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1751008128676,"stop":1751008129149,"duration":473},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1751008128676,"stop":1751008128676,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1751008129149,"stop":1751008129882,"duration":733},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_member","time":{"start":1751008156837,"stop":1751008157117,"duration":280},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"Тест проверки siblins и родителей для родительского документа","status":"failed","statusMessage":"AssertionError: prevSibling не должен присутствовать в ответе\nassert 'prevSibling' not in {'parents': [], 'prevSibling': {'_id': '685e43cfbba5519683c27865', 'kind': 'Member', 'kindId': '685e4381bba5519683c26401', 'map': [], ...}, 'tree': [{'document': {'_id': '685e43d2bba5519683c278e5', 'kind': 'Member', 'kindId': '685e4381bba5519683c26401', 'map': [], ...}, 'id': '685e43d2bba5519683c278e5', 'lft': 0, 'rgt': 1}]}","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f1a217f4190>\nrequest = <FixtureRequest for <Function test_get_document_parent_siblings[member]>>\ntemp_space = '685e4381bba5519683c263ff', kind = 'Member'\nkind_id_fixture = 'temp_member'\n\n    @pytest.mark.parametrize(\n        'kind, kind_id_fixture',\n        [\n            ('Project', 'temp_project'),\n            ('Space', 'temp_space'),\n            ('Member', 'temp_member'),\n        ],\n        ids=['project', 'space', 'member'],\n    )\n    def test_get_document_parent_siblings(owner_client, request, temp_space, kind, kind_id_fixture):\n        \"\"\"Тест проверки siblins и родителей для родительского документа\"\"\"\n        kind_id = request.getfixturevalue(kind_id_fixture)\n        space_id = temp_space\n        allure.dynamic.title(f'Проверка siblins родителя (kind={kind})')\n    \n        # Создаем родительский документ\n        resp = owner_client.post(**create_document_endpoint(kind=kind, kind_id=kind_id, space_id=space_id, title='Parent'))\n        assert resp.status_code == 200, f'Ожидался статус 200, но получен {resp.status_code}'\n        parent_id = resp.json()['payload']['document']['_id']\n    \n        # Запрос siblins для родительского документа\n        with allure.step('Запрос siblins для родительского документа'):\n            parent_resp = owner_client.post(**get_document_siblings_endpoint(document_id=parent_id, space_id=space_id))\n            assert parent_resp.status_code == 200, f'Ожидался статус 200, но получен {parent_resp.status_code}'\n            data = parent_resp.json()\n            assert (\n                data.get('type') == 'GetDocumentSiblings'\n            ), f\"Ожидался type 'GetDocumentSiblings', но получен {data.get('type')}\"\n        parent_payload = parent_resp.json()['payload']\n    \n        # Проверка отсутствия prevSibling и nextSibling\n        with allure.step('Проверка отсутствия prevSibling и nextSibling'):\n>           assert 'prevSibling' not in parent_payload, 'prevSibling не должен присутствовать в ответе'\nE           AssertionError: prevSibling не должен присутствовать в ответе\nE           assert 'prevSibling' not in {'parents': [], 'prevSibling': {'_id': '685e43cfbba5519683c27865', 'kind': 'Member', 'kindId': '685e4381bba5519683c26401', 'map': [], ...}, 'tree': [{'document': {'_id': '685e43d2bba5519683c278e5', 'kind': 'Member', 'kindId': '685e4381bba5519683c26401', 'map': [], ...}, 'id': '685e43d2bba5519683c278e5', 'lft': 0, 'rgt': 1}]}\n\ntests/test_backend/document/test_get_siblings.py:43: AssertionError","steps":[{"name":"Запрос siblins для родительского документа","time":{"start":1751008211124,"stop":1751008211374,"duration":250},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверка отсутствия prevSibling и nextSibling","time":{"start":1751008211374,"stop":1751008211374,"duration":0},"status":"failed","statusMessage":"AssertionError: prevSibling не должен присутствовать в ответе\nassert 'prevSibling' not in {'parents': [], 'prevSibling': {'_id': '685e43cfbba5519683c27865', 'kind': 'Member', 'kindId': '685e4381bba5519683c26401', 'map': [], ...}, 'tree': [{'document': {'_id': '685e43d2bba5519683c278e5', 'kind': 'Member', 'kindId': '685e4381bba5519683c26401', 'map': [], ...}, 'id': '685e43d2bba5519683c278e5', 'lft': 0, 'rgt': 1}]}\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/document/test_get_siblings.py\", line 43, in test_get_document_parent_siblings\n    assert 'prevSibling' not in parent_payload, 'prevSibling не должен присутствовать в ответе'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[{"name":"temp_member::0","time":{"start":1751008228563,"stop":1751008228563,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space::0","time":{"start":1751008228564,"stop":1751008229247,"duration":683},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_siblings"},{"name":"host","value":"pkrvmbietmlfzoi"},{"name":"thread","value":"2621-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_siblings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"kind","value":"'Member'"},{"name":"kind_id_fixture","value":"'temp_member'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"717decc4fce0d112","reportUrl":"https://vaizcom.github.io/autotests/220//#testresult/717decc4fce0d112","status":"failed","statusDetails":"AssertionError: prevSibling не должен присутствовать в ответе\nassert 'prevSibling' not in {'parents': [], 'prevSibling': {'_id': '685e40c8bba5519683c259e1', 'kind': 'Member', 'kindId': '685e4079bba5519683c245a1', 'map': [], ...}, 'tree': [{'document': {'_id': '685e40ccbba5519683c25a5f', 'kind': 'Member', 'kindId': '685e4079bba5519683c245a1', 'map': [], ...}, 'id': '685e40ccbba5519683c25a5f', 'lft': 0, 'rgt': 1}]}","time":{"start":1751007436338,"stop":1751007436924,"duration":586}}]},"tags":["backend"]},"source":"af3e684840b7f185.json","parameterValues":["'Member'","'temp_member'"]}