{"uid":"e38985daf8d963ac","name":"Редактирование поля Select: добавление новых опций с валидным _id","fullName":"tests.test_backend.board.test_create_board#test_edit_select_custom_field","historyId":"a0965cd051ab4e939071b178ed0806e8","time":{"start":1761909867289,"stop":1761909867289,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f7b6371b6d0>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1761909856376,"stop":1761909856376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761909856376,"stop":1761909856376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761909856376,"stop":1761909856684,"duration":308},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761909856376,"stop":1761909856376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761909856376,"stop":1761909856376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761909866728,"stop":1761909866905,"duration":177},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.board"},{"name":"suite","value":"test_create_board"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2551-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.board.test_create_board"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":50},"items":[{"uid":"6b75c029565a125a","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/6b75c029565a125a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761899901212,"stop":1761899901212,"duration":0}},{"uid":"3ffb6323406fb687","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/3ffb6323406fb687","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834950197,"stop":1761834950197,"duration":0}},{"uid":"dcb39d14b605a423","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/dcb39d14b605a423","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834497963,"stop":1761834497963,"duration":0}},{"uid":"89ee740a607d288a","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/89ee740a607d288a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833327592,"stop":1761833327592,"duration":0}},{"uid":"fad4f61265bc9f7d","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/fad4f61265bc9f7d","status":"passed","time":{"start":1761821505446,"stop":1761821505903,"duration":457}},{"uid":"3cdb2364853da5","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/3cdb2364853da5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818627876,"stop":1761818627876,"duration":0}},{"uid":"9df4b1ac1a8190d3","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/9df4b1ac1a8190d3","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748512462,"stop":1761748512462,"duration":0}},{"uid":"21bd13dde1e97296","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/21bd13dde1e97296","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747772044,"stop":1761747772044,"duration":0}},{"uid":"9ff63f3d3d99779f","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/9ff63f3d3d99779f","status":"passed","time":{"start":1761746622147,"stop":1761746622802,"duration":655}},{"uid":"c5be21726eb2056a","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/c5be21726eb2056a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745637333,"stop":1761745637333,"duration":0}},{"uid":"5e42b051e3580d1f","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/5e42b051e3580d1f","status":"passed","time":{"start":1761576496888,"stop":1761576497367,"duration":479}},{"uid":"4c79ac48c7cdb1b6","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/4c79ac48c7cdb1b6","status":"passed","time":{"start":1761557153327,"stop":1761557153800,"duration":473}},{"uid":"3b1e0d2c3cddbff1","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/3b1e0d2c3cddbff1","status":"passed","time":{"start":1761308377523,"stop":1761308377978,"duration":455}},{"uid":"1eedbe66021c3758","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/1eedbe66021c3758","status":"passed","time":{"start":1761306526195,"stop":1761306526694,"duration":499}},{"uid":"e116745573e4c662","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/e116745573e4c662","status":"passed","time":{"start":1761136820219,"stop":1761136820703,"duration":484}},{"uid":"3da6de07ea7693e7","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/3da6de07ea7693e7","status":"passed","time":{"start":1761135473072,"stop":1761135473638,"duration":566}},{"uid":"cc3fea983b4442bb","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/cc3fea983b4442bb","status":"passed","time":{"start":1761133937841,"stop":1761133938313,"duration":472}},{"uid":"c862455b51df408c","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/c862455b51df408c","status":"passed","time":{"start":1761128238396,"stop":1761128238939,"duration":543}},{"uid":"34979a1c5f279f2d","reportUrl":"https://vaizcom.github.io/autotests/383//#testresult/34979a1c5f279f2d","status":"passed","time":{"start":1761124342367,"stop":1761124342974,"duration":607}},{"uid":"c42fca7c7ee5ab1b","reportUrl":"https://vaizcom.github.io/autotests/382//#testresult/c42fca7c7ee5ab1b","status":"passed","time":{"start":1761119194675,"stop":1761119195186,"duration":511}}]},"tags":["backend"]},"source":"e38985daf8d963ac.json","parameterValues":[]}