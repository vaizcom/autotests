{"uid":"8b7c0cb6bf063338","name":"test_edit_document_forbidden_no_membership[space]","fullName":"tests.test_backend.document.test_edit_document#test_edit_document_forbidden_no_membership","historyId":"97212a57e0dc7679884aacd670cbc9a9","time":{"start":1761910007644,"stop":1761910007644,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f7b6371b6d0>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1761909856376,"stop":1761909856376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761909856376,"stop":1761909856376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761909856376,"stop":1761909856684,"duration":308},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761909856376,"stop":1761909856376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761909856376,"stop":1761909856376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"guest_client","time":{"start":1761909864336,"stop":1761909864627,"duration":291},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761909866728,"stop":1761909866905,"duration":177},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_edit_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2551-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_edit_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"kind","value":"'Space'"},{"name":"kind_id_fixture","value":"'temp_space'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":10,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":50},"items":[{"uid":"2d47982dfd5494b4","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/2d47982dfd5494b4","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900038769,"stop":1761900038769,"duration":0}},{"uid":"a7babeb3f32e0139","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/a7babeb3f32e0139","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835059328,"stop":1761835059328,"duration":0}},{"uid":"df5b0ca9ef80f7b6","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/df5b0ca9ef80f7b6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834643933,"stop":1761834643933,"duration":0}},{"uid":"a9e920cfb976a45f","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/a9e920cfb976a45f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833480132,"stop":1761833480132,"duration":0}},{"uid":"fbdda924fb7313f1","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/fbdda924fb7313f1","status":"passed","time":{"start":1761821736073,"stop":1761821736210,"duration":137}},{"uid":"8087a42f2b94e225","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/8087a42f2b94e225","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818768466,"stop":1761818768466,"duration":0}},{"uid":"2d68f50cf9f4a94f","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/2d68f50cf9f4a94f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748632269,"stop":1761748632269,"duration":0}},{"uid":"48e96fd370264f48","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/48e96fd370264f48","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747908155,"stop":1761747908155,"duration":0}},{"uid":"88fa83ccde85babf","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/88fa83ccde85babf","status":"passed","time":{"start":1761746908669,"stop":1761746908834,"duration":165}},{"uid":"c62a8154a0739cee","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/c62a8154a0739cee","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745740357,"stop":1761745740357,"duration":0}},{"uid":"b574a42443007014","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/b574a42443007014","status":"passed","time":{"start":1761576742524,"stop":1761576742714,"duration":190}},{"uid":"ff235788e2d682b2","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/ff235788e2d682b2","status":"passed","time":{"start":1761557385139,"stop":1761557385286,"duration":147}},{"uid":"9f7240c7d65b64e3","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/9f7240c7d65b64e3","status":"passed","time":{"start":1761308607844,"stop":1761308608003,"duration":159}},{"uid":"2cdb42253f0ada3c","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/2cdb42253f0ada3c","status":"passed","time":{"start":1761306770863,"stop":1761306771011,"duration":148}},{"uid":"e92d211ee4bba700","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/e92d211ee4bba700","status":"passed","time":{"start":1761137064424,"stop":1761137064579,"duration":155}},{"uid":"1c8adfede01e2aef","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/1c8adfede01e2aef","status":"passed","time":{"start":1761135746358,"stop":1761135746563,"duration":205}},{"uid":"ef49f4cacc67f8eb","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/ef49f4cacc67f8eb","status":"passed","time":{"start":1761134169538,"stop":1761134169686,"duration":148}},{"uid":"28a52032a2d4c7d7","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/28a52032a2d4c7d7","status":"passed","time":{"start":1761128538438,"stop":1761128538641,"duration":203}},{"uid":"6c0ab1b6f20fd5a4","reportUrl":"https://vaizcom.github.io/autotests/383//#testresult/6c0ab1b6f20fd5a4","status":"passed","time":{"start":1761124646482,"stop":1761124646690,"duration":208}},{"uid":"d442dbc2753d58ce","reportUrl":"https://vaizcom.github.io/autotests/382//#testresult/d442dbc2753d58ce","status":"passed","time":{"start":1761119459085,"stop":1761119459234,"duration":149}}]},"tags":["backend"]},"source":"8b7c0cb6bf063338.json","parameterValues":["'Space'","'temp_space'"]}