{"uid":"3a0d4de314b477b1","name":"Создание кастомного поля типа: Number","fullName":"tests.test_backend.board.test_create_board#test_create_custom_field_of_each_type","historyId":"59853eab8f253784c467a4af0314cf26","time":{"start":1761921773466,"stop":1761921773466,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fc7d133bfd0>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761921763685,"stop":1761921763685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761921763685,"stop":1761921764117,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761921773063,"stop":1761921773182,"duration":119},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.board"},{"name":"suite","value":"test_create_board"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2549-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.board.test_create_board"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"field_type","value":"'Number'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":55},"items":[{"uid":"76feae2d734187e1","reportUrl":"https://vaizcom.github.io/autotests/404//#testresult/76feae2d734187e1","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761912081282,"stop":1761912081282,"duration":0}},{"uid":"c4acf020f892ceb8","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/c4acf020f892ceb8","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911172994,"stop":1761911172994,"duration":0}},{"uid":"a5f71a969e2fc99a","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/a5f71a969e2fc99a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910801827,"stop":1761910801827,"duration":0}},{"uid":"2bf17ce9c880e931","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/2bf17ce9c880e931","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910504168,"stop":1761910504168,"duration":0}},{"uid":"40afff875a8dc7ba","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/40afff875a8dc7ba","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761909867201,"stop":1761909867201,"duration":0}},{"uid":"645cd4885ab1a654","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/645cd4885ab1a654","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761899901126,"stop":1761899901126,"duration":0}},{"uid":"d338e9d5cce9649d","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/d338e9d5cce9649d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834950111,"stop":1761834950111,"duration":0}},{"uid":"724a8a3ac71a1d6","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/724a8a3ac71a1d6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834497871,"stop":1761834497871,"duration":0}},{"uid":"715dd155014fb8c8","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/715dd155014fb8c8","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833327516,"stop":1761833327516,"duration":0}},{"uid":"8e8a86e779a64400","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/8e8a86e779a64400","status":"passed","time":{"start":1761821500703,"stop":1761821500903,"duration":200}},{"uid":"d00cd5f3d7287902","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/d00cd5f3d7287902","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818627792,"stop":1761818627792,"duration":0}},{"uid":"d03cfc65ba7c5a81","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/d03cfc65ba7c5a81","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748512377,"stop":1761748512377,"duration":0}},{"uid":"93b6749c62c38086","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/93b6749c62c38086","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747771959,"stop":1761747771959,"duration":0}},{"uid":"d81137d0e21d67c7","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/d81137d0e21d67c7","status":"passed","time":{"start":1761746616295,"stop":1761746616618,"duration":323}},{"uid":"80409f0902574d8e","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/80409f0902574d8e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745637249,"stop":1761745637249,"duration":0}},{"uid":"2ea70036b53f784b","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/2ea70036b53f784b","status":"passed","time":{"start":1761576492386,"stop":1761576492610,"duration":224}},{"uid":"d810e9383a6c96ec","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/d810e9383a6c96ec","status":"passed","time":{"start":1761557149194,"stop":1761557149417,"duration":223}},{"uid":"24fe746efe4888","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/24fe746efe4888","status":"passed","time":{"start":1761308373550,"stop":1761308373768,"duration":218}},{"uid":"cc29fef01fda7b5e","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/cc29fef01fda7b5e","status":"passed","time":{"start":1761306521286,"stop":1761306521529,"duration":243}},{"uid":"603225f076060e01","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/603225f076060e01","status":"passed","time":{"start":1761136815701,"stop":1761136815945,"duration":244}}]},"tags":["backend"]},"source":"3a0d4de314b477b1.json","parameterValues":["'Number'"]}