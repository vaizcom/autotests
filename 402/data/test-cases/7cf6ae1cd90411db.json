{"uid":"7cf6ae1cd90411db","name":"Создание проекта с пустым slug","fullName":"tests.test_backend.project.test_project#test_project_slug_empty","historyId":"99a4052fdbfecf9a17975ca9a31b5b86","time":{"start":1761910917774,"stop":1761910917774,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f1c6962ef90>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910792963,"stop":1761910793391,"duration":428},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761910801404,"stop":1761910801539,"duration":135},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.project"},{"name":"suite","value":"test_project"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2545-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.project.test_project"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":52},"items":[{"uid":"e21cb9badb88797d","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/e21cb9badb88797d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910619415,"stop":1761910619415,"duration":0}},{"uid":"7052823168ed49b7","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/7052823168ed49b7","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910012900,"stop":1761910012900,"duration":0}},{"uid":"ffe61d0b52079521","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/ffe61d0b52079521","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900043990,"stop":1761900043990,"duration":0}},{"uid":"ed2c07732ed05e72","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/ed2c07732ed05e72","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835063128,"stop":1761835063128,"duration":0}},{"uid":"d2e288d8b119de4a","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/d2e288d8b119de4a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834649935,"stop":1761834649935,"duration":0}},{"uid":"6f762eb0e16238f9","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/6f762eb0e16238f9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833485862,"stop":1761833485862,"duration":0}},{"uid":"be4661c8c961f214","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/be4661c8c961f214","status":"passed","time":{"start":1761821825065,"stop":1761821825268,"duration":203}},{"uid":"6dfa7c52063795f1","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/6dfa7c52063795f1","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818773751,"stop":1761818773751,"duration":0}},{"uid":"df2c608a9cafc480","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/df2c608a9cafc480","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748636855,"stop":1761748636855,"duration":0}},{"uid":"29efb789ddc0332d","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/29efb789ddc0332d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747913967,"stop":1761747913967,"duration":0}},{"uid":"b1e92049ecbc4d11","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/b1e92049ecbc4d11","status":"passed","time":{"start":1761747035289,"stop":1761747035595,"duration":306}},{"uid":"6236131c06239c2f","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/6236131c06239c2f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745744276,"stop":1761745744276,"duration":0}},{"uid":"df9c0a01793c9014","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/df9c0a01793c9014","status":"passed","time":{"start":1761576856554,"stop":1761576856773,"duration":219}},{"uid":"43242959612dc8b9","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/43242959612dc8b9","status":"passed","time":{"start":1761557476643,"stop":1761557476853,"duration":210}},{"uid":"5e470a0ff14a0ca1","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/5e470a0ff14a0ca1","status":"passed","time":{"start":1761308693819,"stop":1761308694005,"duration":186}},{"uid":"85cc1e6000d2d97b","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/85cc1e6000d2d97b","status":"passed","time":{"start":1761306861295,"stop":1761306861503,"duration":208}},{"uid":"9ed561c52974947c","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/9ed561c52974947c","status":"passed","time":{"start":1761137159591,"stop":1761137159793,"duration":202}},{"uid":"c2cb0c7fde8274bc","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/c2cb0c7fde8274bc","status":"passed","time":{"start":1761135858723,"stop":1761135858965,"duration":242}},{"uid":"f08d742b8a1cd194","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/f08d742b8a1cd194","status":"passed","time":{"start":1761134267062,"stop":1761134267259,"duration":197}},{"uid":"766de95375171bd5","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/766de95375171bd5","status":"passed","time":{"start":1761128657669,"stop":1761128657920,"duration":251}}]},"tags":["backend"]},"source":"7cf6ae1cd90411db.json","parameterValues":[]}