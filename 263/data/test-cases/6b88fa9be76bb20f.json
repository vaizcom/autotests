{"uid":"6b88fa9be76bb20f","name":"Попытка экспортировать Y-Doc из чужого space(kind=Project)— должен вернуться SpaceIdNotSpecified","fullName":"tests.test_backend.document.test_get_y_document#test_get_ydocument_foreign_space","historyId":"ec08b04fc5b5f0f87bb676a38c4f76f3","time":{"start":1752048126513,"stop":1752048126513,"duration":0},"description":" ","descriptionHtml":"","status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f60ac7d5290>\nguest_client = <tests.core.client.APIClient object at 0x7f60aba42810>\nrequest = <FixtureRequest for <Function test_get_ydocument_foreign_space[project]>>\nkind = 'Project', kind_id_fixture = 'temp_project'\ntemp_space = '686e2144dc7db2861c816ae1'\n\n    @pytest.mark.parametrize(\n        'kind, kind_id_fixture',\n        [\n            ('Project', 'temp_project'),\n            ('Space', 'temp_space'),\n            ('Member', 'temp_member'),\n        ],\n        ids=['project', 'space', 'member'],\n    )\n    def test_get_ydocument_foreign_space(owner_client, guest_client, request, kind, kind_id_fixture, temp_space):\n        \"\"\" \"\"\"\n        allure.dynamic.title(\n            f'Попытка экспортировать Y-Doc из чужого space(kind={kind})— должен вернуться SpaceIdNotSpecified'\n        )\n>       kind_id = request.getfixturevalue(kind_id_fixture)\n\ntests/test_backend/document/test_get_y_document.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:532: in getfixturevalue\n    fixturedef = self._get_active_fixturedef(argname)\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:617: in _get_active_fixturedef\n    fixturedef.execute(request=subrequest)\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:1071: in execute\n    raise exc.with_traceback(exc_tb)\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:1140: in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:891: in call_fixture_func\n    fixture_result = next(generator)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nowner_client = <tests.core.client.APIClient object at 0x7f60ac7d5290>\ntemp_space = '686e2144dc7db2861c816ae1'\n\n    @pytest.fixture(scope='session')\n    def temp_project(owner_client, temp_space):\n        \"\"\"Создаёт проект, который используется во всех тестах модуля.\"\"\"\n        name = generate_project_name()\n        slug = generate_slug()\n        common_kwargs = {'color': 'blue', 'icon': 'Dot', 'description': 'temporary project', 'space_id': temp_space}\n        response = owner_client.post(**create_project_endpoint(name=name, slug=slug, **common_kwargs))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:124: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1752047939816,"stop":1752047940592,"duration":776},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1752047940592,"stop":1752047941242,"duration":650},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"guest_client","time":{"start":1752047947777,"stop":1752047948416,"duration":639},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"temp_space::0","time":{"start":1752048136220,"stop":1752048136701,"duration":481},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_y_document"},{"name":"host","value":"pkrvmfkh1xnbeme"},{"name":"thread","value":"2510-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_y_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"kind","value":"'Project'"},{"name":"kind_id_fixture","value":"'temp_project'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":26,"unknown":0,"total":27},"items":[{"uid":"4c99305e2509e4c6","reportUrl":"https://vaizcom.github.io/autotests/262//#testresult/4c99305e2509e4c6","status":"passed","time":{"start":1752046818998,"stop":1752046819709,"duration":711}},{"uid":"85f34d541148886f","reportUrl":"https://vaizcom.github.io/autotests/261//#testresult/85f34d541148886f","status":"passed","time":{"start":1752044835883,"stop":1752044836709,"duration":826}},{"uid":"c7ba42e5e81ec4ce","reportUrl":"https://vaizcom.github.io/autotests/260//#testresult/c7ba42e5e81ec4ce","status":"passed","time":{"start":1751982810525,"stop":1751982811265,"duration":740}},{"uid":"67f2c443fd3f2d39","reportUrl":"https://vaizcom.github.io/autotests/259//#testresult/67f2c443fd3f2d39","status":"passed","time":{"start":1751976299563,"stop":1751976300410,"duration":847}},{"uid":"65b72f6eb4ffec55","reportUrl":"https://vaizcom.github.io/autotests/258//#testresult/65b72f6eb4ffec55","status":"passed","time":{"start":1751975249083,"stop":1751975249731,"duration":648}},{"uid":"153de33232c2f86f","reportUrl":"https://vaizcom.github.io/autotests/257//#testresult/153de33232c2f86f","status":"passed","time":{"start":1751973537331,"stop":1751973537935,"duration":604}},{"uid":"32688a90f2f94ae5","reportUrl":"https://vaizcom.github.io/autotests/256//#testresult/32688a90f2f94ae5","status":"passed","time":{"start":1751971820151,"stop":1751971820764,"duration":613}},{"uid":"ef926add864070a0","reportUrl":"https://vaizcom.github.io/autotests/255//#testresult/ef926add864070a0","status":"passed","time":{"start":1751965223305,"stop":1751965224291,"duration":986}},{"uid":"8c2c3905d397f40b","reportUrl":"https://vaizcom.github.io/autotests/254//#testresult/8c2c3905d397f40b","status":"passed","time":{"start":1751959302125,"stop":1751959302707,"duration":582}},{"uid":"c99e1366ed3056de","reportUrl":"https://vaizcom.github.io/autotests/253//#testresult/c99e1366ed3056de","status":"passed","time":{"start":1751897440974,"stop":1751897441519,"duration":545}},{"uid":"1243ef1425d3c76e","reportUrl":"https://vaizcom.github.io/autotests/252//#testresult/1243ef1425d3c76e","status":"passed","time":{"start":1751894132360,"stop":1751894133196,"duration":836}},{"uid":"d3b1f4a8ecc5c3e6","reportUrl":"https://vaizcom.github.io/autotests/251//#testresult/d3b1f4a8ecc5c3e6","status":"passed","time":{"start":1751889813787,"stop":1751889814299,"duration":512}},{"uid":"e0fd0019134c63f6","reportUrl":"https://vaizcom.github.io/autotests/250//#testresult/e0fd0019134c63f6","status":"passed","time":{"start":1751888488921,"stop":1751888489702,"duration":781}},{"uid":"87ce6bd21fbe50ed","reportUrl":"https://vaizcom.github.io/autotests/249//#testresult/87ce6bd21fbe50ed","status":"passed","time":{"start":1751887885475,"stop":1751887886361,"duration":886}},{"uid":"71733aa547a44986","reportUrl":"https://vaizcom.github.io/autotests/248//#testresult/71733aa547a44986","status":"passed","time":{"start":1751884652653,"stop":1751884653252,"duration":599}},{"uid":"ce772b4404f2714d","reportUrl":"https://vaizcom.github.io/autotests/247//#testresult/ce772b4404f2714d","status":"passed","time":{"start":1751882976036,"stop":1751882976550,"duration":514}},{"uid":"ab3812c68a42d157","reportUrl":"https://vaizcom.github.io/autotests/246//#testresult/ab3812c68a42d157","status":"passed","time":{"start":1751535144321,"stop":1751535144969,"duration":648}},{"uid":"eca70d22044889e9","reportUrl":"https://vaizcom.github.io/autotests/245//#testresult/eca70d22044889e9","status":"passed","time":{"start":1751525584610,"stop":1751525585742,"duration":1132}},{"uid":"e56021f8d05e11d","reportUrl":"https://vaizcom.github.io/autotests/244//#testresult/e56021f8d05e11d","status":"passed","time":{"start":1751463952047,"stop":1751463952677,"duration":630}},{"uid":"148a4f2a47605903","reportUrl":"https://vaizcom.github.io/autotests/243//#testresult/148a4f2a47605903","status":"passed","time":{"start":1751463674287,"stop":1751463674836,"duration":549}}]},"tags":["backend"]},"source":"6b88fa9be76bb20f.json","parameterValues":["'Project'","'temp_project'"]}