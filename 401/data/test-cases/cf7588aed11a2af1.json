{"uid":"cf7588aed11a2af1","name":"test_get_document_invalid_input[special-chars]","fullName":"tests.test_backend.document.test_get_document#test_get_document_invalid_input","historyId":"ec130069a8fd0e5bd9c6d22aecd32737","time":{"start":1761910615778,"stop":1761910615778,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fce4b119550>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910495818,"stop":1761910495819,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910495819,"stop":1761910496047,"duration":228},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761910503762,"stop":1761910503877,"duration":115},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"document_id","value":"'!@#$'"},{"name":"expected_error_code","value":"'InvalidForm'"},{"name":"expected_status","value":"400"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":51},"items":[{"uid":"fa7721f2961bfeea","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/fa7721f2961bfeea","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910008856,"stop":1761910008856,"duration":0}},{"uid":"6a95259eb220b2cd","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/6a95259eb220b2cd","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900039970,"stop":1761900039970,"duration":0}},{"uid":"3c94544c8dd4a8df","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/3c94544c8dd4a8df","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835060173,"stop":1761835060173,"duration":0}},{"uid":"2b710659c3d354dd","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/2b710659c3d354dd","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834645231,"stop":1761834645231,"duration":0}},{"uid":"cb9b27b815c6e980","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/cb9b27b815c6e980","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833481646,"stop":1761833481646,"duration":0}},{"uid":"34b9add8e9b6b739","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/34b9add8e9b6b739","status":"passed","time":{"start":1761821752657,"stop":1761821752837,"duration":180}},{"uid":"9a810293e3a2c221","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/9a810293e3a2c221","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818769776,"stop":1761818769776,"duration":0}},{"uid":"3cd5412576dd233a","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/3cd5412576dd233a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748633103,"stop":1761748633103,"duration":0}},{"uid":"ecffa751c746f9ff","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/ecffa751c746f9ff","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747909366,"stop":1761747909366,"duration":0}},{"uid":"b9562fc5b90442ff","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/b9562fc5b90442ff","status":"passed","time":{"start":1761746933726,"stop":1761746934029,"duration":303}},{"uid":"6ccc5fe7ff1c1cfb","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/6ccc5fe7ff1c1cfb","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745741245,"stop":1761745741245,"duration":0}},{"uid":"205a9139f9a4700d","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/205a9139f9a4700d","status":"passed","time":{"start":1761576766555,"stop":1761576766763,"duration":208}},{"uid":"9401ee64da2b3d77","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/9401ee64da2b3d77","status":"passed","time":{"start":1761557403229,"stop":1761557403519,"duration":290}},{"uid":"9686ef922d59978c","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/9686ef922d59978c","status":"passed","time":{"start":1761308624784,"stop":1761308624974,"duration":190}},{"uid":"a7af520ba029a559","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/a7af520ba029a559","status":"passed","time":{"start":1761306788835,"stop":1761306789058,"duration":223}},{"uid":"dbd5be51e677c0ec","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/dbd5be51e677c0ec","status":"passed","time":{"start":1761137084009,"stop":1761137084234,"duration":225}},{"uid":"58ed47bfa24f5c4b","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/58ed47bfa24f5c4b","status":"passed","time":{"start":1761135769605,"stop":1761135769857,"duration":252}},{"uid":"415e6fe91fb860b6","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/415e6fe91fb860b6","status":"passed","time":{"start":1761134189419,"stop":1761134189613,"duration":194}},{"uid":"a388e5f55b951764","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/a388e5f55b951764","status":"passed","time":{"start":1761128562736,"stop":1761128563648,"duration":912}},{"uid":"403dab452b2c3cfc","reportUrl":"https://vaizcom.github.io/autotests/383//#testresult/403dab452b2c3cfc","status":"passed","time":{"start":1761124668275,"stop":1761124668530,"duration":255}}]},"tags":["backend"]},"source":"cf7588aed11a2af1.json","parameterValues":["'!@#$'","'InvalidForm'","400"]}