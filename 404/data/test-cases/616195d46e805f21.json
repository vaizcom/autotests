{"uid":"616195d46e805f21","name":"Проверка структуры ответа при создании документа","fullName":"tests.test_backend.document.test_create_document#test_document_response_structure","historyId":"07ea782e2e2d163aec125a52a8ee32ba","time":{"start":1761921877368,"stop":1761921877368,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fc7d133bfd0>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761921763685,"stop":1761921763685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761921763685,"stop":1761921764117,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761921773063,"stop":1761921773182,"duration":119},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_create_document"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2549-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_create_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":55},"items":[{"uid":"1e31c10a34fe078","reportUrl":"https://vaizcom.github.io/autotests/404//#testresult/1e31c10a34fe078","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761912188284,"stop":1761912188284,"duration":0}},{"uid":"673b176d3f37ab3","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/673b176d3f37ab3","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911300226,"stop":1761911300226,"duration":0}},{"uid":"a472c9d507239e1d","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/a472c9d507239e1d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910911906,"stop":1761910911906,"duration":0}},{"uid":"b58cc69a2c483250","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/b58cc69a2c483250","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910613765,"stop":1761910613765,"duration":0}},{"uid":"1fcacf399b64dac3","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/1fcacf399b64dac3","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910005635,"stop":1761910005635,"duration":0}},{"uid":"dd2ea19f2c03ecc7","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/dd2ea19f2c03ecc7","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900037117,"stop":1761900037117,"duration":0}},{"uid":"2c1446426dfc1a39","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/2c1446426dfc1a39","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835057744,"stop":1761835057744,"duration":0}},{"uid":"61bb38c11238137c","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/61bb38c11238137c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834642225,"stop":1761834642225,"duration":0}},{"uid":"25fbfedcdb35a7c0","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/25fbfedcdb35a7c0","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833478330,"stop":1761833478330,"duration":0}},{"uid":"a02881560d7eb633","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/a02881560d7eb633","status":"passed","time":{"start":1761821720129,"stop":1761821720807,"duration":678}},{"uid":"377f38a755c09414","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/377f38a755c09414","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818766599,"stop":1761818766599,"duration":0}},{"uid":"240a7a28da2f0f46","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/240a7a28da2f0f46","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748630384,"stop":1761748630384,"duration":0}},{"uid":"524ced980484300d","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/524ced980484300d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747905928,"stop":1761747905928,"duration":0}},{"uid":"63b733af092c4db1","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/63b733af092c4db1","status":"passed","time":{"start":1761746885764,"stop":1761746886092,"duration":328}},{"uid":"4bd252cfcb6d0278","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/4bd252cfcb6d0278","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745738405,"stop":1761745738405,"duration":0}},{"uid":"e3ff3f6fe1c69e06","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/e3ff3f6fe1c69e06","status":"passed","time":{"start":1761576719483,"stop":1761576719763,"duration":280}},{"uid":"29b7b97c2df4bfba","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/29b7b97c2df4bfba","status":"passed","time":{"start":1761557369222,"stop":1761557369448,"duration":226}},{"uid":"945c3346f1edb347","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/945c3346f1edb347","status":"passed","time":{"start":1761308593829,"stop":1761308594069,"duration":240}},{"uid":"aff0480b1dfd2d99","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/aff0480b1dfd2d99","status":"passed","time":{"start":1761306754966,"stop":1761306755227,"duration":261}},{"uid":"5a3227bb48721c37","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/5a3227bb48721c37","status":"passed","time":{"start":1761137048005,"stop":1761137048265,"duration":260}}]},"tags":["backend"]},"source":"616195d46e805f21.json","parameterValues":[]}