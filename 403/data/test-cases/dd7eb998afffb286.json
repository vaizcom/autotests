{"uid":"dd7eb998afffb286","name":"Создание кастомного поля типа: Boolean","fullName":"tests.test_backend.board.test_create_board#test_create_custom_field_of_each_type","historyId":"c468a54a17d286174e9912ad9aebbbdb","time":{"start":1761911173001,"stop":1761911173001,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fbc912cb790>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761911162887,"stop":1761911162887,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761911162888,"stop":1761911163517,"duration":629},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761911172524,"stop":1761911172705,"duration":181},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.board"},{"name":"suite","value":"test_create_board"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.board.test_create_board"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"field_type","value":"'Boolean'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":53},"items":[{"uid":"2ed2ad1513402d89","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/2ed2ad1513402d89","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910801834,"stop":1761910801834,"duration":0}},{"uid":"78b872ba2e52e99a","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/78b872ba2e52e99a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910504175,"stop":1761910504175,"duration":0}},{"uid":"ffe9624110f64644","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/ffe9624110f64644","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761909867208,"stop":1761909867208,"duration":0}},{"uid":"f69ed5bf885c7961","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/f69ed5bf885c7961","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761899901133,"stop":1761899901133,"duration":0}},{"uid":"1fbfe20d70d4c8ff","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/1fbfe20d70d4c8ff","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834950118,"stop":1761834950118,"duration":0}},{"uid":"add001bf1daa2d19","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/add001bf1daa2d19","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834497878,"stop":1761834497878,"duration":0}},{"uid":"63cfe613d71b79ed","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/63cfe613d71b79ed","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833327522,"stop":1761833327522,"duration":0}},{"uid":"567105112dabcd26","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/567105112dabcd26","status":"passed","time":{"start":1761821500905,"stop":1761821501154,"duration":249}},{"uid":"3a32301b758cf10d","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/3a32301b758cf10d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818627799,"stop":1761818627799,"duration":0}},{"uid":"b3c3c0965c88e2e1","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/b3c3c0965c88e2e1","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748512384,"stop":1761748512384,"duration":0}},{"uid":"7845e3d83fe558b9","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/7845e3d83fe558b9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747771966,"stop":1761747771966,"duration":0}},{"uid":"4eb5df6169459956","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/4eb5df6169459956","status":"passed","time":{"start":1761746616619,"stop":1761746616932,"duration":313}},{"uid":"e6f300c6fe743fb0","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/e6f300c6fe743fb0","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745637256,"stop":1761745637256,"duration":0}},{"uid":"1bfd936f2575db60","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/1bfd936f2575db60","status":"passed","time":{"start":1761576492612,"stop":1761576492840,"duration":228}},{"uid":"cf9777c68a348106","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/cf9777c68a348106","status":"passed","time":{"start":1761557149418,"stop":1761557149638,"duration":220}},{"uid":"19f6d91a3ae5031b","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/19f6d91a3ae5031b","status":"passed","time":{"start":1761308373770,"stop":1761308373987,"duration":217}},{"uid":"56f4d9136c3221c3","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/56f4d9136c3221c3","status":"passed","time":{"start":1761306521531,"stop":1761306521761,"duration":230}},{"uid":"a2a3c97f52b0ba23","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/a2a3c97f52b0ba23","status":"passed","time":{"start":1761136815947,"stop":1761136816204,"duration":257}},{"uid":"29210c44e3fc17fd","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/29210c44e3fc17fd","status":"passed","time":{"start":1761135468285,"stop":1761135468552,"duration":267}},{"uid":"a2a9b6bb0004b472","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/a2a9b6bb0004b472","status":"passed","time":{"start":1761133933679,"stop":1761133933924,"duration":245}}]},"tags":["backend"]},"source":"dd7eb998afffb286.json","parameterValues":["'Boolean'"]}