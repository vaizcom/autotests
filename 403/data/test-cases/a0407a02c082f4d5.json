{"uid":"a0407a02c082f4d5","name":"test_document_kind_and_id[space]","fullName":"tests.test_backend.document.test_create_document#test_document_kind_and_id","historyId":"7f7027c0a8ae5177d6ab8ca3225f2ab3","time":{"start":1761911300193,"stop":1761911300193,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fbc912cb790>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761911162887,"stop":1761911162887,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761911162888,"stop":1761911163517,"duration":629},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761911172524,"stop":1761911172705,"duration":181},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_create_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_create_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"200"},{"name":"get_fixture","value":"'temp_space'"},{"name":"kind","value":"'Space'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":53},"items":[{"uid":"146e0104a4e42718","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/146e0104a4e42718","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910911873,"stop":1761910911873,"duration":0}},{"uid":"d273ebeb1b8f22f4","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/d273ebeb1b8f22f4","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910613732,"stop":1761910613732,"duration":0}},{"uid":"613778f5dcc6c79a","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/613778f5dcc6c79a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910005594,"stop":1761910005594,"duration":0}},{"uid":"3c3c856a281d8442","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/3c3c856a281d8442","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900037083,"stop":1761900037083,"duration":0}},{"uid":"957e448a3097b81c","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/957e448a3097b81c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835057696,"stop":1761835057696,"duration":0}},{"uid":"930ae02e96ea8ada","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/930ae02e96ea8ada","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834642189,"stop":1761834642189,"duration":0}},{"uid":"59cacf7b1b27149c","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/59cacf7b1b27149c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833478301,"stop":1761833478301,"duration":0}},{"uid":"1d4135771af66073","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/1d4135771af66073","status":"passed","time":{"start":1761821718392,"stop":1761821718645,"duration":253}},{"uid":"87eb6d45ab8da12e","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/87eb6d45ab8da12e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818766566,"stop":1761818766566,"duration":0}},{"uid":"c6112cac5e5fadeb","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/c6112cac5e5fadeb","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748630350,"stop":1761748630350,"duration":0}},{"uid":"f6789764ddddb6a6","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/f6789764ddddb6a6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747905894,"stop":1761747905894,"duration":0}},{"uid":"8c60400f7c15cca","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/8c60400f7c15cca","status":"passed","time":{"start":1761746883826,"stop":1761746884163,"duration":337}},{"uid":"d7920267c5732356","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/d7920267c5732356","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745738371,"stop":1761745738371,"duration":0}},{"uid":"5bfd7ccb34a15099","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/5bfd7ccb34a15099","status":"passed","time":{"start":1761576717747,"stop":1761576718018,"duration":271}},{"uid":"6223260cdb8d7de0","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/6223260cdb8d7de0","status":"passed","time":{"start":1761557367424,"stop":1761557367693,"duration":269}},{"uid":"8a94839e5a10f8f0","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/8a94839e5a10f8f0","status":"passed","time":{"start":1761308592447,"stop":1761308592707,"duration":260}},{"uid":"ee0460c043291559","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/ee0460c043291559","status":"passed","time":{"start":1761306753495,"stop":1761306753753,"duration":258}},{"uid":"d4691c7f209130a9","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/d4691c7f209130a9","status":"passed","time":{"start":1761137046575,"stop":1761137046840,"duration":265}},{"uid":"feb18c38abbebbe8","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/feb18c38abbebbe8","status":"passed","time":{"start":1761135724360,"stop":1761135724667,"duration":307}},{"uid":"f702a3f424665c28","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/f702a3f424665c28","status":"passed","time":{"start":1761134150523,"stop":1761134150771,"duration":248}}]},"tags":["backend"]},"source":"a0407a02c082f4d5.json","parameterValues":["200","'temp_space'","'Space'"]}