{"uid":"a85700d5a5ce44b2","name":"Создание документа без авторизации","fullName":"tests.test_backend.document.test_create_document#test_create_document_without_auth","historyId":"64a8ba04b9ef9c1e675371b4c61b97ae","time":{"start":1761912188291,"stop":1761912188291,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"foreign_client","time":{"start":1761912074648,"stop":1761912075106,"duration":458},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761912080667,"stop":1761912081009,"duration":342},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_create_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_create_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":54},"items":[{"uid":"a21ee36d36df688c","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/a21ee36d36df688c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911300233,"stop":1761911300233,"duration":0}},{"uid":"16bc9c727bb4e21b","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/16bc9c727bb4e21b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910911913,"stop":1761910911913,"duration":0}},{"uid":"a690e4339ec3a66f","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/a690e4339ec3a66f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910613772,"stop":1761910613772,"duration":0}},{"uid":"bc9e28e11a726c80","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/bc9e28e11a726c80","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910005648,"stop":1761910005648,"duration":0}},{"uid":"21f9a9f272f46aa3","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/21f9a9f272f46aa3","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900037123,"stop":1761900037123,"duration":0}},{"uid":"45eaa706b44c7328","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/45eaa706b44c7328","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835057751,"stop":1761835057751,"duration":0}},{"uid":"cbdab7f944dd043f","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/cbdab7f944dd043f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834642232,"stop":1761834642232,"duration":0}},{"uid":"e0e078924e271015","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/e0e078924e271015","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833478336,"stop":1761833478336,"duration":0}},{"uid":"374777a2721e3d54","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/374777a2721e3d54","status":"passed","time":{"start":1761821720809,"stop":1761821720962,"duration":153}},{"uid":"a2b3cb68a7f9bd1","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/a2b3cb68a7f9bd1","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818766606,"stop":1761818766606,"duration":0}},{"uid":"3ef55a3ac3570ac8","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/3ef55a3ac3570ac8","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748630390,"stop":1761748630390,"duration":0}},{"uid":"b5eeb19e9dd338cb","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/b5eeb19e9dd338cb","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747905935,"stop":1761747905935,"duration":0}},{"uid":"ca4dc75c88a73e31","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/ca4dc75c88a73e31","status":"passed","time":{"start":1761746886094,"stop":1761746886260,"duration":166}},{"uid":"4e80df7a89bb38e3","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/4e80df7a89bb38e3","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745738411,"stop":1761745738411,"duration":0}},{"uid":"7eaad5e9b4b76b7a","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/7eaad5e9b4b76b7a","status":"passed","time":{"start":1761576719765,"stop":1761576719938,"duration":173}},{"uid":"59144adcfb717756","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/59144adcfb717756","status":"passed","time":{"start":1761557369450,"stop":1761557369778,"duration":328}},{"uid":"4e6b3f55bb9b7ca7","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/4e6b3f55bb9b7ca7","status":"passed","time":{"start":1761308594070,"stop":1761308594430,"duration":360}},{"uid":"74e168c9c32ea47f","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/74e168c9c32ea47f","status":"passed","time":{"start":1761306755228,"stop":1761306755570,"duration":342}},{"uid":"f72ed99eeebdc49a","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/f72ed99eeebdc49a","status":"passed","time":{"start":1761137048266,"stop":1761137048428,"duration":162}},{"uid":"29855c1210012af1","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/29855c1210012af1","status":"passed","time":{"start":1761135726375,"stop":1761135726567,"duration":192}}]},"tags":["backend"]},"source":"a85700d5a5ce44b2.json","parameterValues":[]}