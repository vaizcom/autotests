{"uid":"40818a13fbfc9f90","name":"Test remove space success","fullName":"tests.test_backend.space.test_space#test_remove_space_success","historyId":"36b2769c56e8e241e751daddb2086ff7","time":{"start":1761912194437,"stop":1761912194564,"duration":127},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @allure.title('Test remove space success')\n    def test_remove_space_success(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        with allure.step('Create space'):\n            create_response = client.post(**create_space_endpoint(name=name))\n>           assert create_response.status_code == 200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\ntests/test_backend/space/test_space.py:68: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @allure.title('Test remove space success')\n    def test_remove_space_success(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        with allure.step('Create space'):\n            create_response = client.post(**create_space_endpoint(name=name))\n>           assert create_response.status_code == 200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\ntests/test_backend/space/test_space.py:68: AssertionError","steps":[{"name":"Create space","time":{"start":1761912194437,"stop":1761912194564,"duration":127},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/space/test_space.py\", line 68, in test_remove_space_success\n    assert create_response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.space"},{"name":"suite","value":"test_space"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.space.test_space"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":54},"items":[{"uid":"e9ab0b9e0b2b0763","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/e9ab0b9e0b2b0763","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911308398,"stop":1761911308574,"duration":176}},{"uid":"cc4ded68838a9cc9","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/cc4ded68838a9cc9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910918093,"stop":1761910918206,"duration":113}},{"uid":"d7d4913164b2f45d","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/d7d4913164b2f45d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910619760,"stop":1761910619879,"duration":119}},{"uid":"971c0d9866e93c2c","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/971c0d9866e93c2c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910013357,"stop":1761910013531,"duration":174}},{"uid":"a4961192a404c96d","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/a4961192a404c96d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900044847,"stop":1761900045022,"duration":175}},{"uid":"c0cfef462d5c70f7","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/c0cfef462d5c70f7","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835063478,"stop":1761835063602,"duration":124}},{"uid":"4f54340eb1f999ac","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/4f54340eb1f999ac","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834650432,"stop":1761834650653,"duration":221}},{"uid":"e5091815c3176681","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/e5091815c3176681","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833486322,"stop":1761833486521,"duration":199}},{"uid":"d8f3088580fcbe1d","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/d8f3088580fcbe1d","status":"passed","time":{"start":1761821828885,"stop":1761821830457,"duration":1572}},{"uid":"e3515d884e3bb355","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/e3515d884e3bb355","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818774194,"stop":1761818774366,"duration":172}},{"uid":"eec527dc6effe2fc","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/eec527dc6effe2fc","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748637209,"stop":1761748637334,"duration":125}},{"uid":"980e7850c3a93025","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/980e7850c3a93025","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747914452,"stop":1761747914640,"duration":188}},{"uid":"e30a21a1622be570","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/e30a21a1622be570","status":"passed","time":{"start":1761747041379,"stop":1761747043701,"duration":2322}},{"uid":"7ff40cec07f2afd7","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/7ff40cec07f2afd7","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745744611,"stop":1761745744725,"duration":114}},{"uid":"c560b09edb92ecf7","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/c560b09edb92ecf7","status":"passed","time":{"start":1761576861367,"stop":1761576863381,"duration":2014}},{"uid":"62defb254031dd4e","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/62defb254031dd4e","status":"passed","time":{"start":1761557480565,"stop":1761557482076,"duration":1511}},{"uid":"9dcd8d2113fcea9e","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/9dcd8d2113fcea9e","status":"passed","time":{"start":1761308697538,"stop":1761308698968,"duration":1430}},{"uid":"4cf6de8e5ab66082","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/4cf6de8e5ab66082","status":"passed","time":{"start":1761306865417,"stop":1761306866899,"duration":1482}},{"uid":"e37e9d137ca0c591","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/e37e9d137ca0c591","status":"passed","time":{"start":1761137164875,"stop":1761137166927,"duration":2052}},{"uid":"7aa2b1bb2e7e3093","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/7aa2b1bb2e7e3093","status":"passed","time":{"start":1761135863801,"stop":1761135865913,"duration":2112}}]},"tags":["backend"]},"source":"40818a13fbfc9f90.json","parameterValues":[]}