{"uid":"ddd2dd418db02cee","name":"Проверка связи родительской задачи и подзадачи, корректность отображения 'parentTask' и 'subtasks'","fullName":"tests.test_backend.task_service.create_task.test_subtask_parent_relationships#test_subtask_parent_child_relationships","historyId":"91eaca27135b9b296aa5a1c62b464df2","time":{"start":1761910630997,"stop":1761910631114,"duration":117},"description":"\n    тест проверяет связи родительской задачи и подзадачи через get_task_endpoint,\n    а также корректное заполнение полей 'parentTask' и 'subtasks'.\n    ","descriptionHtml":"<pre><code>тест проверяет связи родительской задачи и подзадачи через get_task_endpoint,\nа также корректное заполнение полей 'parentTask' и 'subtasks'.\n</code></pre>\n","status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetBoard","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fce4b119550>\nmain_space = '6866309d85fb8d104544a61e'\ncreate_task_in_main = <function create_task_in_main.<locals>._create_task at 0x7fce4ade2fc0>\n\n    @allure.parent_suite(\"create_task\")\n    @allure.title(\"Проверка связи родительской задачи и подзадачи, корректность отображения 'parentTask' и 'subtasks'\")\n    def test_subtask_parent_child_relationships(\n        owner_client, main_space, create_task_in_main\n    ):\n        \"\"\"\n        тест проверяет связи родительской задачи и подзадачи через get_task_endpoint,\n        а также корректное заполнение полей 'parentTask' и 'subtasks'.\n        \"\"\"\n        parent_id = subtask_id = None\n    \n        # Создаём родительскую задачу и подзадачу, чтобы проверить связи\n        with allure.step(\"Создание родительской задачи в роли owner_client\"):\n>           parent_task = create_task_in_main(\n                \"owner_client\",\n                name=\"Parent task for relationship check\"\n            )\n\ntests/test_backend/task_service/create_task/test_subtask_parent_relationships.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_backend/task_service/create_task/conftest.py:32: in _create_task\n    random_type_id = kwargs.get(\"types\") or [get_random_type_id(client, main_board, main_space)]\ntests/test_backend/task_service/create_task/utils.py:52: in get_random_type_id\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetBoard\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/requests/models.py:1024: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910495818,"stop":1761910495819,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910495819,"stop":1761910496047,"duration":228},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1761910498993,"stop":1761910499413,"duration":420},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1761910499414,"stop":1761910499610,"duration":196},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_project","time":{"start":1761910499610,"stop":1761910499986,"duration":376},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_board","time":{"start":1761910502456,"stop":1761910502685,"duration":229},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_task_in_main","time":{"start":1761910630997,"stop":1761910630997,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    тест проверяет связи родительской задачи и подзадачи через get_task_endpoint,\n    а также корректное заполнение полей 'parentTask' и 'subtasks'.\n    ","status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetBoard","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fce4b119550>\nmain_space = '6866309d85fb8d104544a61e'\ncreate_task_in_main = <function create_task_in_main.<locals>._create_task at 0x7fce4ade2fc0>\n\n    @allure.parent_suite(\"create_task\")\n    @allure.title(\"Проверка связи родительской задачи и подзадачи, корректность отображения 'parentTask' и 'subtasks'\")\n    def test_subtask_parent_child_relationships(\n        owner_client, main_space, create_task_in_main\n    ):\n        \"\"\"\n        тест проверяет связи родительской задачи и подзадачи через get_task_endpoint,\n        а также корректное заполнение полей 'parentTask' и 'subtasks'.\n        \"\"\"\n        parent_id = subtask_id = None\n    \n        # Создаём родительскую задачу и подзадачу, чтобы проверить связи\n        with allure.step(\"Создание родительской задачи в роли owner_client\"):\n>           parent_task = create_task_in_main(\n                \"owner_client\",\n                name=\"Parent task for relationship check\"\n            )\n\ntests/test_backend/task_service/create_task/test_subtask_parent_relationships.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_backend/task_service/create_task/conftest.py:32: in _create_task\n    random_type_id = kwargs.get(\"types\") or [get_random_type_id(client, main_board, main_space)]\ntests/test_backend/task_service/create_task/utils.py:52: in get_random_type_id\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetBoard\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/requests/models.py:1024: HTTPError","steps":[{"name":"Создание родительской задачи в роли owner_client","time":{"start":1761910630997,"stop":1761910631113,"duration":116},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetBoard\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/task_service/create_task/test_subtask_parent_relationships.py\", line 24, in test_subtask_parent_child_relationships\n    parent_task = create_task_in_main(\n                  ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/test_backend/task_service/create_task/conftest.py\", line 32, in _create_task\n    random_type_id = kwargs.get(\"types\") or [get_random_type_id(client, main_board, main_space)]\n                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/test_backend/task_service/create_task/utils.py\", line 52, in get_random_type_id\n    response.raise_for_status()\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/requests/models.py\", line 1024, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"create_task"},{"name":"tag","value":"backend"},{"name":"suite","value":"test_subtask_parent_relationships"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.task_service.create_task.test_subtask_parent_relationships"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":10,"skipped":0,"passed":9,"unknown":0,"total":19},"items":[{"uid":"6ac12863f9e05960","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/6ac12863f9e05960","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetBoard","time":{"start":1761910027847,"stop":1761910028022,"duration":175}},{"uid":"4b851e1318ab7316","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/4b851e1318ab7316","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-uat.vaiz.dev/v4/GetBoard","time":{"start":1761900059416,"stop":1761900059588,"duration":172}},{"uid":"6e0bac29ba411745","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/6e0bac29ba411745","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api.vaiz.dev/v4/GetBoard","time":{"start":1761835074688,"stop":1761835074808,"duration":120}},{"uid":"9b19386e83a4d5b7","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/9b19386e83a4d5b7","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-uat.vaiz.dev/v4/GetBoard","time":{"start":1761834665891,"stop":1761834666082,"duration":191}},{"uid":"58658dc37223d648","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/58658dc37223d648","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetBoard","time":{"start":1761833501316,"stop":1761833501492,"duration":176}},{"uid":"7638b19f9fe047f2","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/7638b19f9fe047f2","status":"passed","time":{"start":1761821888521,"stop":1761821892219,"duration":3698}},{"uid":"faedb73313bf9a44","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/faedb73313bf9a44","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetBoard","time":{"start":1761818787641,"stop":1761818787819,"duration":178}},{"uid":"7c5cfd71e0a2a9fd","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/7c5cfd71e0a2a9fd","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetBoard","time":{"start":1761748649005,"stop":1761748649124,"duration":119}},{"uid":"c1b88e38b7e17756","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/c1b88e38b7e17756","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetBoard","time":{"start":1761747926722,"stop":1761747926901,"duration":179}},{"uid":"84c2619eef2b18c2","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/84c2619eef2b18c2","status":"passed","time":{"start":1761747126677,"stop":1761747130780,"duration":4103}},{"uid":"b75923e00f5bf84e","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/b75923e00f5bf84e","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetBoard","time":{"start":1761745755712,"stop":1761745755831,"duration":119}},{"uid":"6f3ade3d30599a69","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/6f3ade3d30599a69","status":"passed","time":{"start":1761576960709,"stop":1761576964659,"duration":3950}},{"uid":"2532ad3126f6010c","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/2532ad3126f6010c","status":"passed","time":{"start":1761557540940,"stop":1761557543697,"duration":2757}},{"uid":"43d36bab41fa611d","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/43d36bab41fa611d","status":"passed","time":{"start":1761308776313,"stop":1761308780545,"duration":4232}},{"uid":"d609e7487446b978","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/d609e7487446b978","status":"passed","time":{"start":1761306946458,"stop":1761306949505,"duration":3047}},{"uid":"2099e9ca37828725","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/2099e9ca37828725","status":"passed","time":{"start":1761137231760,"stop":1761137235623,"duration":3863}},{"uid":"aded05cfa76d7b3a","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/aded05cfa76d7b3a","status":"passed","time":{"start":1761135968869,"stop":1761135972404,"duration":3535}},{"uid":"e40c144f4610a52d","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/e40c144f4610a52d","status":"passed","time":{"start":1761134358143,"stop":1761134361123,"duration":2980}}]},"tags":["backend"]},"source":"ddd2dd418db02cee.json","parameterValues":[]}