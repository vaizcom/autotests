{"uid":"45d37e63af158cc2","name":"Получение списка борд: проверка созданных борд и их обязательных полей(name, projectId, createdAt)","fullName":"tests.test_backend.board.test_board#test_get_boards_required_fields","historyId":"7c9aa540eca22d9f87dbf279a0f64b57","time":{"start":1752047942187,"stop":1752047942187,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f60ac7d5290>\ntemp_space = '686e2144dc7db2861c816ae1'\n\n    @pytest.fixture(scope='session')\n    def temp_project(owner_client, temp_space):\n        \"\"\"Создаёт проект, который используется во всех тестах модуля.\"\"\"\n        name = generate_project_name()\n        slug = generate_slug()\n        common_kwargs = {'color': 'blue', 'icon': 'Dot', 'description': 'temporary project', 'space_id': temp_space}\n        response = owner_client.post(**create_project_endpoint(name=name, slug=slug, **common_kwargs))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:124: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1752047939816,"stop":1752047940592,"duration":776},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1752047940592,"stop":1752047941242,"duration":650},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_project","time":{"start":1752047941242,"stop":1752047941963,"duration":721},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 124, in temp_project\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[{"name":"temp_space::0","time":{"start":1752048136220,"stop":1752048136701,"duration":481},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.board"},{"name":"suite","value":"test_board"},{"name":"host","value":"pkrvmfkh1xnbeme"},{"name":"thread","value":"2510-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.board.test_board"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":1,"skipped":0,"passed":115,"unknown":0,"total":118},"items":[{"uid":"93e2de50451cbb6","reportUrl":"https://vaizcom.github.io/autotests/262//#testresult/93e2de50451cbb6","status":"passed","time":{"start":1752046624648,"stop":1752046625666,"duration":1018}},{"uid":"3b26d0bc7571f3","reportUrl":"https://vaizcom.github.io/autotests/261//#testresult/3b26d0bc7571f3","status":"passed","time":{"start":1752044615483,"stop":1752044616685,"duration":1202}},{"uid":"3ff36ba0c3112c46","reportUrl":"https://vaizcom.github.io/autotests/260//#testresult/3ff36ba0c3112c46","status":"passed","time":{"start":1751982637942,"stop":1751982639030,"duration":1088}},{"uid":"ef856d5665295754","reportUrl":"https://vaizcom.github.io/autotests/259//#testresult/ef856d5665295754","status":"passed","time":{"start":1751976095227,"stop":1751976096365,"duration":1138}},{"uid":"5883574ce49023e9","reportUrl":"https://vaizcom.github.io/autotests/258//#testresult/5883574ce49023e9","status":"passed","time":{"start":1751975061003,"stop":1751975062029,"duration":1026}},{"uid":"220c04660c80f1b","reportUrl":"https://vaizcom.github.io/autotests/257//#testresult/220c04660c80f1b","status":"passed","time":{"start":1751973351680,"stop":1751973352664,"duration":984}},{"uid":"8c54ef799f126018","reportUrl":"https://vaizcom.github.io/autotests/256//#testresult/8c54ef799f126018","status":"passed","time":{"start":1751971627187,"stop":1751971628196,"duration":1009}},{"uid":"d44ce2ef04078bec","reportUrl":"https://vaizcom.github.io/autotests/255//#testresult/d44ce2ef04078bec","status":"passed","time":{"start":1751965020047,"stop":1751965021275,"duration":1228}},{"uid":"96d19882c30ddc8c","reportUrl":"https://vaizcom.github.io/autotests/254//#testresult/96d19882c30ddc8c","status":"passed","time":{"start":1751959116243,"stop":1751959117312,"duration":1069}},{"uid":"34a1ba3c71008559","reportUrl":"https://vaizcom.github.io/autotests/253//#testresult/34a1ba3c71008559","status":"passed","time":{"start":1751897231775,"stop":1751897232985,"duration":1210}},{"uid":"8477aca9596e8076","reportUrl":"https://vaizcom.github.io/autotests/252//#testresult/8477aca9596e8076","status":"passed","time":{"start":1751893925467,"stop":1751893926919,"duration":1452}},{"uid":"edb5b19ed03f87ac","reportUrl":"https://vaizcom.github.io/autotests/251//#testresult/edb5b19ed03f87ac","status":"passed","time":{"start":1751889622590,"stop":1751889624171,"duration":1581}},{"uid":"febc86d4932a16d1","reportUrl":"https://vaizcom.github.io/autotests/250//#testresult/febc86d4932a16d1","status":"passed","time":{"start":1751888311170,"stop":1751888312258,"duration":1088}},{"uid":"9d0851a96a184e54","reportUrl":"https://vaizcom.github.io/autotests/249//#testresult/9d0851a96a184e54","status":"passed","time":{"start":1751887705271,"stop":1751887706362,"duration":1091}},{"uid":"a0a03a315267a7e","reportUrl":"https://vaizcom.github.io/autotests/248//#testresult/a0a03a315267a7e","status":"passed","time":{"start":1751884484841,"stop":1751884485903,"duration":1062}},{"uid":"287578583a6cb8b0","reportUrl":"https://vaizcom.github.io/autotests/247//#testresult/287578583a6cb8b0","status":"passed","time":{"start":1751882739372,"stop":1751882740712,"duration":1340}},{"uid":"adc5fb276ef82c78","reportUrl":"https://vaizcom.github.io/autotests/246//#testresult/adc5fb276ef82c78","status":"passed","time":{"start":1751534983513,"stop":1751534984660,"duration":1147}},{"uid":"3719eb539e17dbd8","reportUrl":"https://vaizcom.github.io/autotests/245//#testresult/3719eb539e17dbd8","status":"passed","time":{"start":1751525379891,"stop":1751525381351,"duration":1460}},{"uid":"3fa6e9e4d044e01c","reportUrl":"https://vaizcom.github.io/autotests/244//#testresult/3fa6e9e4d044e01c","status":"passed","time":{"start":1751463805789,"stop":1751463806744,"duration":955}},{"uid":"ea37b1feb2b1b1e2","reportUrl":"https://vaizcom.github.io/autotests/243//#testresult/ea37b1feb2b1b1e2","status":"passed","time":{"start":1751463516248,"stop":1751463517337,"duration":1089}}]},"tags":["backend"]},"source":"45d37e63af158cc2.json","parameterValues":[]}