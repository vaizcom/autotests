{"uid":"aea5913a79db5317","name":"test_foreign_space_access_denied[space]","fullName":"tests.test_backend.document.test_get_documents#test_foreign_space_access_denied","historyId":"a32d70d68f76c7d2c196a9d6fdec7edc","time":{"start":1761748633449,"stop":1761748633449,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7ff20baf0a50>\nrequest = <FixtureRequest for <Function test_foreign_space_access_denied[space]>>\nkind = 'Space', fixture_name = 'temp_space'\nforeign_space = '69022696d625f1ae41332ede'\n\n    @pytest.mark.parametrize(\n        'kind, fixture_name',\n        [\n            ('Project', 'temp_project'),\n            ('Space', 'temp_space'),\n            ('Member', 'temp_member'),\n        ],\n        ids=['project', 'space', 'member'],\n    )\n    def test_foreign_space_access_denied(owner_client, request, kind, fixture_name, foreign_space):\n>       kind_id = request.getfixturevalue(fixture_name)\n\ntests/test_backend/document/test_get_documents.py:179: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:532: in getfixturevalue\n    fixturedef = self._get_active_fixturedef(argname)\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:617: in _get_active_fixturedef\n    fixturedef.execute(request=subrequest)\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:1071: in execute\n    raise exc.with_traceback(exc_tb)\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:1140: in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:891: in call_fixture_func\n    fixture_result = next(generator)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nowner_client = <tests.core.client.APIClient object at 0x7ff20baf0a50>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1761748498730,"stop":1761748498730,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761748498730,"stop":1761748498730,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761748498730,"stop":1761748499193,"duration":463},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761748498730,"stop":1761748498730,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761748498730,"stop":1761748498730,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"guest_client","time":{"start":1761748508711,"stop":1761748509294,"duration":583},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"foreign_space","time":{"start":1761748630411,"stop":1761748631441,"duration":1030},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"foreign_space::0","time":{"start":1761748651013,"stop":1761748651409,"duration":396},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_documents"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2586-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_documents"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"fixture_name","value":"'temp_space'"},{"name":"kind","value":"'Space'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":39,"unknown":0,"total":43},"items":[{"uid":"2fafa2678b4edd5a","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/2fafa2678b4edd5a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747909760,"stop":1761747909760,"duration":0}},{"uid":"51f9fb1686aa90e","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/51f9fb1686aa90e","status":"passed","time":{"start":1761746952273,"stop":1761746952521,"duration":248}},{"uid":"99d88cb7e80180fc","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/99d88cb7e80180fc","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745741595,"stop":1761745741595,"duration":0}},{"uid":"573fb4dc944d96ab","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/573fb4dc944d96ab","status":"passed","time":{"start":1761576781889,"stop":1761576782079,"duration":190}},{"uid":"81f00d97d80ae840","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/81f00d97d80ae840","status":"passed","time":{"start":1761557416529,"stop":1761557416673,"duration":144}},{"uid":"46c90a09e8cc5f7c","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/46c90a09e8cc5f7c","status":"passed","time":{"start":1761308636332,"stop":1761308636475,"duration":143}},{"uid":"7d5a85d64584f475","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/7d5a85d64584f475","status":"passed","time":{"start":1761306800663,"stop":1761306800815,"duration":152}},{"uid":"83cf064ca4287c6b","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/83cf064ca4287c6b","status":"passed","time":{"start":1761137096308,"stop":1761137096462,"duration":154}},{"uid":"59aabfcbaf6dd6db","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/59aabfcbaf6dd6db","status":"passed","time":{"start":1761135783108,"stop":1761135783297,"duration":189}},{"uid":"d71bc4cb793b2629","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/d71bc4cb793b2629","status":"passed","time":{"start":1761134200090,"stop":1761134200233,"duration":143}},{"uid":"672166ffbb826c20","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/672166ffbb826c20","status":"passed","time":{"start":1761128578351,"stop":1761128578554,"duration":203}},{"uid":"5f96fe7806c4846c","reportUrl":"https://vaizcom.github.io/autotests/383//#testresult/5f96fe7806c4846c","status":"passed","time":{"start":1761124682571,"stop":1761124682787,"duration":216}},{"uid":"98830ebc83faa0ad","reportUrl":"https://vaizcom.github.io/autotests/382//#testresult/98830ebc83faa0ad","status":"passed","time":{"start":1761119494624,"stop":1761119494768,"duration":144}},{"uid":"c76da666ff0fff1","reportUrl":"https://vaizcom.github.io/autotests/381//#testresult/c76da666ff0fff1","status":"passed","time":{"start":1761053515960,"stop":1761053516107,"duration":147}},{"uid":"7540c938a1e39832","reportUrl":"https://vaizcom.github.io/autotests/380//#testresult/7540c938a1e39832","status":"passed","time":{"start":1761047416752,"stop":1761047416904,"duration":152}},{"uid":"ad262ac38e29dfb7","reportUrl":"https://vaizcom.github.io/autotests/379//#testresult/ad262ac38e29dfb7","status":"passed","time":{"start":1760614837913,"stop":1760614838106,"duration":193}},{"uid":"b7c23e41829eecc7","reportUrl":"https://vaizcom.github.io/autotests/378//#testresult/b7c23e41829eecc7","status":"passed","time":{"start":1760599642481,"stop":1760599642644,"duration":163}},{"uid":"84f8d3c97a13ee41","reportUrl":"https://vaizcom.github.io/autotests/377//#testresult/84f8d3c97a13ee41","status":"passed","time":{"start":1760535647472,"stop":1760535647619,"duration":147}},{"uid":"403ad1291e0bfc64","reportUrl":"https://vaizcom.github.io/autotests/376//#testresult/403ad1291e0bfc64","status":"passed","time":{"start":1760534169614,"stop":1760534169825,"duration":211}},{"uid":"5ba8b296bc35469b","reportUrl":"https://vaizcom.github.io/autotests/375//#testresult/5ba8b296bc35469b","status":"passed","time":{"start":1760532690501,"stop":1760532690662,"duration":161}}]},"tags":["backend"]},"source":"aea5913a79db5317.json","parameterValues":["'temp_space'","'Space'"]}