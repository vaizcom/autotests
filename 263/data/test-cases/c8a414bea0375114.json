{"uid":"c8a414bea0375114","name":"test_edit_document_success[project]","fullName":"tests.test_backend.document.test_edit_document#test_edit_document_success","historyId":"de7b3d03bd7ee52001818c66a62d1d0b","time":{"start":1752048015047,"stop":1752048015047,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f60ac7d5290>\nrequest = <SubRequest 'temp_document' for <Function test_edit_document_success[project]>>\nkind = 'Project', kind_id_fixture = 'temp_project'\n\n    @pytest.fixture\n    def temp_document(owner_client, request, kind, kind_id_fixture):\n>       kind_id = request.getfixturevalue(kind_id_fixture)\n\ntests/conftest.py:235: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nowner_client = <tests.core.client.APIClient object at 0x7f60ac7d5290>\ntemp_space = '686e2144dc7db2861c816ae1'\n\n    @pytest.fixture(scope='session')\n    def temp_project(owner_client, temp_space):\n        \"\"\"Создаёт проект, который используется во всех тестах модуля.\"\"\"\n        name = generate_project_name()\n        slug = generate_slug()\n        common_kwargs = {'color': 'blue', 'icon': 'Dot', 'description': 'temporary project', 'space_id': temp_space}\n        response = owner_client.post(**create_project_endpoint(name=name, slug=slug, **common_kwargs))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:124: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1752047939816,"stop":1752047940592,"duration":776},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1752047940592,"stop":1752047941242,"duration":650},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_document","time":{"start":1752048015047,"stop":1752048015047,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 235, in temp_document\n    kind_id = request.getfixturevalue(kind_id_fixture)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 532, in getfixturevalue\n    fixturedef = self._get_active_fixturedef(argname)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 617, in _get_active_fixturedef\n    fixturedef.execute(request=subrequest)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1071, in execute\n    raise exc.with_traceback(exc_tb)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 124, in temp_project\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[{"name":"temp_space::0","time":{"start":1752048136220,"stop":1752048136701,"duration":481},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_edit_document"},{"name":"host","value":"pkrvmfkh1xnbeme"},{"name":"thread","value":"2510-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_edit_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"kind","value":"'Project'"},{"name":"kind_id_fixture","value":"'temp_project'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":26,"unknown":0,"total":27},"items":[{"uid":"fe431b26a872ece","reportUrl":"https://vaizcom.github.io/autotests/262//#testresult/fe431b26a872ece","status":"passed","time":{"start":1752046705590,"stop":1752046705893,"duration":303}},{"uid":"d5771b875a80c543","reportUrl":"https://vaizcom.github.io/autotests/261//#testresult/d5771b875a80c543","status":"passed","time":{"start":1752044712302,"stop":1752044712703,"duration":401}},{"uid":"9ed9c1ed479e1efc","reportUrl":"https://vaizcom.github.io/autotests/260//#testresult/9ed9c1ed479e1efc","status":"passed","time":{"start":1751982710246,"stop":1751982710581,"duration":335}},{"uid":"bc902dad8f6fa7e2","reportUrl":"https://vaizcom.github.io/autotests/259//#testresult/bc902dad8f6fa7e2","status":"passed","time":{"start":1751976185273,"stop":1751976185560,"duration":287}},{"uid":"6754b002dccb7bd4","reportUrl":"https://vaizcom.github.io/autotests/258//#testresult/6754b002dccb7bd4","status":"passed","time":{"start":1751975138532,"stop":1751975138797,"duration":265}},{"uid":"12ef1ae743dff926","reportUrl":"https://vaizcom.github.io/autotests/257//#testresult/12ef1ae743dff926","status":"passed","time":{"start":1751973427123,"stop":1751973427376,"duration":253}},{"uid":"c18890319fab5a","reportUrl":"https://vaizcom.github.io/autotests/256//#testresult/c18890319fab5a","status":"passed","time":{"start":1751971700573,"stop":1751971700845,"duration":272}},{"uid":"897a6ca7e1c0370e","reportUrl":"https://vaizcom.github.io/autotests/255//#testresult/897a6ca7e1c0370e","status":"passed","time":{"start":1751965105898,"stop":1751965106186,"duration":288}},{"uid":"6383c0bec256a809","reportUrl":"https://vaizcom.github.io/autotests/254//#testresult/6383c0bec256a809","status":"passed","time":{"start":1751959195354,"stop":1751959195636,"duration":282}},{"uid":"62bfb6cde056bac6","reportUrl":"https://vaizcom.github.io/autotests/253//#testresult/62bfb6cde056bac6","status":"passed","time":{"start":1751897318279,"stop":1751897318570,"duration":291}},{"uid":"9d9f3002cadab4ba","reportUrl":"https://vaizcom.github.io/autotests/252//#testresult/9d9f3002cadab4ba","status":"passed","time":{"start":1751894007769,"stop":1751894008088,"duration":319}},{"uid":"1c94e2263f223ae7","reportUrl":"https://vaizcom.github.io/autotests/251//#testresult/1c94e2263f223ae7","status":"passed","time":{"start":1751889692100,"stop":1751889692384,"duration":284}},{"uid":"f31617d23d853225","reportUrl":"https://vaizcom.github.io/autotests/250//#testresult/f31617d23d853225","status":"passed","time":{"start":1751888368556,"stop":1751888368882,"duration":326}},{"uid":"94196cce6b8cee23","reportUrl":"https://vaizcom.github.io/autotests/249//#testresult/94196cce6b8cee23","status":"passed","time":{"start":1751887764222,"stop":1751887764543,"duration":321}},{"uid":"2f5e64cb7a081b15","reportUrl":"https://vaizcom.github.io/autotests/248//#testresult/2f5e64cb7a081b15","status":"passed","time":{"start":1751884538381,"stop":1751884538688,"duration":307}},{"uid":"879b8b108169a99d","reportUrl":"https://vaizcom.github.io/autotests/247//#testresult/879b8b108169a99d","status":"passed","time":{"start":1751882808822,"stop":1751882809185,"duration":363}},{"uid":"4d498ad6634d8c4b","reportUrl":"https://vaizcom.github.io/autotests/246//#testresult/4d498ad6634d8c4b","status":"passed","time":{"start":1751535026903,"stop":1751535027251,"duration":348}},{"uid":"c5b6bddcb0ec96c3","reportUrl":"https://vaizcom.github.io/autotests/245//#testresult/c5b6bddcb0ec96c3","status":"passed","time":{"start":1751525425350,"stop":1751525425696,"duration":346}},{"uid":"e50c261824325e26","reportUrl":"https://vaizcom.github.io/autotests/244//#testresult/e50c261824325e26","status":"passed","time":{"start":1751463840045,"stop":1751463840468,"duration":423}},{"uid":"3ee6cd1b2578c956","reportUrl":"https://vaizcom.github.io/autotests/243//#testresult/3ee6cd1b2578c956","status":"passed","time":{"start":1751463555876,"stop":1751463556186,"duration":310}}]},"tags":["backend"]},"source":"c8a414bea0375114.json","parameterValues":["'Project'","'temp_project'"]}