{"uid":"5b5d36668d4256c4","name":"test_document_kind_and_id[project]","fullName":"tests.test_backend.document.test_create_document#test_document_kind_and_id","historyId":"139bb6fb5b5eba337fbebca9ca0e5edf","time":{"start":1761911300186,"stop":1761911300186,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fbc912cb790>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761911162887,"stop":1761911162887,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761911162888,"stop":1761911163517,"duration":629},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761911172524,"stop":1761911172705,"duration":181},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_create_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_create_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"200"},{"name":"get_fixture","value":"'temp_project'"},{"name":"kind","value":"'Project'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":53},"items":[{"uid":"fe67f66a9f4be131","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/fe67f66a9f4be131","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910911866,"stop":1761910911866,"duration":0}},{"uid":"9374e8faf9192326","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/9374e8faf9192326","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910613726,"stop":1761910613726,"duration":0}},{"uid":"7b7a20803b76601e","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/7b7a20803b76601e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910005587,"stop":1761910005587,"duration":0}},{"uid":"67c57efcfaa8a13f","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/67c57efcfaa8a13f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900037077,"stop":1761900037077,"duration":0}},{"uid":"fc8a9bf674ed26e1","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/fc8a9bf674ed26e1","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835057689,"stop":1761835057689,"duration":0}},{"uid":"190d896da751d76c","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/190d896da751d76c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834642182,"stop":1761834642182,"duration":0}},{"uid":"b007e1d6e8e5ba23","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/b007e1d6e8e5ba23","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833478295,"stop":1761833478295,"duration":0}},{"uid":"caddfa879820dc8a","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/caddfa879820dc8a","status":"passed","time":{"start":1761821718152,"stop":1761821718390,"duration":238}},{"uid":"e495835a570dda72","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/e495835a570dda72","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818766560,"stop":1761818766560,"duration":0}},{"uid":"9f42b7244f12dd1d","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/9f42b7244f12dd1d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748630344,"stop":1761748630344,"duration":0}},{"uid":"2d33f2a7d602cee","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/2d33f2a7d602cee","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747905887,"stop":1761747905887,"duration":0}},{"uid":"9182d7f2f799b3f4","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/9182d7f2f799b3f4","status":"passed","time":{"start":1761746883489,"stop":1761746883824,"duration":335}},{"uid":"93d1073ce1cb469","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/93d1073ce1cb469","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745738364,"stop":1761745738364,"duration":0}},{"uid":"efe7ecf11f0901ed","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/efe7ecf11f0901ed","status":"passed","time":{"start":1761576717466,"stop":1761576717745,"duration":279}},{"uid":"fbe2391276714b87","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/fbe2391276714b87","status":"passed","time":{"start":1761557367185,"stop":1761557367421,"duration":236}},{"uid":"89fd9b49d3452b6d","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/89fd9b49d3452b6d","status":"passed","time":{"start":1761308592193,"stop":1761308592445,"duration":252}},{"uid":"1b2e356eeab9fe3d","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/1b2e356eeab9fe3d","status":"passed","time":{"start":1761306753243,"stop":1761306753492,"duration":249}},{"uid":"215df733211d6852","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/215df733211d6852","status":"passed","time":{"start":1761137046334,"stop":1761137046573,"duration":239}},{"uid":"8a68edb06e6c7b93","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/8a68edb06e6c7b93","status":"passed","time":{"start":1761135724047,"stop":1761135724358,"duration":311}},{"uid":"c632df8d0c609faf","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/c632df8d0c609faf","status":"passed","time":{"start":1761134150265,"stop":1761134150521,"duration":256}}]},"tags":["backend"]},"source":"5b5d36668d4256c4.json","parameterValues":["200","'temp_project'","'Project'"]}