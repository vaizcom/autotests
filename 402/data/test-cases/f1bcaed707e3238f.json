{"uid":"f1bcaed707e3238f","name":"Создание документа с различными значениями title — ожидаемый статус 200","fullName":"tests.test_backend.document.test_create_document#test_document_title_validation","historyId":"3138287b64859e2cf0b114948ec5f7a3","time":{"start":1761910911770,"stop":1761910911770,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f1c6962ef90>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910792963,"stop":1761910793391,"duration":428},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761910801404,"stop":1761910801539,"duration":135},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_create_document"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2545-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_create_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_actual_title","value":"''"},{"name":"expected_status","value":"200"},{"name":"title","value":"''"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":52},"items":[{"uid":"96014efa7247909b","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/96014efa7247909b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910613645,"stop":1761910613645,"duration":0}},{"uid":"9cbba624a9425993","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/9cbba624a9425993","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910005505,"stop":1761910005505,"duration":0}},{"uid":"2dedf9a79bec21b8","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/2dedf9a79bec21b8","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900036996,"stop":1761900036996,"duration":0}},{"uid":"7452442b1f8c6d80","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/7452442b1f8c6d80","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835057608,"stop":1761835057608,"duration":0}},{"uid":"840126b063e77fd9","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/840126b063e77fd9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834642098,"stop":1761834642098,"duration":0}},{"uid":"6e1ce709dea739ac","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/6e1ce709dea739ac","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833478225,"stop":1761833478225,"duration":0}},{"uid":"b38a31fc21337f6f","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/b38a31fc21337f6f","status":"passed","time":{"start":1761821714941,"stop":1761821715203,"duration":262}},{"uid":"82e06ccf3687fc01","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/82e06ccf3687fc01","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818766480,"stop":1761818766480,"duration":0}},{"uid":"35e3cedc257b0917","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/35e3cedc257b0917","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748630263,"stop":1761748630263,"duration":0}},{"uid":"d26c15c0d92ccdae","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/d26c15c0d92ccdae","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747905805,"stop":1761747905805,"duration":0}},{"uid":"35a5ba39de75277a","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/35a5ba39de75277a","status":"passed","time":{"start":1761746878389,"stop":1761746878730,"duration":341}},{"uid":"86426aaa3b0b5c66","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/86426aaa3b0b5c66","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745738283,"stop":1761745738283,"duration":0}},{"uid":"ee5cee6922dda45c","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/ee5cee6922dda45c","status":"passed","time":{"start":1761576713713,"stop":1761576713982,"duration":269}},{"uid":"226246bb057026fe","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/226246bb057026fe","status":"passed","time":{"start":1761557363733,"stop":1761557363998,"duration":265}},{"uid":"5516a01649640a0e","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/5516a01649640a0e","status":"passed","time":{"start":1761308587913,"stop":1761308588155,"duration":242}},{"uid":"27d9036b262bb9c1","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/27d9036b262bb9c1","status":"passed","time":{"start":1761306749482,"stop":1761306749762,"duration":280}},{"uid":"8bc0df0ef88895db","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/8bc0df0ef88895db","status":"passed","time":{"start":1761137042491,"stop":1761137042768,"duration":277}},{"uid":"efb4db745056c03c","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/efb4db745056c03c","status":"passed","time":{"start":1761135719818,"stop":1761135720171,"duration":353}},{"uid":"5a89394e6681297a","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/5a89394e6681297a","status":"passed","time":{"start":1761134146931,"stop":1761134147181,"duration":250}},{"uid":"e8133664e554e48","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/e8133664e554e48","status":"passed","time":{"start":1761128508287,"stop":1761128508586,"duration":299}}]},"tags":["backend"]},"source":"f1bcaed707e3238f.json","parameterValues":["''","200","''"]}