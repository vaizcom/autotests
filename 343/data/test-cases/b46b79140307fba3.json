{"uid":"b46b79140307fba3","name":"Проверка доступа к siblings Project-документа: создатель - member, просматривающий - guest","fullName":"tests.test_backend.document.access_doc.test_get_siblings_doc_access#test_get_project_and_space_siblings_docs_access_by_roles","historyId":"a1fee6aacd769fe8bd2944ea27c37459","time":{"start":1759767475073,"stop":1759767475358,"duration":285},"description":"\n    Проверяет доступ к siblings документов при разных комбинациях:\n    - Создателя документа\n    - Просматривающего пользователя\n    - Типа документа (Space/Project)\n\n    Проверки:\n        1. Создание трёх последовательных документов указанной ролью\n        2. Запрос siblings для среднего документа другой ролью\n        3. Проверка статуса ответа и корректности данных siblings\n    ","descriptionHtml":"<pre><code>Проверяет доступ к siblings документов при разных комбинациях:\n- Создателя документа\n- Просматривающего пользователя\n- Типа документа (Space/Project)\n\nПроверки:\n    1. Создание трёх последовательных документов указанной ролью\n    2. Запрос siblings для среднего документа другой ролью\n    3. Проверка статуса ответа и корректности данных siblings\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"request = <FixtureRequest for <Function test_get_project_and_space_siblings_docs_access_by_roles[project_doc-member_docs_by_guest_403]>>\nmain_space = '6866309d85fb8d104544a61e', creator_fixture = 'member_client'\nclient_fixture = 'guest_client', expected_status = 200, kind = 'Project'\ncontainer_fixture = 'main_project'\n\n    @pytest.mark.parametrize(\n        'creator_fixture, client_fixture, expected_status',\n        [\n            ('owner_client', 'owner_client', 200),\n            ('owner_client', 'manager_client', 200),\n            ('owner_client', 'member_client', 200),\n            ('owner_client', 'guest_client', 200),\n            ('manager_client', 'owner_client', 200),\n            ('manager_client', 'manager_client', 200),\n            ('manager_client', 'member_client', 200),\n            ('manager_client', 'guest_client', 200),\n            ('member_client', 'owner_client', 200),\n            ('member_client', 'manager_client', 200),\n            ('member_client', 'member_client', 200),\n            ('member_client', 'guest_client', 200),\n        ],\n        ids=[\n            'owner_self_docs_200',\n            'owner_docs_by_manager_403',\n            'owner_docs_by_member_403',\n            'owner_docs_by_guest_403',\n            'manager_docs_by_owner_403',\n            'manager_self_docs_200',\n            'manager_docs_by_member_403',\n            'manager_docs_by_guest_403',\n            'member_docs_by_owner_403',\n            'member_docs_by_manager_403',\n            'member_self_docs_200',\n            'member_docs_by_guest_403',\n        ],\n    )\n    @pytest.mark.parametrize(\n        'kind, container_fixture',\n        [\n            ('Space', 'main_space'),\n            ('Project', 'main_project'),\n        ],\n        ids=['space_doc', 'project_doc'],\n    )\n    def test_get_project_and_space_siblings_docs_access_by_roles(\n        request, main_space, creator_fixture, client_fixture, expected_status, kind, container_fixture\n    ):\n        \"\"\"\n        Проверяет доступ к siblings документов при разных комбинациях:\n        - Создателя документа\n        - Просматривающего пользователя\n        - Типа документа (Space/Project)\n    \n        Проверки:\n            1. Создание трёх последовательных документов указанной ролью\n            2. Запрос siblings для среднего документа другой ролью\n            3. Проверка статуса ответа и корректности данных siblings\n        \"\"\"\n        creator = request.getfixturevalue(creator_fixture)\n        viewer = request.getfixturevalue(client_fixture)\n        creator_role = creator_fixture.replace('_client', '')\n        viewer_role = client_fixture.replace('_client', '')\n        container_id = request.getfixturevalue(container_fixture)\n    \n        current_date = datetime.now().strftime('%d.%m_%H:%M:%S')\n    \n        allure.dynamic.title(\n            f'Проверка доступа к siblings {kind}-документа: создатель - {creator_role}, просматривающий - {viewer_role}'\n        )\n    \n        doc_ids = []\n        with allure.step(f'Создание трёх {kind}-документов пользователем {creator_role}'):\n            for index in range(3):\n                title = f'{current_date}_{creator_role}_{kind}_Doc_{index}'\n                create_resp = creator.post(\n                    **create_document_endpoint(kind=kind, kind_id=container_id, space_id=main_space, title=title)\n                )\n>               assert (\n                    create_resp.status_code == 200\n                ), f'Ошибка при создании документа {index}: статус {create_resp.status_code}'\nE               AssertionError: Ошибка при создании документа 0: статус 400\nE               assert 400 == 200\nE                +  where 400 = <Response [400]>.status_code\n\ntests/test_backend/document/access_doc/test_get_siblings_doc_access.py:86: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1759767260767,"stop":1759767260767,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1759767260767,"stop":1759767260767,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1759767260767,"stop":1759767260767,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1759767260767,"stop":1759767260767,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1759767260767,"stop":1759767261300,"duration":533},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1759767261301,"stop":1759767261750,"duration":449},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_project","time":{"start":1759767261751,"stop":1759767262153,"duration":402},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"member_client","time":{"start":1759767264277,"stop":1759767264703,"duration":426},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"guest_client","time":{"start":1759767264917,"stop":1759767265384,"duration":467},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Проверяет доступ к siblings документов при разных комбинациях:\n    - Создателя документа\n    - Просматривающего пользователя\n    - Типа документа (Space/Project)\n\n    Проверки:\n        1. Создание трёх последовательных документов указанной ролью\n        2. Запрос siblings для среднего документа другой ролью\n        3. Проверка статуса ответа и корректности данных siblings\n    ","status":"failed","statusMessage":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"request = <FixtureRequest for <Function test_get_project_and_space_siblings_docs_access_by_roles[project_doc-member_docs_by_guest_403]>>\nmain_space = '6866309d85fb8d104544a61e', creator_fixture = 'member_client'\nclient_fixture = 'guest_client', expected_status = 200, kind = 'Project'\ncontainer_fixture = 'main_project'\n\n    @pytest.mark.parametrize(\n        'creator_fixture, client_fixture, expected_status',\n        [\n            ('owner_client', 'owner_client', 200),\n            ('owner_client', 'manager_client', 200),\n            ('owner_client', 'member_client', 200),\n            ('owner_client', 'guest_client', 200),\n            ('manager_client', 'owner_client', 200),\n            ('manager_client', 'manager_client', 200),\n            ('manager_client', 'member_client', 200),\n            ('manager_client', 'guest_client', 200),\n            ('member_client', 'owner_client', 200),\n            ('member_client', 'manager_client', 200),\n            ('member_client', 'member_client', 200),\n            ('member_client', 'guest_client', 200),\n        ],\n        ids=[\n            'owner_self_docs_200',\n            'owner_docs_by_manager_403',\n            'owner_docs_by_member_403',\n            'owner_docs_by_guest_403',\n            'manager_docs_by_owner_403',\n            'manager_self_docs_200',\n            'manager_docs_by_member_403',\n            'manager_docs_by_guest_403',\n            'member_docs_by_owner_403',\n            'member_docs_by_manager_403',\n            'member_self_docs_200',\n            'member_docs_by_guest_403',\n        ],\n    )\n    @pytest.mark.parametrize(\n        'kind, container_fixture',\n        [\n            ('Space', 'main_space'),\n            ('Project', 'main_project'),\n        ],\n        ids=['space_doc', 'project_doc'],\n    )\n    def test_get_project_and_space_siblings_docs_access_by_roles(\n        request, main_space, creator_fixture, client_fixture, expected_status, kind, container_fixture\n    ):\n        \"\"\"\n        Проверяет доступ к siblings документов при разных комбинациях:\n        - Создателя документа\n        - Просматривающего пользователя\n        - Типа документа (Space/Project)\n    \n        Проверки:\n            1. Создание трёх последовательных документов указанной ролью\n            2. Запрос siblings для среднего документа другой ролью\n            3. Проверка статуса ответа и корректности данных siblings\n        \"\"\"\n        creator = request.getfixturevalue(creator_fixture)\n        viewer = request.getfixturevalue(client_fixture)\n        creator_role = creator_fixture.replace('_client', '')\n        viewer_role = client_fixture.replace('_client', '')\n        container_id = request.getfixturevalue(container_fixture)\n    \n        current_date = datetime.now().strftime('%d.%m_%H:%M:%S')\n    \n        allure.dynamic.title(\n            f'Проверка доступа к siblings {kind}-документа: создатель - {creator_role}, просматривающий - {viewer_role}'\n        )\n    \n        doc_ids = []\n        with allure.step(f'Создание трёх {kind}-документов пользователем {creator_role}'):\n            for index in range(3):\n                title = f'{current_date}_{creator_role}_{kind}_Doc_{index}'\n                create_resp = creator.post(\n                    **create_document_endpoint(kind=kind, kind_id=container_id, space_id=main_space, title=title)\n                )\n>               assert (\n                    create_resp.status_code == 200\n                ), f'Ошибка при создании документа {index}: статус {create_resp.status_code}'\nE               AssertionError: Ошибка при создании документа 0: статус 400\nE               assert 400 == 200\nE                +  where 400 = <Response [400]>.status_code\n\ntests/test_backend/document/access_doc/test_get_siblings_doc_access.py:86: AssertionError","steps":[{"name":"Создание трёх Project-документов пользователем member","time":{"start":1759767475073,"stop":1759767475358,"duration":285},"status":"failed","statusMessage":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/document/access_doc/test_get_siblings_doc_access.py\", line 86, in test_get_project_and_space_siblings_docs_access_by_roles\n    assert (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document.access_doc"},{"name":"suite","value":"test_get_siblings_doc_access"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2672-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.access_doc.test_get_siblings_doc_access"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"client_fixture","value":"'guest_client'"},{"name":"container_fixture","value":"'main_project'"},{"name":"creator_fixture","value":"'member_client'"},{"name":"expected_status","value":"200"},{"name":"kind","value":"'Project'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":1,"skipped":0,"passed":32,"unknown":0,"total":34},"items":[{"uid":"b381ff78ca108f56","reportUrl":"https://vaizcom.github.io/autotests/341//#testresult/b381ff78ca108f56","status":"passed","time":{"start":1759753941760,"stop":1759753943506,"duration":1746}},{"uid":"81f7bea33d75baa9","reportUrl":"https://vaizcom.github.io/autotests/340//#testresult/81f7bea33d75baa9","status":"passed","time":{"start":1759743903453,"stop":1759743905261,"duration":1808}},{"uid":"c4638abb7589a4cf","reportUrl":"https://vaizcom.github.io/autotests/339//#testresult/c4638abb7589a4cf","status":"broken","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='api.vaiz.dev', port=443): Max retries exceeded with url: /v4/Login (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7fb5f6e8f010>, 'Connection to api.vaiz.dev timed out. (connect timeout=None)'))","time":{"start":1759485535636,"stop":1759485535636,"duration":0}},{"uid":"7874f6d0869d8ab6","reportUrl":"https://vaizcom.github.io/autotests/338//#testresult/7874f6d0869d8ab6","status":"passed","time":{"start":1759232529222,"stop":1759232531039,"duration":1817}},{"uid":"23d9d1f021cbcfa8","reportUrl":"https://vaizcom.github.io/autotests/337//#testresult/23d9d1f021cbcfa8","status":"passed","time":{"start":1759140810269,"stop":1759140812232,"duration":1963}},{"uid":"e9f61e0e16cc7569","reportUrl":"https://vaizcom.github.io/autotests/335//#testresult/e9f61e0e16cc7569","status":"passed","time":{"start":1758891889958,"stop":1758891892514,"duration":2556}},{"uid":"4bb6b0c471babdbe","reportUrl":"https://vaizcom.github.io/autotests/334//#testresult/4bb6b0c471babdbe","status":"passed","time":{"start":1758807843857,"stop":1758807847664,"duration":3807}},{"uid":"b9cbdacd044baed1","reportUrl":"https://vaizcom.github.io/autotests/333//#testresult/b9cbdacd044baed1","status":"passed","time":{"start":1758806716839,"stop":1758806719090,"duration":2251}},{"uid":"7bffe83633f0bdcc","reportUrl":"https://vaizcom.github.io/autotests/332//#testresult/7bffe83633f0bdcc","status":"passed","time":{"start":1758791295732,"stop":1758791298372,"duration":2640}},{"uid":"58adaff96c087671","reportUrl":"https://vaizcom.github.io/autotests/331//#testresult/58adaff96c087671","status":"passed","time":{"start":1758540604151,"stop":1758540608441,"duration":4290}},{"uid":"d4edf2f2782db958","reportUrl":"https://vaizcom.github.io/autotests/330//#testresult/d4edf2f2782db958","status":"passed","time":{"start":1758289240650,"stop":1758289243348,"duration":2698}},{"uid":"729550c577e2f3b6","reportUrl":"https://vaizcom.github.io/autotests/329//#testresult/729550c577e2f3b6","status":"passed","time":{"start":1755852400790,"stop":1755852402973,"duration":2183}},{"uid":"d8350ceb5d16045d","reportUrl":"https://vaizcom.github.io/autotests/328//#testresult/d8350ceb5d16045d","status":"passed","time":{"start":1755851909863,"stop":1755851912039,"duration":2176}},{"uid":"75861bf388f1d689","reportUrl":"https://vaizcom.github.io/autotests/327//#testresult/75861bf388f1d689","status":"passed","time":{"start":1755848050019,"stop":1755848052607,"duration":2588}},{"uid":"9e54ab0f377682ff","reportUrl":"https://vaizcom.github.io/autotests/326//#testresult/9e54ab0f377682ff","status":"passed","time":{"start":1755777919163,"stop":1755777921474,"duration":2311}},{"uid":"56475a3f4849e2fb","reportUrl":"https://vaizcom.github.io/autotests/325//#testresult/56475a3f4849e2fb","status":"passed","time":{"start":1755774553889,"stop":1755774556179,"duration":2290}},{"uid":"f72cfc8d5cac7c7e","reportUrl":"https://vaizcom.github.io/autotests/324//#testresult/f72cfc8d5cac7c7e","status":"passed","time":{"start":1755694688321,"stop":1755694691008,"duration":2687}},{"uid":"98bf58e6fd0f563e","reportUrl":"https://vaizcom.github.io/autotests/323//#testresult/98bf58e6fd0f563e","status":"passed","time":{"start":1755694116473,"stop":1755694118835,"duration":2362}},{"uid":"4528f0ec38a3f053","reportUrl":"https://vaizcom.github.io/autotests/322//#testresult/4528f0ec38a3f053","status":"passed","time":{"start":1755687183950,"stop":1755687186142,"duration":2192}},{"uid":"954f836ee3af87ea","reportUrl":"https://vaizcom.github.io/autotests/321//#testresult/954f836ee3af87ea","status":"passed","time":{"start":1755682933574,"stop":1755682936605,"duration":3031}}]},"tags":["backend"]},"source":"b46b79140307fba3.json","parameterValues":["'guest_client'","'main_project'","'member_client'","200","'Project'"]}