{"uid":"47a14e22cb0de605","name":"test_get_document_success[space]","fullName":"tests.test_backend.document.test_get_document#test_get_document_success","historyId":"c1a5c6f27e813ae86233f2b5a7c28817","time":{"start":1761921879907,"stop":1761921879907,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fc7d133bfd0>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761921763685,"stop":1761921763685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761921763685,"stop":1761921764117,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761921773063,"stop":1761921773182,"duration":119},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_document"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2549-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"fixture_name","value":"'temp_space'"},{"name":"kind","value":"'Space'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":55},"items":[{"uid":"42d1ee9236e20eb7","reportUrl":"https://vaizcom.github.io/autotests/404//#testresult/42d1ee9236e20eb7","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761912190937,"stop":1761912190937,"duration":0}},{"uid":"fa09c0ac5ba7a231","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/fa09c0ac5ba7a231","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911303847,"stop":1761911303847,"duration":0}},{"uid":"de473ff87721956d","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/de473ff87721956d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910914580,"stop":1761910914580,"duration":0}},{"uid":"6f2c66d421712d84","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/6f2c66d421712d84","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910615730,"stop":1761910615730,"duration":0}},{"uid":"1268a2882e79edc9","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/1268a2882e79edc9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910008793,"stop":1761910008793,"duration":0}},{"uid":"e5efd9de21d8e7ca","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/e5efd9de21d8e7ca","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900039908,"stop":1761900039908,"duration":0}},{"uid":"e12cd0ca309020ca","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/e12cd0ca309020ca","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835060110,"stop":1761835060110,"duration":0}},{"uid":"30620e2c96934df","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/30620e2c96934df","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834645182,"stop":1761834645182,"duration":0}},{"uid":"410926c7643b7767","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/410926c7643b7767","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833481572,"stop":1761833481572,"duration":0}},{"uid":"7096c3e446baadd8","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/7096c3e446baadd8","status":"passed","time":{"start":1761821750926,"stop":1761821751351,"duration":425}},{"uid":"3ac64d67a684093c","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/3ac64d67a684093c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818769714,"stop":1761818769714,"duration":0}},{"uid":"c236aa4ad224b9dd","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/c236aa4ad224b9dd","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748633056,"stop":1761748633056,"duration":0}},{"uid":"12636f40e4572369","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/12636f40e4572369","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747909319,"stop":1761747909319,"duration":0}},{"uid":"905a2e95e7b09511","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/905a2e95e7b09511","status":"passed","time":{"start":1761746930962,"stop":1761746931599,"duration":637}},{"uid":"e7d98cb1d7b73779","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/e7d98cb1d7b73779","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745741198,"stop":1761745741198,"duration":0}},{"uid":"b32b1c24f2a9b2bf","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/b32b1c24f2a9b2bf","status":"passed","time":{"start":1761576763769,"stop":1761576764966,"duration":1197}},{"uid":"a0247c6f85acc36d","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/a0247c6f85acc36d","status":"passed","time":{"start":1761557400896,"stop":1761557401562,"duration":666}},{"uid":"bba6be5d520f7c0e","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/bba6be5d520f7c0e","status":"passed","time":{"start":1761308622957,"stop":1761308623370,"duration":413}},{"uid":"4cffeca117849b81","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/4cffeca117849b81","status":"passed","time":{"start":1761306786827,"stop":1761306787311,"duration":484}},{"uid":"485b6f7556818814","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/485b6f7556818814","status":"passed","time":{"start":1761137082028,"stop":1761137082507,"duration":479}}]},"tags":["backend"]},"source":"47a14e22cb0de605.json","parameterValues":["'temp_space'","'Space'"]}