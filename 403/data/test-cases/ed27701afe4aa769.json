{"uid":"ed27701afe4aa769","name":"test_edit_document_title_length[exceed_max-space]","fullName":"tests.test_backend.document.test_edit_document#test_edit_document_title_length","historyId":"fa85dc779df912fd00becebda2528fb3","time":{"start":1761911303458,"stop":1761911303458,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fbc912cb790>\n\n    @pytest.fixture(scope='function')\n    def space_id_function(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:228: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761911162887,"stop":1761911162887,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761911162888,"stop":1761911163517,"duration":629},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"space_id_function","time":{"start":1761911303459,"stop":1761911303631,"duration":172},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 228, in space_id_function\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_edit_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_edit_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"400"},{"name":"kind","value":"'Space'"},{"name":"kind_id_fixture","value":"'space_id_function'"},{"name":"length","value":"2049"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":53},"items":[{"uid":"767a9d70f3d09159","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/767a9d70f3d09159","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910914269,"stop":1761910914269,"duration":0}},{"uid":"856fb50de625a165","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/856fb50de625a165","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910615452,"stop":1761910615452,"duration":0}},{"uid":"444e5824b3a00963","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/444e5824b3a00963","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910008416,"stop":1761910008416,"duration":0}},{"uid":"2477aeb985a6852a","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/2477aeb985a6852a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900039541,"stop":1761900039541,"duration":0}},{"uid":"c3edc49218db75ca","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/c3edc49218db75ca","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835059852,"stop":1761835059852,"duration":0}},{"uid":"7e44849887385c69","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/7e44849887385c69","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834644771,"stop":1761834644771,"duration":0}},{"uid":"8b58eb3bb0925467","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/8b58eb3bb0925467","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833481176,"stop":1761833481176,"duration":0}},{"uid":"a3c85aa5f831124f","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/a3c85aa5f831124f","status":"passed","time":{"start":1761821748001,"stop":1761821748543,"duration":542}},{"uid":"b8ce6aafc5b18e0e","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/b8ce6aafc5b18e0e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818769327,"stop":1761818769327,"duration":0}},{"uid":"ec32f36e69feccba","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/ec32f36e69feccba","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748632799,"stop":1761748632799,"duration":0}},{"uid":"8f3b7a5eb6b40cfa","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/8f3b7a5eb6b40cfa","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747908940,"stop":1761747908940,"duration":0}},{"uid":"2bb2c8fe2dea7f85","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/2bb2c8fe2dea7f85","status":"passed","time":{"start":1761746926628,"stop":1761746927387,"duration":759}},{"uid":"322a2216d8eb42b7","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/322a2216d8eb42b7","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745740928,"stop":1761745740928,"duration":0}},{"uid":"8e97b02f76a828c5","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/8e97b02f76a828c5","status":"passed","time":{"start":1761576759672,"stop":1761576760639,"duration":967}},{"uid":"7709500b879335b0","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/7709500b879335b0","status":"passed","time":{"start":1761557397385,"stop":1761557397964,"duration":579}},{"uid":"2705df9153707372","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/2705df9153707372","status":"passed","time":{"start":1761308619978,"stop":1761308620551,"duration":573}},{"uid":"8455f05d329b9ee2","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/8455f05d329b9ee2","status":"passed","time":{"start":1761306783329,"stop":1761306784131,"duration":802}},{"uid":"ffa6c927ffe51a4","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/ffa6c927ffe51a4","status":"passed","time":{"start":1761137078085,"stop":1761137078698,"duration":613}},{"uid":"4ab313a4598044fe","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/4ab313a4598044fe","status":"passed","time":{"start":1761135762432,"stop":1761135763215,"duration":783}},{"uid":"9a99b22c63b11328","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/9a99b22c63b11328","status":"passed","time":{"start":1761134184006,"stop":1761134184595,"duration":589}}]},"tags":["backend"]},"source":"ed27701afe4aa769.json","parameterValues":["400","'Space'","'space_id_function'","2049"]}