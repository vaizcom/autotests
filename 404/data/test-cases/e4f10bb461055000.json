{"uid":"e4f10bb461055000","name":"Тест: Проверка списка проектов","fullName":"tests.test_backend.project.test_project#test_get_projects","historyId":"0ea50b549e0df50f7bdb11e41aaa2c55","time":{"start":1761912194124,"stop":1761912194124,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761912080667,"stop":1761912081009,"duration":342},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.project"},{"name":"suite","value":"test_project"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.project.test_project"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":54},"items":[{"uid":"6f2a93d27f9b9327","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/6f2a93d27f9b9327","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911307970,"stop":1761911307970,"duration":0}},{"uid":"462cd7e1625bb95a","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/462cd7e1625bb95a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910917822,"stop":1761910917822,"duration":0}},{"uid":"15073cf795e1c902","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/15073cf795e1c902","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910619462,"stop":1761910619462,"duration":0}},{"uid":"dce69dbf34dac83b","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/dce69dbf34dac83b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910012949,"stop":1761910012949,"duration":0}},{"uid":"2de9d188d9e64c2","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/2de9d188d9e64c2","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900044037,"stop":1761900044037,"duration":0}},{"uid":"3923e5805c52608a","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/3923e5805c52608a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835063175,"stop":1761835063175,"duration":0}},{"uid":"264edf4974035ed6","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/264edf4974035ed6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834650010,"stop":1761834650010,"duration":0}},{"uid":"21118a96892e6ab6","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/21118a96892e6ab6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833485902,"stop":1761833485902,"duration":0}},{"uid":"e135cab8761ae2dd","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/e135cab8761ae2dd","status":"passed","time":{"start":1761821826482,"stop":1761821826666,"duration":184}},{"uid":"d6526c07ad84545b","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/d6526c07ad84545b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818773797,"stop":1761818773797,"duration":0}},{"uid":"1d9d3e44a6710457","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/1d9d3e44a6710457","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748636918,"stop":1761748636918,"duration":0}},{"uid":"7b9adf9be5f73311","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/7b9adf9be5f73311","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747914027,"stop":1761747914027,"duration":0}},{"uid":"9c7690bf2d1707dc","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/9c7690bf2d1707dc","status":"passed","time":{"start":1761747037484,"stop":1761747037787,"duration":303}},{"uid":"df6020154d08898e","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/df6020154d08898e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745744338,"stop":1761745744338,"duration":0}},{"uid":"9d59b8364b883639","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/9d59b8364b883639","status":"passed","time":{"start":1761576858353,"stop":1761576858571,"duration":218}},{"uid":"89191a81b395f034","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/89191a81b395f034","status":"passed","time":{"start":1761557478104,"stop":1761557478309,"duration":205}},{"uid":"1d5e0ca06014bc77","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/1d5e0ca06014bc77","status":"passed","time":{"start":1761308695254,"stop":1761308695449,"duration":195}},{"uid":"6b66331b5a7dde8f","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/6b66331b5a7dde8f","status":"passed","time":{"start":1761306862767,"stop":1761306862971,"duration":204}},{"uid":"580dc2922ad1cdb5","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/580dc2922ad1cdb5","status":"passed","time":{"start":1761137161849,"stop":1761137162082,"duration":233}},{"uid":"cb4d9740f5f311a3","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/cb4d9740f5f311a3","status":"passed","time":{"start":1761135860535,"stop":1761135860788,"duration":253}}]},"tags":["backend"]},"source":"e4f10bb461055000.json","parameterValues":[]}