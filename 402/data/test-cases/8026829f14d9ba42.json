{"uid":"8026829f14d9ba42","name":"test_duplicate_document_invalid_id[bad_format]","fullName":"tests.test_backend.document.test_duplicate_document#test_duplicate_document_invalid_id","historyId":"e700b816028f4dd3a14bedc16129d6a2","time":{"start":1761910912959,"stop":1761910912959,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f1c6962ef90>\n\n    @pytest.fixture(scope='function')\n    def space_id_function(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:228: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910792963,"stop":1761910793391,"duration":428},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"space_id_function","time":{"start":1761910912959,"stop":1761910913082,"duration":123},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 228, in space_id_function\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_duplicate_document"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2545-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_duplicate_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"400"},{"name":"fake_id","value":"'bad_format'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":52},"items":[{"uid":"978482a71bfde159","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/978482a71bfde159","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910614712,"stop":1761910614712,"duration":0}},{"uid":"a4ab297d57df5984","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/a4ab297d57df5984","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910007383,"stop":1761910007383,"duration":0}},{"uid":"5bb5da91cb54e0d5","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/5bb5da91cb54e0d5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900038486,"stop":1761900038486,"duration":0}},{"uid":"af29a07d4fb933d4","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/af29a07d4fb933d4","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835059125,"stop":1761835059125,"duration":0}},{"uid":"50ef3d7805b36034","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/50ef3d7805b36034","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834643660,"stop":1761834643660,"duration":0}},{"uid":"b4f50a9c13f3bf5d","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/b4f50a9c13f3bf5d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833479590,"stop":1761833479590,"duration":0}},{"uid":"3e0414dd2372be12","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/3e0414dd2372be12","status":"passed","time":{"start":1761821729663,"stop":1761821729992,"duration":329}},{"uid":"b4be8d569d5d6ddb","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/b4be8d569d5d6ddb","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818767849,"stop":1761818767849,"duration":0}},{"uid":"d4b5a37f3b783315","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/d4b5a37f3b783315","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748632068,"stop":1761748632068,"duration":0}},{"uid":"be709e1db7f53f60","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/be709e1db7f53f60","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747907895,"stop":1761747907895,"duration":0}},{"uid":"bfa75f61fff5c314","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/bfa75f61fff5c314","status":"passed","time":{"start":1761746899493,"stop":1761746899859,"duration":366}},{"uid":"1764b4432a0c137b","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/1764b4432a0c137b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745740147,"stop":1761745740147,"duration":0}},{"uid":"d4b27579059d7384","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/d4b27579059d7384","status":"passed","time":{"start":1761576734270,"stop":1761576734762,"duration":492}},{"uid":"b2b1721c7149fb19","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/b2b1721c7149fb19","status":"passed","time":{"start":1761557378908,"stop":1761557379341,"duration":433}},{"uid":"1edab3684c993c8f","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/1edab3684c993c8f","status":"passed","time":{"start":1761308602025,"stop":1761308602343,"duration":318}},{"uid":"25fa2981f3232d84","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/25fa2981f3232d84","status":"passed","time":{"start":1761306764322,"stop":1761306764782,"duration":460}},{"uid":"bf52be8b98fd2993","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/bf52be8b98fd2993","status":"passed","time":{"start":1761137057730,"stop":1761137058139,"duration":409}},{"uid":"4f366d1b59df69bb","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/4f366d1b59df69bb","status":"passed","time":{"start":1761135738873,"stop":1761135739380,"duration":507}},{"uid":"861a511d7f3dd522","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/861a511d7f3dd522","status":"passed","time":{"start":1761134163325,"stop":1761134163764,"duration":439}},{"uid":"7c7ec2701b0bdcc4","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/7c7ec2701b0bdcc4","status":"passed","time":{"start":1761128529323,"stop":1761128529861,"duration":538}}]},"tags":["backend"]},"source":"8026829f14d9ba42.json","parameterValues":["400","'bad_format'"]}