{"uid":"5399b0392d35783","name":"test_get_document_multiple_requests[member]","fullName":"tests.test_backend.document.test_get_document#test_get_document_multiple_requests","historyId":"f6248d2d7236b097967dd4dd3444b79b","time":{"start":1761912191030,"stop":1761912191030,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761912080667,"stop":1761912081009,"duration":342},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"fixture_name","value":"'temp_member'"},{"name":"kind","value":"'Member'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":39,"unknown":0,"total":54},"items":[{"uid":"357dd7cb82d07d39","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/357dd7cb82d07d39","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911303941,"stop":1761911303941,"duration":0}},{"uid":"d05e6e231f403656","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/d05e6e231f403656","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910914675,"stop":1761910914675,"duration":0}},{"uid":"a4efa470a9351530","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/a4efa470a9351530","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910615825,"stop":1761910615825,"duration":0}},{"uid":"18d55df7a2df1d02","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/18d55df7a2df1d02","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910008902,"stop":1761910008902,"duration":0}},{"uid":"e047c6ae5b9eb5ac","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/e047c6ae5b9eb5ac","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900040017,"stop":1761900040017,"duration":0}},{"uid":"3e2b798d2dd266dc","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/3e2b798d2dd266dc","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835060220,"stop":1761835060220,"duration":0}},{"uid":"c26b72d0bc81f6b0","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/c26b72d0bc81f6b0","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834645279,"stop":1761834645279,"duration":0}},{"uid":"a7e8df4ebb87b65e","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/a7e8df4ebb87b65e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833481690,"stop":1761833481690,"duration":0}},{"uid":"51dc89b46b5f6fe","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/51dc89b46b5f6fe","status":"passed","time":{"start":1761821755939,"stop":1761821756530,"duration":591}},{"uid":"a007963a80c1768d","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/a007963a80c1768d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818769823,"stop":1761818769823,"duration":0}},{"uid":"451aeafe449788e9","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/451aeafe449788e9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748633149,"stop":1761748633149,"duration":0}},{"uid":"59d4b697a4dc2447","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/59d4b697a4dc2447","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747909413,"stop":1761747909413,"duration":0}},{"uid":"174b717e249080ca","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/174b717e249080ca","status":"passed","time":{"start":1761746937946,"stop":1761746938905,"duration":959}},{"uid":"af301218172c5e02","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/af301218172c5e02","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745741292,"stop":1761745741292,"duration":0}},{"uid":"fb2370cc506d527","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/fb2370cc506d527","status":"passed","time":{"start":1761576769838,"stop":1761576770558,"duration":720}},{"uid":"3d4ffc9f0fdbf4fe","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/3d4ffc9f0fdbf4fe","status":"passed","time":{"start":1761557407191,"stop":1761557407916,"duration":725}},{"uid":"718f241d86fb1e95","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/718f241d86fb1e95","status":"passed","time":{"start":1761308627793,"stop":1761308628413,"duration":620}},{"uid":"70d89d8ca52b9c47","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/70d89d8ca52b9c47","status":"passed","time":{"start":1761306791887,"stop":1761306792558,"duration":671}},{"uid":"fddc22a014771989","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/fddc22a014771989","status":"passed","time":{"start":1761137087098,"stop":1761137087757,"duration":659}},{"uid":"e178cb2e34f6f092","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/e178cb2e34f6f092","status":"passed","time":{"start":1761135773309,"stop":1761135774108,"duration":799}}]},"tags":["backend"]},"source":"5399b0392d35783.json","parameterValues":["'temp_member'","'Member'"]}