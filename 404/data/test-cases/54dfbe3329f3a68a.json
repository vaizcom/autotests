{"uid":"54dfbe3329f3a68a","name":"test_documents_sorted_by_created_at[project]","fullName":"tests.test_backend.document.test_get_documents#test_documents_sorted_by_created_at","historyId":"39e1f965034025f2c3f17a753588e46c","time":{"start":1761912191467,"stop":1761912191467,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761912080667,"stop":1761912081009,"duration":342},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_documents"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_documents"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"fixture_name","value":"'temp_project'"},{"name":"kind","value":"'Project'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":54},"items":[{"uid":"7c30f5a6ce00e0d8","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/7c30f5a6ce00e0d8","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911304452,"stop":1761911304452,"duration":0}},{"uid":"1345b4656b5b3760","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/1345b4656b5b3760","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910915119,"stop":1761910915119,"duration":0}},{"uid":"960d725245c52dc5","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/960d725245c52dc5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910616262,"stop":1761910616262,"duration":0}},{"uid":"44a0fa82fd041667","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/44a0fa82fd041667","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910009414,"stop":1761910009414,"duration":0}},{"uid":"45493d4ef4695909","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/45493d4ef4695909","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900040506,"stop":1761900040506,"duration":0}},{"uid":"b8f0737af59d49a4","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/b8f0737af59d49a4","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835060660,"stop":1761835060660,"duration":0}},{"uid":"b3b5a16934bfdf84","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/b3b5a16934bfdf84","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834645806,"stop":1761834645806,"duration":0}},{"uid":"424b1230a8ac5867","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/424b1230a8ac5867","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833482171,"stop":1761833482171,"duration":0}},{"uid":"6f978fce04b4d123","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/6f978fce04b4d123","status":"passed","time":{"start":1761821763658,"stop":1761821767487,"duration":3829}},{"uid":"e544159aea6c447d","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/e544159aea6c447d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818770317,"stop":1761818770317,"duration":0}},{"uid":"795a02a313ec658d","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/795a02a313ec658d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748633591,"stop":1761748633591,"duration":0}},{"uid":"561d64201aaa493d","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/561d64201aaa493d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747909900,"stop":1761747909900,"duration":0}},{"uid":"842c3477e453a312","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/842c3477e453a312","status":"passed","time":{"start":1761746953670,"stop":1761746958042,"duration":4372}},{"uid":"6a7d58da7c1ac507","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/6a7d58da7c1ac507","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745741736,"stop":1761745741736,"duration":0}},{"uid":"9d54c9f907a41c43","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/9d54c9f907a41c43","status":"passed","time":{"start":1761576783336,"stop":1761576787701,"duration":4365}},{"uid":"3e9e3f64299f91d6","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/3e9e3f64299f91d6","status":"passed","time":{"start":1761557417417,"stop":1761557421330,"duration":3913}},{"uid":"db7e6bffd1f69220","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/db7e6bffd1f69220","status":"passed","time":{"start":1761308637203,"stop":1761308641097,"duration":3894}},{"uid":"146382661feb1190","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/146382661feb1190","status":"passed","time":{"start":1761306801638,"stop":1761306805596,"duration":3958}},{"uid":"11a04885a08da08e","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/11a04885a08da08e","status":"passed","time":{"start":1761137097239,"stop":1761137101911,"duration":4672}},{"uid":"e42496bff6eb6f11","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/e42496bff6eb6f11","status":"passed","time":{"start":1761135784233,"stop":1761135788370,"duration":4137}}]},"tags":["backend"]},"source":"54dfbe3329f3a68a.json","parameterValues":["'temp_project'","'Project'"]}