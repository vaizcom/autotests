{"uid":"678e81fde2c9cd12","name":"Новая логика: Milestone у сабтаска берется из payload, а не наследуются от родителя","fullName":"tests.test_backend.task_service.create_task.test_subtask_milestones_from_payload#test_subtask_milestone_with_own_milestone","historyId":"e1bb22d39c2ed8075ff8a3eb97c2e393","time":{"start":1761921893115,"stop":1761921893235,"duration":120},"description":"\n    Создание сабтаска с собственным milestone.\n    Сабтаск отображает milestone B (из payload), а не наследует milestone A от родителя.\n    ","descriptionHtml":"<pre><code>Создание сабтаска с собственным milestone.\nСабтаск отображает milestone B (из payload), а не наследует milestone A от родителя.\n</code></pre>\n","status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api.vaiz.dev/v4/GetMilestones","statusTrace":"create_task_in_main = <function create_task_in_main.<locals>._create_task at 0x7fc7d0ff7ba0>\nowner_client = <tests.core.client.APIClient object at 0x7fc7d133bfd0>\nmain_space = '6866309d85fb8d104544a61e', main_board = '6866731185fb8d104544e826'\n\n    @allure.parent_suite(\"create_task\")\n    @allure.title(\"Новая логика: Milestone у сабтаска берется из payload, а не наследуются от родителя\")\n    def test_subtask_milestone_with_own_milestone(\n        create_task_in_main,\n        owner_client,\n        main_space,\n        main_board,\n    ):\n        \"\"\"\n        Создание сабтаска с собственным milestone.\n        Сабтаск отображает milestone B (из payload), а не наследует milestone A от родителя.\n        \"\"\"\n        with allure.step(\"Получаем IDs milestons для родителя\"):\n>           parent_ms_id_1 = get_parent_ms_1(owner_client, main_space, main_board)\n\ntests/test_backend/task_service/create_task/test_subtask_milestones_from_payload.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_backend/task_service/create_task/utils.py:238: in get_parent_ms_1\n    return get_named_milestone_id(client, space_id, board_id, \"parent_ms_1\")\ntests/test_backend/task_service/create_task/utils.py:229: in get_named_milestone_id\n    resp.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api.vaiz.dev/v4/GetMilestones\n\n/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/requests/models.py:1024: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761921763685,"stop":1761921763685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761921763685,"stop":1761921764117,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1761921767245,"stop":1761921767518,"duration":273},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1761921767518,"stop":1761921767725,"duration":207},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_project","time":{"start":1761921767725,"stop":1761921768196,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_board","time":{"start":1761921771027,"stop":1761921771249,"duration":222},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_task_in_main","time":{"start":1761921893115,"stop":1761921893115,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Создание сабтаска с собственным milestone.\n    Сабтаск отображает milestone B (из payload), а не наследует milestone A от родителя.\n    ","status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api.vaiz.dev/v4/GetMilestones","statusTrace":"create_task_in_main = <function create_task_in_main.<locals>._create_task at 0x7fc7d0ff7ba0>\nowner_client = <tests.core.client.APIClient object at 0x7fc7d133bfd0>\nmain_space = '6866309d85fb8d104544a61e', main_board = '6866731185fb8d104544e826'\n\n    @allure.parent_suite(\"create_task\")\n    @allure.title(\"Новая логика: Milestone у сабтаска берется из payload, а не наследуются от родителя\")\n    def test_subtask_milestone_with_own_milestone(\n        create_task_in_main,\n        owner_client,\n        main_space,\n        main_board,\n    ):\n        \"\"\"\n        Создание сабтаска с собственным milestone.\n        Сабтаск отображает milestone B (из payload), а не наследует milestone A от родителя.\n        \"\"\"\n        with allure.step(\"Получаем IDs milestons для родителя\"):\n>           parent_ms_id_1 = get_parent_ms_1(owner_client, main_space, main_board)\n\ntests/test_backend/task_service/create_task/test_subtask_milestones_from_payload.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_backend/task_service/create_task/utils.py:238: in get_parent_ms_1\n    return get_named_milestone_id(client, space_id, board_id, \"parent_ms_1\")\ntests/test_backend/task_service/create_task/utils.py:229: in get_named_milestone_id\n    resp.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api.vaiz.dev/v4/GetMilestones\n\n/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/requests/models.py:1024: HTTPError","steps":[{"name":"Получаем IDs milestons для родителя","time":{"start":1761921893115,"stop":1761921893235,"duration":120},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api.vaiz.dev/v4/GetMilestones\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/task_service/create_task/test_subtask_milestones_from_payload.py\", line 21, in test_subtask_milestone_with_own_milestone\n    parent_ms_id_1 = get_parent_ms_1(owner_client, main_space, main_board)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/test_backend/task_service/create_task/utils.py\", line 238, in get_parent_ms_1\n    return get_named_milestone_id(client, space_id, board_id, \"parent_ms_1\")\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/test_backend/task_service/create_task/utils.py\", line 229, in get_named_milestone_id\n    resp.raise_for_status()\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/requests/models.py\", line 1024, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"create_task"},{"name":"tag","value":"backend"},{"name":"suite","value":"test_subtask_milestones_from_payload"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2549-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.task_service.create_task.test_subtask_milestones_from_payload"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":14,"skipped":0,"passed":9,"unknown":0,"total":23},"items":[{"uid":"929af3cf4bfd2faf","reportUrl":"https://vaizcom.github.io/autotests/404//#testresult/929af3cf4bfd2faf","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api.vaiz.dev/v4/GetMilestones","time":{"start":1761912204350,"stop":1761912204510,"duration":160}},{"uid":"7b9ab5873bfa25cb","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/7b9ab5873bfa25cb","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api.vaiz.dev/v4/GetMilestones","time":{"start":1761911321157,"stop":1761911321332,"duration":175}},{"uid":"21085a9444d37a07","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/21085a9444d37a07","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","time":{"start":1761910929247,"stop":1761910929361,"duration":114}},{"uid":"132aebd01b628c5b","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/132aebd01b628c5b","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","time":{"start":1761910630585,"stop":1761910630704,"duration":119}},{"uid":"beb647b1863ead2c","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/beb647b1863ead2c","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","time":{"start":1761910027257,"stop":1761910027432,"duration":175}},{"uid":"6b22891dc4403158","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/6b22891dc4403158","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-uat.vaiz.dev/v4/GetMilestones","time":{"start":1761900058824,"stop":1761900058997,"duration":173}},{"uid":"5152c4ea8791ed10","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/5152c4ea8791ed10","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api.vaiz.dev/v4/GetMilestones","time":{"start":1761835074270,"stop":1761835074392,"duration":122}},{"uid":"781d98ce6279addd","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/781d98ce6279addd","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-uat.vaiz.dev/v4/GetMilestones","time":{"start":1761834665083,"stop":1761834665454,"duration":371}},{"uid":"2c3558d9eb1af74","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/2c3558d9eb1af74","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","time":{"start":1761833500694,"stop":1761833500871,"duration":177}},{"uid":"254767a8289d6f4e","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/254767a8289d6f4e","status":"passed","time":{"start":1761821874151,"stop":1761821878233,"duration":4082}},{"uid":"a9be3b02f9fea89","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/a9be3b02f9fea89","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","time":{"start":1761818787045,"stop":1761818787220,"duration":175}},{"uid":"41961776326a4089","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/41961776326a4089","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","time":{"start":1761748648583,"stop":1761748648698,"duration":115}},{"uid":"7132e3a7d591b254","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/7132e3a7d591b254","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","time":{"start":1761747926134,"stop":1761747926314,"duration":180}},{"uid":"4245507e0a57c3d3","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/4245507e0a57c3d3","status":"passed","time":{"start":1761747108235,"stop":1761747113036,"duration":4801}},{"uid":"c92148860490265b","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/c92148860490265b","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","time":{"start":1761745755293,"stop":1761745755412,"duration":119}},{"uid":"164d9f624cc1c69f","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/164d9f624cc1c69f","status":"passed","time":{"start":1761576945702,"stop":1761576950090,"duration":4388}},{"uid":"f4fde157b7e2e569","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/f4fde157b7e2e569","status":"passed","time":{"start":1761557528343,"stop":1761557531968,"duration":3625}},{"uid":"2395308741b8216b","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/2395308741b8216b","status":"passed","time":{"start":1761308763905,"stop":1761308767341,"duration":3436}},{"uid":"41b072f07fc90b3e","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/41b072f07fc90b3e","status":"passed","time":{"start":1761306931884,"stop":1761306935405,"duration":3521}},{"uid":"c0deee2409aeebe1","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/c0deee2409aeebe1","status":"passed","time":{"start":1761137216796,"stop":1761137221372,"duration":4576}}]},"tags":["backend"]},"source":"678e81fde2c9cd12.json","parameterValues":[]}