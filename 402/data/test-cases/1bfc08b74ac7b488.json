{"uid":"1bfc08b74ac7b488","name":"test_get_ydocument_success[member]","fullName":"tests.test_backend.document.test_get_y_document#test_get_ydocument_success","historyId":"11c2c4a26376910eb1b32c5f0cfea3de","time":{"start":1761910917706,"stop":1761910917706,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f1c6962ef90>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910792963,"stop":1761910793391,"duration":428},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761910801404,"stop":1761910801539,"duration":135},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_y_document"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2545-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_y_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"kind","value":"'Member'"},{"name":"kind_id_fixture","value":"'temp_member'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":52},"items":[{"uid":"b09f56557ad2701","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/b09f56557ad2701","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910619347,"stop":1761910619347,"duration":0}},{"uid":"cf09fdda8cf413bd","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/cf09fdda8cf413bd","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910012831,"stop":1761910012831,"duration":0}},{"uid":"a4d6ddece1e5e616","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/a4d6ddece1e5e616","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900043923,"stop":1761900043923,"duration":0}},{"uid":"2e8cec83fb36d6c5","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/2e8cec83fb36d6c5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835063061,"stop":1761835063061,"duration":0}},{"uid":"28e647e09f5463cc","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/28e647e09f5463cc","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834649865,"stop":1761834649865,"duration":0}},{"uid":"b2d328f1f3af6134","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/b2d328f1f3af6134","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833485804,"stop":1761833485804,"duration":0}},{"uid":"f52f34979797cdb2","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/f52f34979797cdb2","status":"passed","time":{"start":1761821821265,"stop":1761821821715,"duration":450}},{"uid":"2a627fd06694ce6e","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/2a627fd06694ce6e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818773685,"stop":1761818773685,"duration":0}},{"uid":"898597672ffafe71","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/898597672ffafe71","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748636788,"stop":1761748636788,"duration":0}},{"uid":"9e68e275e2339427","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/9e68e275e2339427","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747913899,"stop":1761747913899,"duration":0}},{"uid":"4cda030654f635a7","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/4cda030654f635a7","status":"passed","time":{"start":1761747029016,"stop":1761747029973,"duration":957}},{"uid":"b031cb4314408223","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/b031cb4314408223","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745744208,"stop":1761745744208,"duration":0}},{"uid":"472b0148a60fba2d","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/472b0148a60fba2d","status":"passed","time":{"start":1761576852008,"stop":1761576852470,"duration":462}},{"uid":"c2d6a9b4987c16cf","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/c2d6a9b4987c16cf","status":"passed","time":{"start":1761557472457,"stop":1761557472876,"duration":419}},{"uid":"8b276d3e9c0d55a9","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/8b276d3e9c0d55a9","status":"passed","time":{"start":1761308690353,"stop":1761308690804,"duration":451}},{"uid":"b77baee2ae9ba6e3","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/b77baee2ae9ba6e3","status":"passed","time":{"start":1761306857590,"stop":1761306858047,"duration":457}},{"uid":"ab7074beb25b42b9","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/ab7074beb25b42b9","status":"passed","time":{"start":1761137155905,"stop":1761137156377,"duration":472}},{"uid":"12a4fb29bd1aaf9","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/12a4fb29bd1aaf9","status":"passed","time":{"start":1761135854057,"stop":1761135854612,"duration":555}},{"uid":"af7d79ea238c2128","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/af7d79ea238c2128","status":"passed","time":{"start":1761134263352,"stop":1761134263833,"duration":481}},{"uid":"fb88b9c73e7a163b","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/fb88b9c73e7a163b","status":"passed","time":{"start":1761128652377,"stop":1761128652937,"duration":560}}]},"tags":["backend"]},"source":"1bfc08b74ac7b488.json","parameterValues":["'Member'","'temp_member'"]}