{"uid":"4209d98a44b9196d","name":"Create task with minimal payload: клиент=manager_client, ожидаемый статус=200","fullName":"tests.test_backend.task_service.create_task.access_task.test_create_task#test_create_task_with_minimal_payload","historyId":"7cad04c98a547b31cc5616b47d72989e","time":{"start":1761912195299,"stop":1761912196169,"duration":870},"description":"\n    Тест проверки создания задачи с минимальным набором полей в системе управления проектами под разными ролями.\n\n    Цель теста — убедиться, что можно успешно создать задачу, указав только минимально необходимые данные, и что поведение API зависит от прав пользователя (типа клиента).\n    В процессе теста дополнительно валидируются структура созданной задачи, значения по умолчанию, связи (creator, board и пр.), а также удаление задачи после проверки.\n    assert_task_keys обеспечивает падение теста при добавлении/удалении ключей с понятным сообщением.\n\n    Ход теста:\n        1. Получение клиента согласно переданной роли через фикстуру.\n        2. Получение id пользователя, с помощью которого осуществляется создание задачи.\n        3. Формирование минимального payload и попытка создать задачу через API.\n        4. Проверка статус-кода ответа.\n        5. Если задача успешно создана (ответ 200):\n            - Проверка наполнения и структуры ответа\n    ","descriptionHtml":"<pre><code>Тест проверки создания задачи с минимальным набором полей в системе управления проектами под разными ролями.\n\nЦель теста — убедиться, что можно успешно создать задачу, указав только минимально необходимые данные, и что поведение API зависит от прав пользователя (типа клиента).\nВ процессе теста дополнительно валидируются структура созданной задачи, значения по умолчанию, связи (creator, board и пр.), а также удаление задачи после проверки.\nassert_task_keys обеспечивает падение теста при добавлении/удалении ключей с понятным сообщением.\n\nХод теста:\n    1. Получение клиента согласно переданной роли через фикстуру.\n    2. Получение id пользователя, с помощью которого осуществляется создание задачи.\n    3. Формирование минимального payload и попытка создать задачу через API.\n    4. Проверка статус-кода ответа.\n    5. Если задача успешно создана (ответ 200):\n        - Проверка наполнения и структуры ответа\n</code></pre>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1761912076138,"stop":1761912076602,"duration":464},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1761912076602,"stop":1761912076805,"duration":203},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_project","time":{"start":1761912076805,"stop":1761912077004,"duration":199},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"manager_client","time":{"start":1761912077381,"stop":1761912077625,"duration":244},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_board","time":{"start":1761912079197,"stop":1761912079397,"duration":200},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Тест проверки создания задачи с минимальным набором полей в системе управления проектами под разными ролями.\n\n    Цель теста — убедиться, что можно успешно создать задачу, указав только минимально необходимые данные, и что поведение API зависит от прав пользователя (типа клиента).\n    В процессе теста дополнительно валидируются структура созданной задачи, значения по умолчанию, связи (creator, board и пр.), а также удаление задачи после проверки.\n    assert_task_keys обеспечивает падение теста при добавлении/удалении ключей с понятным сообщением.\n\n    Ход теста:\n        1. Получение клиента согласно переданной роли через фикстуру.\n        2. Получение id пользователя, с помощью которого осуществляется создание задачи.\n        3. Формирование минимального payload и попытка создать задачу через API.\n        4. Проверка статус-кода ответа.\n        5. Если задача успешно создана (ответ 200):\n            - Проверка наполнения и структуры ответа\n    ","status":"passed","steps":[{"name":"Создание задачи с минимальным payload","time":{"start":1761912195483,"stop":1761912195748,"duration":265},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверка статус-кода: ожидаем 200","time":{"start":1761912195748,"stop":1761912195748,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем содержимое ответа с задачей","time":{"start":1761912195748,"stop":1761912195943,"duration":195},"status":"passed","steps":[{"name":"Проверка обязательных полей","time":{"start":1761912195748,"stop":1761912195748,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверка системных полей","time":{"start":1761912195748,"stop":1761912195943,"duration":195},"status":"passed","steps":[{"name":"Проверяем поле 'hrid'","time":{"start":1761912195748,"stop":1761912195943,"duration":195},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Проверка полей, которые должны быть пустыми","time":{"start":1761912195943,"stop":1761912195943,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверка полей с `None` (null)","time":{"start":1761912195943,"stop":1761912195943,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверка значений по умолчанию","time":{"start":1761912195943,"stop":1761912195943,"duration":0},"status":"passed","steps":[{"name":"Проверка полного совпадения набора ключей задачи","time":{"start":1761912195943,"stop":1761912195943,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true},{"name":"Удаляем задачу: 6904a5836d222cdc62f09ade","time":{"start":1761912195943,"stop":1761912196168,"duration":225},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":11,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"access_task"},{"name":"tag","value":"backend"},{"name":"suite","value":"test_create_task"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.task_service.create_task.access_task.test_create_task"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"client_fixture","value":"'manager_client'"},{"name":"expected_status","value":"200"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":22,"unknown":0,"total":22},"items":[{"uid":"8760824aec70ea11","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/8760824aec70ea11","status":"passed","time":{"start":1761911309556,"stop":1761911310735,"duration":1179}},{"uid":"70a0b7d12776d2df","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/70a0b7d12776d2df","status":"passed","time":{"start":1761910918890,"stop":1761910919738,"duration":848}},{"uid":"40bf06868f2c566a","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/40bf06868f2c566a","status":"passed","time":{"start":1761910620658,"stop":1761910621619,"duration":961}},{"uid":"1bad7a6c35ffaede","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/1bad7a6c35ffaede","status":"passed","time":{"start":1761910014797,"stop":1761910016382,"duration":1585}},{"uid":"6520222a07b0a6d2","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/6520222a07b0a6d2","status":"passed","time":{"start":1761900046018,"stop":1761900047638,"duration":1620}},{"uid":"bfc9b7758d7bdfd9","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/bfc9b7758d7bdfd9","status":"passed","time":{"start":1761835064317,"stop":1761835065201,"duration":884}},{"uid":"e4f25fb419a2713e","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/e4f25fb419a2713e","status":"passed","time":{"start":1761834651683,"stop":1761834652945,"duration":1262}},{"uid":"49476b93cb1ee74e","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/49476b93cb1ee74e","status":"passed","time":{"start":1761833487584,"stop":1761833489606,"duration":2022}},{"uid":"f2fe1b4209181cfd","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/f2fe1b4209181cfd","status":"passed","time":{"start":1761821842029,"stop":1761821843062,"duration":1033}},{"uid":"8dc773f4f2f3b61f","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/8dc773f4f2f3b61f","status":"passed","time":{"start":1761818775335,"stop":1761818776414,"duration":1079}},{"uid":"927fd86a8d8246c1","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/927fd86a8d8246c1","status":"passed","time":{"start":1761748638044,"stop":1761748638996,"duration":952}},{"uid":"2f9ed9bed21894cf","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/2f9ed9bed21894cf","status":"passed","time":{"start":1761747915663,"stop":1761747916800,"duration":1137}},{"uid":"b2fdc8d2955bed6e","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/b2fdc8d2955bed6e","status":"passed","time":{"start":1761747058463,"stop":1761747059765,"duration":1302}},{"uid":"f617128363c7ac11","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/f617128363c7ac11","status":"passed","time":{"start":1761745745568,"stop":1761745746997,"duration":1429}},{"uid":"d8e3e8926d9675c0","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/d8e3e8926d9675c0","status":"passed","time":{"start":1761576876680,"stop":1761576877892,"duration":1212}},{"uid":"b39274969ff1e89d","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/b39274969ff1e89d","status":"passed","time":{"start":1761557492560,"stop":1761557493442,"duration":882}},{"uid":"2ddbca26397d3fcf","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/2ddbca26397d3fcf","status":"passed","time":{"start":1761308712248,"stop":1761308713362,"duration":1114}},{"uid":"dd3bee79cd49ff1a","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/dd3bee79cd49ff1a","status":"passed","time":{"start":1761306878256,"stop":1761306879229,"duration":973}},{"uid":"ab3e36facfa59431","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/ab3e36facfa59431","status":"passed","time":{"start":1761137179057,"stop":1761137180287,"duration":1230}},{"uid":"f5b062ba3258c9ba","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/f5b062ba3258c9ba","status":"passed","time":{"start":1761135879334,"stop":1761135880709,"duration":1375}}]},"tags":["backend"]},"source":"4209d98a44b9196d.json","parameterValues":["'manager_client'","200"]}