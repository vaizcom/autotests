{"uid":"9e5f033ef8ce2fe0","name":"test_edit_document_invalid_id[bad_format]","fullName":"tests.test_backend.document.test_edit_document#test_edit_document_invalid_id","historyId":"a0e317e543dd6edec4572c12e22a3530","time":{"start":1761912190048,"stop":1761912190048,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761912080667,"stop":1761912081009,"duration":342},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_edit_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_edit_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"400"},{"name":"fake_id","value":"'bad_format'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":54},"items":[{"uid":"4023604278088d6e","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/4023604278088d6e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911302607,"stop":1761911302607,"duration":0}},{"uid":"6785e82cd56166be","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/6785e82cd56166be","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910913151,"stop":1761910913151,"duration":0}},{"uid":"a4795d4f7e174883","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/a4795d4f7e174883","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910614894,"stop":1761910614894,"duration":0}},{"uid":"abfd04b736fea8dd","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/abfd04b736fea8dd","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910007630,"stop":1761910007630,"duration":0}},{"uid":"a39be293c55cdd08","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/a39be293c55cdd08","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900038756,"stop":1761900038756,"duration":0}},{"uid":"17a9f90a6ea048b2","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/17a9f90a6ea048b2","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835059315,"stop":1761835059315,"duration":0}},{"uid":"55b479d14a7a24f0","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/55b479d14a7a24f0","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834643918,"stop":1761834643918,"duration":0}},{"uid":"d02c4d3c27a4884e","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/d02c4d3c27a4884e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833480121,"stop":1761833480121,"duration":0}},{"uid":"b18b27105301089c","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/b18b27105301089c","status":"passed","time":{"start":1761821735123,"stop":1761821735312,"duration":189}},{"uid":"c90001a1148ada69","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/c90001a1148ada69","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818768453,"stop":1761818768453,"duration":0}},{"uid":"8fca787ef6037c53","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/8fca787ef6037c53","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748632255,"stop":1761748632255,"duration":0}},{"uid":"ba6902cb64fa9d49","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/ba6902cb64fa9d49","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747908142,"stop":1761747908142,"duration":0}},{"uid":"1e55d05da0b13695","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/1e55d05da0b13695","status":"passed","time":{"start":1761746906440,"stop":1761746907085,"duration":645}},{"uid":"228cf6f4ad2ac536","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/228cf6f4ad2ac536","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745740343,"stop":1761745740343,"duration":0}},{"uid":"24d104a5909a44fd","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/24d104a5909a44fd","status":"passed","time":{"start":1761576741387,"stop":1761576741606,"duration":219}},{"uid":"53ae1329ed948700","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/53ae1329ed948700","status":"passed","time":{"start":1761557384125,"stop":1761557384331,"duration":206}},{"uid":"5f2644c817fa68ed","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/5f2644c817fa68ed","status":"passed","time":{"start":1761308606839,"stop":1761308607031,"duration":192}},{"uid":"619f5b2be831b821","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/619f5b2be831b821","status":"passed","time":{"start":1761306769727,"stop":1761306769930,"duration":203}},{"uid":"6e235bd63c82d44b","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/6e235bd63c82d44b","status":"passed","time":{"start":1761137063336,"stop":1761137063550,"duration":214}},{"uid":"60845510e843c53c","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/60845510e843c53c","status":"passed","time":{"start":1761135745075,"stop":1761135745323,"duration":248}}]},"tags":["backend"]},"source":"9e5f033ef8ce2fe0.json","parameterValues":["400","'bad_format'"]}