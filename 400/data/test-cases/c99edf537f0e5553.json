{"uid":"c99edf537f0e5553","name":"test_invalid_document_id[null]","fullName":"tests.test_backend.document.test_get_siblings#test_invalid_document_id","historyId":"3acf0afb21e055aedaae95613523a186","time":{"start":1761910012087,"stop":1761910012087,"duration":0},"description":"\n    Негативные сценарии: разные варианты некорректного document_id.\n    ","descriptionHtml":"<pre><code>Негативные сценарии: разные варианты некорректного document_id.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f7b6371b6d0>\n\n    @pytest.fixture(scope='function')\n    def space_id_function(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:228: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1761909856376,"stop":1761909856376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761909856376,"stop":1761909856376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761909856376,"stop":1761909856684,"duration":308},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761909856376,"stop":1761909856376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761909856376,"stop":1761909856376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"space_id_function","time":{"start":1761910012088,"stop":1761910012263,"duration":175},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 228, in space_id_function\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_siblings"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2551-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_siblings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"400"},{"name":"fake_id","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":10,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":50},"items":[{"uid":"8902e500023c5f36","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/8902e500023c5f36","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900043174,"stop":1761900043174,"duration":0}},{"uid":"c141102a57edafa6","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/c141102a57edafa6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835062530,"stop":1761835062530,"duration":0}},{"uid":"8236279fafd049c","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/8236279fafd049c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834649067,"stop":1761834649067,"duration":0}},{"uid":"64e3c4b4cf81135d","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/64e3c4b4cf81135d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833484998,"stop":1761833484998,"duration":0}},{"uid":"933f64d876b798af","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/933f64d876b798af","status":"passed","time":{"start":1761821813103,"stop":1761821813468,"duration":365}},{"uid":"580f43cf6f331426","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/580f43cf6f331426","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818772939,"stop":1761818772939,"duration":0}},{"uid":"9ee5d4785e3dc45","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/9ee5d4785e3dc45","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748635584,"stop":1761748635584,"duration":0}},{"uid":"bbf7c385dd73cca1","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/bbf7c385dd73cca1","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747913106,"stop":1761747913106,"duration":0}},{"uid":"e1687a962da6fca3","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/e1687a962da6fca3","status":"passed","time":{"start":1761747019019,"stop":1761747019404,"duration":385}},{"uid":"e35f9e2b0a09111f","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/e35f9e2b0a09111f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745743666,"stop":1761745743666,"duration":0}},{"uid":"706096657ce0e16b","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/706096657ce0e16b","status":"passed","time":{"start":1761576842511,"stop":1761576842934,"duration":423}},{"uid":"b666d2e9127f66e1","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/b666d2e9127f66e1","status":"passed","time":{"start":1761557465325,"stop":1761557465677,"duration":352}},{"uid":"635bfc5513233c61","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/635bfc5513233c61","status":"passed","time":{"start":1761308683159,"stop":1761308683469,"duration":310}},{"uid":"cd9317151f2426ef","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/cd9317151f2426ef","status":"passed","time":{"start":1761306850085,"stop":1761306850434,"duration":349}},{"uid":"130c9c54bb1c6267","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/130c9c54bb1c6267","status":"passed","time":{"start":1761137148545,"stop":1761137148944,"duration":399}},{"uid":"1a0f367375a00f0b","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/1a0f367375a00f0b","status":"passed","time":{"start":1761135843812,"stop":1761135844391,"duration":579}},{"uid":"1daf455e77f2f58b","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/1daf455e77f2f58b","status":"passed","time":{"start":1761134254566,"stop":1761134254922,"duration":356}},{"uid":"b52ee89396ef8695","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/b52ee89396ef8695","status":"passed","time":{"start":1761128642686,"stop":1761128643180,"duration":494}},{"uid":"779f9c718cda0ff8","reportUrl":"https://vaizcom.github.io/autotests/383//#testresult/779f9c718cda0ff8","status":"passed","time":{"start":1761124738935,"stop":1761124739407,"duration":472}},{"uid":"96ac4f8b28de7675","reportUrl":"https://vaizcom.github.io/autotests/382//#testresult/96ac4f8b28de7675","status":"passed","time":{"start":1761119545689,"stop":1761119546951,"duration":1262}}]},"tags":["backend"]},"source":"c99edf537f0e5553.json","parameterValues":["400","None"]}