{"uid":"2f4a969902fe841c","name":"test_get_documents[project]","fullName":"tests.test_backend.document.test_get_documents#test_get_documents","historyId":"0b08f4d92db89a7f94b9d0fbd2ee1046","time":{"start":1761911303947,"stop":1761911303947,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fbc912cb790>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761911162887,"stop":1761911162887,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761911162888,"stop":1761911163517,"duration":629},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761911172524,"stop":1761911172705,"duration":181},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_documents"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_documents"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"fixture_name","value":"'temp_project'"},{"name":"kind","value":"'Project'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":39,"unknown":0,"total":53},"items":[{"uid":"9855053db7cea80b","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/9855053db7cea80b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910914681,"stop":1761910914681,"duration":0}},{"uid":"2691b09d476918fa","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/2691b09d476918fa","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910615832,"stop":1761910615832,"duration":0}},{"uid":"d9bbfcc631820043","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/d9bbfcc631820043","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910008908,"stop":1761910008908,"duration":0}},{"uid":"b8b50a0f39c07c1e","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/b8b50a0f39c07c1e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900040024,"stop":1761900040024,"duration":0}},{"uid":"2219c1ca29998638","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/2219c1ca29998638","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835060227,"stop":1761835060227,"duration":0}},{"uid":"b4d9288293a3b25b","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/b4d9288293a3b25b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834645286,"stop":1761834645286,"duration":0}},{"uid":"3d8cc23a556d1809","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/3d8cc23a556d1809","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833481696,"stop":1761833481696,"duration":0}},{"uid":"dac5e541d0d47a9","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/dac5e541d0d47a9","status":"passed","time":{"start":1761821756532,"stop":1761821757433,"duration":901}},{"uid":"d11835629f5d4102","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/d11835629f5d4102","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818769829,"stop":1761818769829,"duration":0}},{"uid":"155c32ae5657afe","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/155c32ae5657afe","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748633156,"stop":1761748633156,"duration":0}},{"uid":"28828419e018b534","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/28828419e018b534","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747909419,"stop":1761747909419,"duration":0}},{"uid":"51730e295beafbc8","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/51730e295beafbc8","status":"passed","time":{"start":1761746938907,"stop":1761746941535,"duration":2628}},{"uid":"13319862d79770d9","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/13319862d79770d9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745741299,"stop":1761745741299,"duration":0}},{"uid":"179aab23f2dbf4fa","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/179aab23f2dbf4fa","status":"passed","time":{"start":1761576770560,"stop":1761576771732,"duration":1172}},{"uid":"c4cb5214e5a24281","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/c4cb5214e5a24281","status":"passed","time":{"start":1761557407918,"stop":1761557409607,"duration":1689}},{"uid":"8ee69a72414aab3d","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/8ee69a72414aab3d","status":"passed","time":{"start":1761308628415,"stop":1761308629818,"duration":1403}},{"uid":"c31e0dfe113ae427","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/c31e0dfe113ae427","status":"passed","time":{"start":1761306792560,"stop":1761306793835,"duration":1275}},{"uid":"149c06badab782a0","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/149c06badab782a0","status":"passed","time":{"start":1761137087759,"stop":1761137089279,"duration":1520}},{"uid":"a6155241acb7f0e4","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/a6155241acb7f0e4","status":"passed","time":{"start":1761135774109,"stop":1761135774961,"duration":852}},{"uid":"d2e05f6895fff51","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/d2e05f6895fff51","status":"passed","time":{"start":1761134192981,"stop":1761134193528,"duration":547}}]},"tags":["backend"]},"source":"2f4a969902fe841c.json","parameterValues":["'temp_project'","'Project'"]}