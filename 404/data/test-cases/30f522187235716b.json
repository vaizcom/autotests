{"uid":"30f522187235716b","name":"test_get_document_siblings_foreign_space[space]","fullName":"tests.test_backend.document.test_get_siblings#test_get_document_siblings_foreign_space","historyId":"43f765f59742ee743fe850d2840d24b3","time":{"start":1761921882556,"stop":1761921882556,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fc7d133bfd0>\n\n    @pytest.fixture(scope='function')\n    def space_id_function(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:228: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761921763685,"stop":1761921763685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761921763685,"stop":1761921764117,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"guest_client","time":{"start":1761921770374,"stop":1761921770656,"duration":282},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"space_id_function","time":{"start":1761921882557,"stop":1761921882677,"duration":120},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 228, in space_id_function\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_siblings"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2549-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_siblings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"kind","value":"'Space'"},{"name":"kind_id_fixture","value":"'space_id_function'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":55},"items":[{"uid":"10eb5bb9561bb38a","reportUrl":"https://vaizcom.github.io/autotests/404//#testresult/10eb5bb9561bb38a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761912193723,"stop":1761912193723,"duration":0}},{"uid":"f1486fe55f5e29aa","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/f1486fe55f5e29aa","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911307460,"stop":1761911307460,"duration":0}},{"uid":"97b6eb806efce934","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/97b6eb806efce934","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910917449,"stop":1761910917449,"duration":0}},{"uid":"58f8cbec84f55c4f","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/58f8cbec84f55c4f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910618404,"stop":1761910618404,"duration":0}},{"uid":"f46efee9a26f9873","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/f46efee9a26f9873","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910012452,"stop":1761910012452,"duration":0}},{"uid":"4079c9bc97f7a859","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/4079c9bc97f7a859","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900043539,"stop":1761900043539,"duration":0}},{"uid":"242c029333909df4","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/242c029333909df4","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835062784,"stop":1761835062784,"duration":0}},{"uid":"a2c91f52e22811d9","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/a2c91f52e22811d9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834649467,"stop":1761834649467,"duration":0}},{"uid":"645f0a3da61c94af","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/645f0a3da61c94af","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833485394,"stop":1761833485394,"duration":0}},{"uid":"a0159bf4d40afae","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/a0159bf4d40afae","status":"passed","time":{"start":1761821816411,"stop":1761821816927,"duration":516}},{"uid":"7565641c1290cbbe","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/7565641c1290cbbe","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818773304,"stop":1761818773304,"duration":0}},{"uid":"5121a392539c7b5a","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/5121a392539c7b5a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748636047,"stop":1761748636047,"duration":0}},{"uid":"a4c79b8849bf5232","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/a4c79b8849bf5232","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747913494,"stop":1761747913494,"duration":0}},{"uid":"29c5be41d261d939","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/29c5be41d261d939","status":"passed","time":{"start":1761747023731,"stop":1761747024354,"duration":623}},{"uid":"866592fdbac02d3b","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/866592fdbac02d3b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745743915,"stop":1761745743915,"duration":0}},{"uid":"886af6b0b2987f7d","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/886af6b0b2987f7d","status":"passed","time":{"start":1761576847050,"stop":1761576847708,"duration":658}},{"uid":"64be8a1f99749160","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/64be8a1f99749160","status":"passed","time":{"start":1761557468598,"stop":1761557469152,"duration":554}},{"uid":"c527f9ed64c83cd2","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/c527f9ed64c83cd2","status":"passed","time":{"start":1761308686641,"stop":1761308687204,"duration":563}},{"uid":"75ec0214df134716","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/75ec0214df134716","status":"passed","time":{"start":1761306853209,"stop":1761306853782,"duration":573}},{"uid":"b3f49e1bc67dc9ed","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/b3f49e1bc67dc9ed","status":"passed","time":{"start":1761137151849,"stop":1761137152449,"duration":600}}]},"tags":["backend"]},"source":"30f522187235716b.json","parameterValues":["'Space'","'space_id_function'"]}