{"uid":"47510af8c49356c4","name":"Проверка доступа к siblings Project-документа: создатель - owner, просматривающий - owner","fullName":"tests.test_backend.document.access_doc.test_get_siblings_doc_access#test_get_project_and_space_siblings_docs_access_by_roles","historyId":"bfd1c183fec224c2cc79dc050b7216a9","time":{"start":1759767456783,"stop":1759767457394,"duration":611},"description":"\n    Проверяет доступ к siblings документов при разных комбинациях:\n    - Создателя документа\n    - Просматривающего пользователя\n    - Типа документа (Space/Project)\n\n    Проверки:\n        1. Создание трёх последовательных документов указанной ролью\n        2. Запрос siblings для среднего документа другой ролью\n        3. Проверка статуса ответа и корректности данных siblings\n    ","descriptionHtml":"<pre><code>Проверяет доступ к siblings документов при разных комбинациях:\n- Создателя документа\n- Просматривающего пользователя\n- Типа документа (Space/Project)\n\nПроверки:\n    1. Создание трёх последовательных документов указанной ролью\n    2. Запрос siblings для среднего документа другой ролью\n    3. Проверка статуса ответа и корректности данных siblings\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Ошибка при создании документа 1: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"request = <FixtureRequest for <Function test_get_project_and_space_siblings_docs_access_by_roles[project_doc-owner_self_docs_200]>>\nmain_space = '6866309d85fb8d104544a61e', creator_fixture = 'owner_client'\nclient_fixture = 'owner_client', expected_status = 200, kind = 'Project'\ncontainer_fixture = 'main_project'\n\n    @pytest.mark.parametrize(\n        'creator_fixture, client_fixture, expected_status',\n        [\n            ('owner_client', 'owner_client', 200),\n            ('owner_client', 'manager_client', 200),\n            ('owner_client', 'member_client', 200),\n            ('owner_client', 'guest_client', 200),\n            ('manager_client', 'owner_client', 200),\n            ('manager_client', 'manager_client', 200),\n            ('manager_client', 'member_client', 200),\n            ('manager_client', 'guest_client', 200),\n            ('member_client', 'owner_client', 200),\n            ('member_client', 'manager_client', 200),\n            ('member_client', 'member_client', 200),\n            ('member_client', 'guest_client', 200),\n        ],\n        ids=[\n            'owner_self_docs_200',\n            'owner_docs_by_manager_403',\n            'owner_docs_by_member_403',\n            'owner_docs_by_guest_403',\n            'manager_docs_by_owner_403',\n            'manager_self_docs_200',\n            'manager_docs_by_member_403',\n            'manager_docs_by_guest_403',\n            'member_docs_by_owner_403',\n            'member_docs_by_manager_403',\n            'member_self_docs_200',\n            'member_docs_by_guest_403',\n        ],\n    )\n    @pytest.mark.parametrize(\n        'kind, container_fixture',\n        [\n            ('Space', 'main_space'),\n            ('Project', 'main_project'),\n        ],\n        ids=['space_doc', 'project_doc'],\n    )\n    def test_get_project_and_space_siblings_docs_access_by_roles(\n        request, main_space, creator_fixture, client_fixture, expected_status, kind, container_fixture\n    ):\n        \"\"\"\n        Проверяет доступ к siblings документов при разных комбинациях:\n        - Создателя документа\n        - Просматривающего пользователя\n        - Типа документа (Space/Project)\n    \n        Проверки:\n            1. Создание трёх последовательных документов указанной ролью\n            2. Запрос siblings для среднего документа другой ролью\n            3. Проверка статуса ответа и корректности данных siblings\n        \"\"\"\n        creator = request.getfixturevalue(creator_fixture)\n        viewer = request.getfixturevalue(client_fixture)\n        creator_role = creator_fixture.replace('_client', '')\n        viewer_role = client_fixture.replace('_client', '')\n        container_id = request.getfixturevalue(container_fixture)\n    \n        current_date = datetime.now().strftime('%d.%m_%H:%M:%S')\n    \n        allure.dynamic.title(\n            f'Проверка доступа к siblings {kind}-документа: создатель - {creator_role}, просматривающий - {viewer_role}'\n        )\n    \n        doc_ids = []\n        with allure.step(f'Создание трёх {kind}-документов пользователем {creator_role}'):\n            for index in range(3):\n                title = f'{current_date}_{creator_role}_{kind}_Doc_{index}'\n                create_resp = creator.post(\n                    **create_document_endpoint(kind=kind, kind_id=container_id, space_id=main_space, title=title)\n                )\n>               assert (\n                    create_resp.status_code == 200\n                ), f'Ошибка при создании документа {index}: статус {create_resp.status_code}'\nE               AssertionError: Ошибка при создании документа 1: статус 400\nE               assert 400 == 200\nE                +  where 400 = <Response [400]>.status_code\n\ntests/test_backend/document/access_doc/test_get_siblings_doc_access.py:86: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1759767260767,"stop":1759767260767,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1759767260767,"stop":1759767260767,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1759767260767,"stop":1759767260767,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1759767260767,"stop":1759767260767,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1759767260767,"stop":1759767261300,"duration":533},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1759767261301,"stop":1759767261750,"duration":449},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_project","time":{"start":1759767261751,"stop":1759767262153,"duration":402},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1759767262154,"stop":1759767262666,"duration":512},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Проверяет доступ к siblings документов при разных комбинациях:\n    - Создателя документа\n    - Просматривающего пользователя\n    - Типа документа (Space/Project)\n\n    Проверки:\n        1. Создание трёх последовательных документов указанной ролью\n        2. Запрос siblings для среднего документа другой ролью\n        3. Проверка статуса ответа и корректности данных siblings\n    ","status":"failed","statusMessage":"AssertionError: Ошибка при создании документа 1: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"request = <FixtureRequest for <Function test_get_project_and_space_siblings_docs_access_by_roles[project_doc-owner_self_docs_200]>>\nmain_space = '6866309d85fb8d104544a61e', creator_fixture = 'owner_client'\nclient_fixture = 'owner_client', expected_status = 200, kind = 'Project'\ncontainer_fixture = 'main_project'\n\n    @pytest.mark.parametrize(\n        'creator_fixture, client_fixture, expected_status',\n        [\n            ('owner_client', 'owner_client', 200),\n            ('owner_client', 'manager_client', 200),\n            ('owner_client', 'member_client', 200),\n            ('owner_client', 'guest_client', 200),\n            ('manager_client', 'owner_client', 200),\n            ('manager_client', 'manager_client', 200),\n            ('manager_client', 'member_client', 200),\n            ('manager_client', 'guest_client', 200),\n            ('member_client', 'owner_client', 200),\n            ('member_client', 'manager_client', 200),\n            ('member_client', 'member_client', 200),\n            ('member_client', 'guest_client', 200),\n        ],\n        ids=[\n            'owner_self_docs_200',\n            'owner_docs_by_manager_403',\n            'owner_docs_by_member_403',\n            'owner_docs_by_guest_403',\n            'manager_docs_by_owner_403',\n            'manager_self_docs_200',\n            'manager_docs_by_member_403',\n            'manager_docs_by_guest_403',\n            'member_docs_by_owner_403',\n            'member_docs_by_manager_403',\n            'member_self_docs_200',\n            'member_docs_by_guest_403',\n        ],\n    )\n    @pytest.mark.parametrize(\n        'kind, container_fixture',\n        [\n            ('Space', 'main_space'),\n            ('Project', 'main_project'),\n        ],\n        ids=['space_doc', 'project_doc'],\n    )\n    def test_get_project_and_space_siblings_docs_access_by_roles(\n        request, main_space, creator_fixture, client_fixture, expected_status, kind, container_fixture\n    ):\n        \"\"\"\n        Проверяет доступ к siblings документов при разных комбинациях:\n        - Создателя документа\n        - Просматривающего пользователя\n        - Типа документа (Space/Project)\n    \n        Проверки:\n            1. Создание трёх последовательных документов указанной ролью\n            2. Запрос siblings для среднего документа другой ролью\n            3. Проверка статуса ответа и корректности данных siblings\n        \"\"\"\n        creator = request.getfixturevalue(creator_fixture)\n        viewer = request.getfixturevalue(client_fixture)\n        creator_role = creator_fixture.replace('_client', '')\n        viewer_role = client_fixture.replace('_client', '')\n        container_id = request.getfixturevalue(container_fixture)\n    \n        current_date = datetime.now().strftime('%d.%m_%H:%M:%S')\n    \n        allure.dynamic.title(\n            f'Проверка доступа к siblings {kind}-документа: создатель - {creator_role}, просматривающий - {viewer_role}'\n        )\n    \n        doc_ids = []\n        with allure.step(f'Создание трёх {kind}-документов пользователем {creator_role}'):\n            for index in range(3):\n                title = f'{current_date}_{creator_role}_{kind}_Doc_{index}'\n                create_resp = creator.post(\n                    **create_document_endpoint(kind=kind, kind_id=container_id, space_id=main_space, title=title)\n                )\n>               assert (\n                    create_resp.status_code == 200\n                ), f'Ошибка при создании документа {index}: статус {create_resp.status_code}'\nE               AssertionError: Ошибка при создании документа 1: статус 400\nE               assert 400 == 200\nE                +  where 400 = <Response [400]>.status_code\n\ntests/test_backend/document/access_doc/test_get_siblings_doc_access.py:86: AssertionError","steps":[{"name":"Создание трёх Project-документов пользователем owner","time":{"start":1759767456783,"stop":1759767457394,"duration":611},"status":"failed","statusMessage":"AssertionError: Ошибка при создании документа 1: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/document/access_doc/test_get_siblings_doc_access.py\", line 86, in test_get_project_and_space_siblings_docs_access_by_roles\n    assert (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document.access_doc"},{"name":"suite","value":"test_get_siblings_doc_access"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2672-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.access_doc.test_get_siblings_doc_access"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"client_fixture","value":"'owner_client'"},{"name":"container_fixture","value":"'main_project'"},{"name":"creator_fixture","value":"'owner_client'"},{"name":"expected_status","value":"200"},{"name":"kind","value":"'Project'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":1,"skipped":0,"passed":32,"unknown":0,"total":34},"items":[{"uid":"b981a8230a3d93de","reportUrl":"https://vaizcom.github.io/autotests/341//#testresult/b981a8230a3d93de","status":"passed","time":{"start":1759753918971,"stop":1759753921406,"duration":2435}},{"uid":"d795f17fb6d2534c","reportUrl":"https://vaizcom.github.io/autotests/340//#testresult/d795f17fb6d2534c","status":"passed","time":{"start":1759743882055,"stop":1759743884026,"duration":1971}},{"uid":"aa9528035c92c96f","reportUrl":"https://vaizcom.github.io/autotests/339//#testresult/aa9528035c92c96f","status":"broken","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='api.vaiz.dev', port=443): Max retries exceeded with url: /v4/Login (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7fb5f6e8f010>, 'Connection to api.vaiz.dev timed out. (connect timeout=None)'))","time":{"start":1759485534512,"stop":1759485534512,"duration":0}},{"uid":"c9bf318030f4b1d6","reportUrl":"https://vaizcom.github.io/autotests/338//#testresult/c9bf318030f4b1d6","status":"passed","time":{"start":1759232507502,"stop":1759232509733,"duration":2231}},{"uid":"c577addea2a0f06b","reportUrl":"https://vaizcom.github.io/autotests/337//#testresult/c577addea2a0f06b","status":"passed","time":{"start":1759140788731,"stop":1759140790611,"duration":1880}},{"uid":"f3c93d1ded4a3548","reportUrl":"https://vaizcom.github.io/autotests/335//#testresult/f3c93d1ded4a3548","status":"passed","time":{"start":1758891861323,"stop":1758891863784,"duration":2461}},{"uid":"e187cebab9ef5dd3","reportUrl":"https://vaizcom.github.io/autotests/334//#testresult/e187cebab9ef5dd3","status":"passed","time":{"start":1758807813283,"stop":1758807815766,"duration":2483}},{"uid":"d31a2b09213846b8","reportUrl":"https://vaizcom.github.io/autotests/333//#testresult/d31a2b09213846b8","status":"passed","time":{"start":1758806686225,"stop":1758806688821,"duration":2596}},{"uid":"5a59d5a8373c2528","reportUrl":"https://vaizcom.github.io/autotests/332//#testresult/5a59d5a8373c2528","status":"passed","time":{"start":1758791266851,"stop":1758791269279,"duration":2428}},{"uid":"ab5658ba94c5965d","reportUrl":"https://vaizcom.github.io/autotests/331//#testresult/ab5658ba94c5965d","status":"passed","time":{"start":1758540574738,"stop":1758540577026,"duration":2288}},{"uid":"3bcf70266b71255d","reportUrl":"https://vaizcom.github.io/autotests/330//#testresult/3bcf70266b71255d","status":"passed","time":{"start":1758289209227,"stop":1758289211995,"duration":2768}},{"uid":"2a6edfaf16bd84bb","reportUrl":"https://vaizcom.github.io/autotests/329//#testresult/2a6edfaf16bd84bb","status":"passed","time":{"start":1755852375579,"stop":1755852377756,"duration":2177}},{"uid":"8ddc885285ee52b8","reportUrl":"https://vaizcom.github.io/autotests/328//#testresult/8ddc885285ee52b8","status":"passed","time":{"start":1755851884010,"stop":1755851886869,"duration":2859}},{"uid":"b1e312385052d93a","reportUrl":"https://vaizcom.github.io/autotests/327//#testresult/b1e312385052d93a","status":"passed","time":{"start":1755848023760,"stop":1755848026013,"duration":2253}},{"uid":"a95e2383e6990a18","reportUrl":"https://vaizcom.github.io/autotests/326//#testresult/a95e2383e6990a18","status":"passed","time":{"start":1755777888660,"stop":1755777891805,"duration":3145}},{"uid":"15c0d910ea4fa409","reportUrl":"https://vaizcom.github.io/autotests/325//#testresult/15c0d910ea4fa409","status":"passed","time":{"start":1755774525976,"stop":1755774528219,"duration":2243}},{"uid":"4d0c5d13cb358463","reportUrl":"https://vaizcom.github.io/autotests/324//#testresult/4d0c5d13cb358463","status":"passed","time":{"start":1755694659380,"stop":1755694661783,"duration":2403}},{"uid":"81992a92480c1e3c","reportUrl":"https://vaizcom.github.io/autotests/323//#testresult/81992a92480c1e3c","status":"passed","time":{"start":1755694089606,"stop":1755694091929,"duration":2323}},{"uid":"5321e3f5a231844b","reportUrl":"https://vaizcom.github.io/autotests/322//#testresult/5321e3f5a231844b","status":"passed","time":{"start":1755687158505,"stop":1755687161322,"duration":2817}},{"uid":"dca2d15219f2c71a","reportUrl":"https://vaizcom.github.io/autotests/321//#testresult/dca2d15219f2c71a","status":"passed","time":{"start":1755682905748,"stop":1755682908288,"duration":2540}}]},"tags":["backend"]},"source":"47510af8c49356c4.json","parameterValues":["'owner_client'","'main_project'","'owner_client'","200","'Project'"]}