{"uid":"4aff6875de5e7467","name":"Проверка создания задачи с конкретным payload и структурой ответа : клиент=manager_client, ожидаемый статус=200","fullName":"tests.test_backend.task.access_task.test_create_task#test_create_task_with_specific_payload_and_response","historyId":"a3434bdc99523c8ca5d52e1cbe915219","time":{"start":1759908111724,"stop":1759908112326,"duration":602},"description":"\n    Данный тест проверяет возможность создания задачи с заранее определённым набором данных (payload) через API\n     управления задачами для различных ролей пользователей, а также корректность и полноту возвращаемого ответа.\n     Тест эмулирует действия разных типов клиентов (владелец, менеджер, участник, гость) и сравнивает фактический результат с ожидаемым HTTP-статусом.\n    ","descriptionHtml":"<pre><code>Данный тест проверяет возможность создания задачи с заранее определённым набором данных (payload) через API\n управления задачами для различных ролей пользователей, а также корректность и полноту возвращаемого ответа.\n Тест эмулирует действия разных типов клиентов (владелец, менеджер, участник, гость) и сравнивает фактический результат с ожидаемым HTTP-статусом.\n</code></pre>\n","status":"broken","statusMessage":"AttributeError: module 'datetime' has no attribute 'utcnow'","statusTrace":"request = <FixtureRequest for <Function test_create_task_with_specific_payload_and_response[manager]>>\nclient_fixture = 'manager_client', expected_status = 200\nmain_space = '6866309d85fb8d104544a61e', main_board = '6866731185fb8d104544e826'\nmain_project = '686672af85fb8d104544e798'\n\n    @pytest.mark.parametrize(\n        'client_fixture, expected_status',\n        [\n            ('owner_client', 200),\n            ('manager_client', 200),\n            ('member_client', 200),\n            ('guest_client', 403),\n        ],\n        ids=['owner', 'manager', 'member', 'guest'],\n    )\n    def test_create_task_with_specific_payload_and_response(\n            request, client_fixture, expected_status, main_space, main_board, main_project\n    ):\n        \"\"\"\n        Данный тест проверяет возможность создания задачи с заранее определённым набором данных (payload) через API\n         управления задачами для различных ролей пользователей, а также корректность и полноту возвращаемого ответа.\n         Тест эмулирует действия разных типов клиентов (владелец, менеджер, участник, гость) и сравнивает фактический результат с ожидаемым HTTP-статусом.\n        \"\"\"\n        allure.dynamic.title(\n            f\"Проверка создания задачи с конкретным payload и структурой ответа : клиент={client_fixture}, ожидаемый статус={expected_status}\"\n        )\n    \n        # Получение клиента\n        with allure.step(f\"Получение клиента для {client_fixture}\"):\n            client = get_client(request, client_fixture)\n    \n        # Формируем имя задачи с учетом пользователя и текущей даты\n        task_name = f\"Create task клиент={client_fixture}, дата={datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\"\n    \n        # Получение профиля для извлечения creator ID\n        with allure.step(f\"Получение профиля для извлечения creator ID\"):\n            member_id = get_member_profile(client, main_space)\n    \n        with allure.step(\"Получаем случайный type из борды\"):\n            random_type_id = get_type(client, main_board, main_space)\n    \n        with allure.step(\"Получаем случайную группу из борды\"):\n            random_group_id = get_group(client, main_board, main_space)\n    \n        with allure.step(\"Получаем текущую дату и время в формате ISO 8601 UTC\"):\n>           current_timestamp = get_current_timestamp()\n\ntests/test_backend/task/access_task/test_create_task.py:171: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def get_current_timestamp():\n        \"\"\"\n        Возвращает текущую дату и время в формате \"YYYY-MM-DDTHH:MM:SS.sss+00:00\".\n        :return: строка с датой и временем.\n        \"\"\"\n>       current_time = datetime.utcnow()\nE       AttributeError: module 'datetime' has no attribute 'utcnow'\n\ntests/test_backend/task/utils.py:94: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1759907643244,"stop":1759907643244,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1759907643244,"stop":1759907643244,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1759907643244,"stop":1759907643244,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1759907643244,"stop":1759907643244,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1759907643244,"stop":1759907643675,"duration":431},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1759907643676,"stop":1759907644127,"duration":451},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_project","time":{"start":1759907644127,"stop":1759907644329,"duration":202},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"manager_client","time":{"start":1759907646144,"stop":1759907646578,"duration":434},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_board","time":{"start":1759907649112,"stop":1759907649525,"duration":413},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Данный тест проверяет возможность создания задачи с заранее определённым набором данных (payload) через API\n     управления задачами для различных ролей пользователей, а также корректность и полноту возвращаемого ответа.\n     Тест эмулирует действия разных типов клиентов (владелец, менеджер, участник, гость) и сравнивает фактический результат с ожидаемым HTTP-статусом.\n    ","status":"broken","statusMessage":"AttributeError: module 'datetime' has no attribute 'utcnow'","statusTrace":"request = <FixtureRequest for <Function test_create_task_with_specific_payload_and_response[manager]>>\nclient_fixture = 'manager_client', expected_status = 200\nmain_space = '6866309d85fb8d104544a61e', main_board = '6866731185fb8d104544e826'\nmain_project = '686672af85fb8d104544e798'\n\n    @pytest.mark.parametrize(\n        'client_fixture, expected_status',\n        [\n            ('owner_client', 200),\n            ('manager_client', 200),\n            ('member_client', 200),\n            ('guest_client', 403),\n        ],\n        ids=['owner', 'manager', 'member', 'guest'],\n    )\n    def test_create_task_with_specific_payload_and_response(\n            request, client_fixture, expected_status, main_space, main_board, main_project\n    ):\n        \"\"\"\n        Данный тест проверяет возможность создания задачи с заранее определённым набором данных (payload) через API\n         управления задачами для различных ролей пользователей, а также корректность и полноту возвращаемого ответа.\n         Тест эмулирует действия разных типов клиентов (владелец, менеджер, участник, гость) и сравнивает фактический результат с ожидаемым HTTP-статусом.\n        \"\"\"\n        allure.dynamic.title(\n            f\"Проверка создания задачи с конкретным payload и структурой ответа : клиент={client_fixture}, ожидаемый статус={expected_status}\"\n        )\n    \n        # Получение клиента\n        with allure.step(f\"Получение клиента для {client_fixture}\"):\n            client = get_client(request, client_fixture)\n    \n        # Формируем имя задачи с учетом пользователя и текущей даты\n        task_name = f\"Create task клиент={client_fixture}, дата={datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\"\n    \n        # Получение профиля для извлечения creator ID\n        with allure.step(f\"Получение профиля для извлечения creator ID\"):\n            member_id = get_member_profile(client, main_space)\n    \n        with allure.step(\"Получаем случайный type из борды\"):\n            random_type_id = get_type(client, main_board, main_space)\n    \n        with allure.step(\"Получаем случайную группу из борды\"):\n            random_group_id = get_group(client, main_board, main_space)\n    \n        with allure.step(\"Получаем текущую дату и время в формате ISO 8601 UTC\"):\n>           current_timestamp = get_current_timestamp()\n\ntests/test_backend/task/access_task/test_create_task.py:171: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def get_current_timestamp():\n        \"\"\"\n        Возвращает текущую дату и время в формате \"YYYY-MM-DDTHH:MM:SS.sss+00:00\".\n        :return: строка с датой и временем.\n        \"\"\"\n>       current_time = datetime.utcnow()\nE       AttributeError: module 'datetime' has no attribute 'utcnow'\n\ntests/test_backend/task/utils.py:94: AttributeError","steps":[{"name":"Получение клиента для manager_client","time":{"start":1759908111724,"stop":1759908111724,"duration":0},"status":"passed","steps":[{"name":"Получение клиента для manager_client","time":{"start":1759908111724,"stop":1759908111724,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Получение профиля для извлечения creator ID","time":{"start":1759908111724,"stop":1759908111916,"duration":192},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Получаем случайный type из борды","time":{"start":1759908111916,"stop":1759908112121,"duration":205},"status":"passed","steps":[{"name":"Запрашиваем данные борды с ID: 6866731185fb8d104544e826","time":{"start":1759908111916,"stop":1759908112121,"duration":205},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем наличие typesList","time":{"start":1759908112121,"stop":1759908112121,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Рандомно выбираем `type` из typesList","time":{"start":1759908112121,"stop":1759908112121,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true},{"name":"Получаем случайную группу из борды","time":{"start":1759908112121,"stop":1759908112326,"duration":205},"status":"passed","steps":[{"name":"Запрашиваем данные борды с ID: 6866731185fb8d104544e826","time":{"start":1759908112121,"stop":1759908112326,"duration":205},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем наличие списка групп","time":{"start":1759908112326,"stop":1759908112326,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Рандомно выбираем группу из списка","time":{"start":1759908112326,"stop":1759908112326,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true},{"name":"Получаем текущую дату и время в формате ISO 8601 UTC","time":{"start":1759908112326,"stop":1759908112326,"duration":0},"status":"broken","statusMessage":"AttributeError: module 'datetime' has no attribute 'utcnow'\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/task/access_task/test_create_task.py\", line 171, in test_create_task_with_specific_payload_and_response\n    current_timestamp = get_current_timestamp()\n                        ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/test_backend/task/utils.py\", line 94, in get_current_timestamp\n    current_time = datetime.utcnow()\n                   ^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":12,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.task.access_task"},{"name":"suite","value":"test_create_task"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2551-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.task.access_task.test_create_task"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"client_fixture","value":"'manager_client'"},{"name":"expected_status","value":"200"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["backend"]},"source":"4aff6875de5e7467.json","parameterValues":["'manager_client'","200"]}