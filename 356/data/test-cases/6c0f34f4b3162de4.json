{"uid":"6c0f34f4b3162de4","name":"Test space name length limit","fullName":"tests.test_backend.space.test_space#test_space_name_length_limit","historyId":"93c9d10969f73a2fb8e9a5d94a0bd3e4","time":{"start":1759837469000,"stop":1759837469177,"duration":177},"status":"failed","statusMessage":"AssertionError: Should fail if space name is too long\nassert 503 == 400\n +  where 503 = <Response [503]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f0d403af650>\n\n    @allure.title('Test space name length limit')\n    def test_space_name_length_limit(owner_client):\n        client = owner_client\n        name = 'a' * (MAX_SPACE_NAME_LENGTH + 1)\n        with allure.step('Try to create space with too long name'):\n            response = client.post(**create_space_endpoint(name=name))\n>           assert response.status_code == 400, 'Should fail if space name is too long'\nE           AssertionError: Should fail if space name is too long\nE           assert 503 == 400\nE            +  where 503 = <Response [503]>.status_code\n\ntests/test_backend/space/test_space.py:59: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1759837147179,"stop":1759837147495,"duration":316},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Should fail if space name is too long\nassert 503 == 400\n +  where 503 = <Response [503]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f0d403af650>\n\n    @allure.title('Test space name length limit')\n    def test_space_name_length_limit(owner_client):\n        client = owner_client\n        name = 'a' * (MAX_SPACE_NAME_LENGTH + 1)\n        with allure.step('Try to create space with too long name'):\n            response = client.post(**create_space_endpoint(name=name))\n>           assert response.status_code == 400, 'Should fail if space name is too long'\nE           AssertionError: Should fail if space name is too long\nE           assert 503 == 400\nE            +  where 503 = <Response [503]>.status_code\n\ntests/test_backend/space/test_space.py:59: AssertionError","steps":[{"name":"Try to create space with too long name","time":{"start":1759837469000,"stop":1759837469176,"duration":176},"status":"failed","statusMessage":"AssertionError: Should fail if space name is too long\nassert 503 == 400\n +  where 503 = <Response [503]>.status_code\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/space/test_space.py\", line 59, in test_space_name_length_limit\n    assert response.status_code == 400, 'Should fail if space name is too long'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.space"},{"name":"suite","value":"test_space"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2583-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.space.test_space"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":4},"items":[{"uid":"979d4adb8ee055a7","reportUrl":"https://vaizcom.github.io/autotests/355//#testresult/979d4adb8ee055a7","status":"passed","time":{"start":1759836398307,"stop":1759836398458,"duration":151}},{"uid":"c1e1184593ed2f39","reportUrl":"https://vaizcom.github.io/autotests/354//#testresult/c1e1184593ed2f39","status":"passed","time":{"start":1759835729365,"stop":1759835729497,"duration":132}},{"uid":"bc86fed5dcc3137c","reportUrl":"https://vaizcom.github.io/autotests/353//#testresult/bc86fed5dcc3137c","status":"passed","time":{"start":1759834860830,"stop":1759834861017,"duration":187}}]},"tags":["backend"]},"source":"6c0f34f4b3162de4.json","parameterValues":[]}