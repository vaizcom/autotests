{"uid":"9c83a36fe63fbd89","name":"Создание Project-документа для роли guest","fullName":"tests.test_backend.document.access_doc.test_create_doc_access_by_roles#test_create_and_archive_project_doc_access_by_roles","historyId":"43ce81e1cfaccbca939965473c6abd14","time":{"start":1752065496609,"stop":1752065496869,"duration":260},"status":"broken","statusMessage":"UnboundLocalError: cannot access local variable 'doc_id' where it is not associated with a value","statusTrace":"request = <FixtureRequest for <Function test_create_and_archive_project_doc_access_by_roles[guest]>>\nmain_project = '686672af85fb8d104544e798'\nmain_space = '6866309d85fb8d104544a61e', client_fixture = 'guest_client'\nexpected_status = 403\n\n    @pytest.mark.parametrize(\n        'client_fixture, expected_status',\n        [\n            ('owner_client', 200),\n            ('manager_client', 200),\n            ('member_client', 200),\n            ('guest_client', 403),\n        ],\n        ids=['owner', 'manager', 'member', 'guest'],\n    )\n    def test_create_and_archive_project_doc_access_by_roles(\n        request, main_project, main_space, client_fixture, expected_status\n    ):\n        api_client = request.getfixturevalue(client_fixture)\n        role = client_fixture.replace('_client', '')\n        current_date = datetime.now().strftime('%Y.%m.%d_%H:%M:%S')\n        title = f'{current_date} Project Doc'\n    \n        allure.dynamic.title(f'Создание Project-документа для роли {role}')\n    \n        with allure.step(f'{role} создаёт Project-документ, {expected_status}'):\n            resp = api_client.post(\n                **create_document_endpoint(kind='Project', kind_id=main_project, space_id=main_space, title=title)\n            )\n            assert resp.status_code == expected_status\n        with allure.step('Созданный Project-документ содержит title'):\n            if expected_status == 200:\n                assert resp.json()['payload']['document']['title'] == title\n                doc_id = resp.json()['payload']['document']['_id']\n        with allure.step(f'Архивация Project-документа, {expected_status}'):\n>                   archive_resp = api_client.post(**archive_document_endpoint(space_id=main_space, document_id=doc_id))\nE                   UnboundLocalError: cannot access local variable 'doc_id' where it is not associated with a value\n\ntests/test_backend/document/access_doc/test_create_doc_access_by_roles.py:72: UnboundLocalError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1752065457608,"stop":1752065457608,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1752065457608,"stop":1752065457608,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1752065457608,"stop":1752065457608,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1752065457608,"stop":1752065457608,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1752065480901,"stop":1752065481408,"duration":507},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1752065481408,"stop":1752065481675,"duration":267},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"guest_client","time":{"start":1752065484857,"stop":1752065485335,"duration":478},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_project","time":{"start":1752065486284,"stop":1752065486493,"duration":209},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"UnboundLocalError: cannot access local variable 'doc_id' where it is not associated with a value","statusTrace":"request = <FixtureRequest for <Function test_create_and_archive_project_doc_access_by_roles[guest]>>\nmain_project = '686672af85fb8d104544e798'\nmain_space = '6866309d85fb8d104544a61e', client_fixture = 'guest_client'\nexpected_status = 403\n\n    @pytest.mark.parametrize(\n        'client_fixture, expected_status',\n        [\n            ('owner_client', 200),\n            ('manager_client', 200),\n            ('member_client', 200),\n            ('guest_client', 403),\n        ],\n        ids=['owner', 'manager', 'member', 'guest'],\n    )\n    def test_create_and_archive_project_doc_access_by_roles(\n        request, main_project, main_space, client_fixture, expected_status\n    ):\n        api_client = request.getfixturevalue(client_fixture)\n        role = client_fixture.replace('_client', '')\n        current_date = datetime.now().strftime('%Y.%m.%d_%H:%M:%S')\n        title = f'{current_date} Project Doc'\n    \n        allure.dynamic.title(f'Создание Project-документа для роли {role}')\n    \n        with allure.step(f'{role} создаёт Project-документ, {expected_status}'):\n            resp = api_client.post(\n                **create_document_endpoint(kind='Project', kind_id=main_project, space_id=main_space, title=title)\n            )\n            assert resp.status_code == expected_status\n        with allure.step('Созданный Project-документ содержит title'):\n            if expected_status == 200:\n                assert resp.json()['payload']['document']['title'] == title\n                doc_id = resp.json()['payload']['document']['_id']\n        with allure.step(f'Архивация Project-документа, {expected_status}'):\n>                   archive_resp = api_client.post(**archive_document_endpoint(space_id=main_space, document_id=doc_id))\nE                   UnboundLocalError: cannot access local variable 'doc_id' where it is not associated with a value\n\ntests/test_backend/document/access_doc/test_create_doc_access_by_roles.py:72: UnboundLocalError","steps":[{"name":"guest создаёт Project-документ, 403","time":{"start":1752065496610,"stop":1752065496869,"duration":259},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Созданный Project-документ содержит title","time":{"start":1752065496869,"stop":1752065496869,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Архивация Project-документа, 403","time":{"start":1752065496869,"stop":1752065496869,"duration":0},"status":"broken","statusMessage":"UnboundLocalError: cannot access local variable 'doc_id' where it is not associated with a value\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/document/access_doc/test_create_doc_access_by_roles.py\", line 72, in test_create_and_archive_project_doc_access_by_roles\n    archive_resp = api_client.post(**archive_document_endpoint(space_id=main_space, document_id=doc_id))\n                                                                                                ^^^^^^\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document.access_doc"},{"name":"suite","value":"test_create_doc_access_by_roles"},{"name":"host","value":"pkrvmfkh1xnbeme"},{"name":"thread","value":"2520-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.access_doc.test_create_doc_access_by_roles"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"client_fixture","value":"'guest_client'"},{"name":"expected_status","value":"403"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":4,"unknown":0,"total":5},"items":[{"uid":"8ac947f9c479d618","reportUrl":"https://vaizcom.github.io/autotests/269//#testresult/8ac947f9c479d618","status":"passed","time":{"start":1752064711413,"stop":1752064711738,"duration":325}},{"uid":"b8b9bf0a13dddd6b","reportUrl":"https://vaizcom.github.io/autotests/268//#testresult/b8b9bf0a13dddd6b","status":"passed","time":{"start":1752062496848,"stop":1752062497234,"duration":386}},{"uid":"c449f7fe906d09e","reportUrl":"https://vaizcom.github.io/autotests/267//#testresult/c449f7fe906d09e","status":"passed","time":{"start":1752060636470,"stop":1752060636757,"duration":287}},{"uid":"36559306150f1a9b","reportUrl":"https://vaizcom.github.io/autotests/266//#testresult/36559306150f1a9b","status":"passed","time":{"start":1752059607493,"stop":1752059607760,"duration":267}}]},"tags":["backend"]},"source":"9c83a36fe63fbd89.json","parameterValues":["'guest_client'","403"]}