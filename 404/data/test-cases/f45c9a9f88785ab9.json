{"uid":"f45c9a9f88785ab9","name":"test_root_level_siblings[member]","fullName":"tests.test_backend.document.test_get_siblings#test_root_level_siblings","historyId":"b68937ad0166ec33b7712925612c0860","time":{"start":1761912191906,"stop":1761912191906,"duration":0},"description":"\n    Проверяем сиблинги для нескольких корневых документов (без parent_document_id).\n    ","descriptionHtml":"<pre><code>Проверяем сиблинги для нескольких корневых документов (без parent_document_id).\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @pytest.fixture(scope='function')\n    def space_id_function(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:228: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"space_id_function","time":{"start":1761912191907,"stop":1761912192034,"duration":127},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 228, in space_id_function\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"feature","value":"Document Siblings"},{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_siblings"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_siblings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"kind","value":"'Member'"},{"name":"kind_id_fixture","value":"'member_id_function'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":54},"items":[{"uid":"6550fa7c965788fe","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/6550fa7c965788fe","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911305033,"stop":1761911305033,"duration":0}},{"uid":"bc0dba95a4f05f3a","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/bc0dba95a4f05f3a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910915640,"stop":1761910915640,"duration":0}},{"uid":"f81255c5cb48bfb8","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/f81255c5cb48bfb8","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910616669,"stop":1761910616669,"duration":0}},{"uid":"519e2af67406c7d9","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/519e2af67406c7d9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910010003,"stop":1761910010003,"duration":0}},{"uid":"8915167c4a490d15","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/8915167c4a490d15","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900041096,"stop":1761900041096,"duration":0}},{"uid":"313e591e2d20a1f5","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/313e591e2d20a1f5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835061079,"stop":1761835061079,"duration":0}},{"uid":"bccf6b2ecc876bf6","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/bccf6b2ecc876bf6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834646462,"stop":1761834646462,"duration":0}},{"uid":"717e7f4e319e9a99","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/717e7f4e319e9a99","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833482784,"stop":1761833482784,"duration":0}},{"uid":"b2b05bfa543ecaaa","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/b2b05bfa543ecaaa","status":"passed","time":{"start":1761821784409,"stop":1761821786876,"duration":2467}},{"uid":"ceeb3f2c0d6e2715","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/ceeb3f2c0d6e2715","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818770902,"stop":1761818770902,"duration":0}},{"uid":"f92698d17c4d7e46","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/f92698d17c4d7e46","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748634035,"stop":1761748634035,"duration":0}},{"uid":"7619136dd7e9709","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/7619136dd7e9709","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747910513,"stop":1761747910513,"duration":0}},{"uid":"67afd58e5f906a45","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/67afd58e5f906a45","status":"passed","time":{"start":1761746980195,"stop":1761746982458,"duration":2263}},{"uid":"f5b6d67b097923b0","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/f5b6d67b097923b0","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745742193,"stop":1761745742193,"duration":0}},{"uid":"2436dafa2ff61e2d","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/2436dafa2ff61e2d","status":"passed","time":{"start":1761576807227,"stop":1761576809073,"duration":1846}},{"uid":"83d0a3e7d9a18c11","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/83d0a3e7d9a18c11","status":"passed","time":{"start":1761557438207,"stop":1761557440252,"duration":2045}},{"uid":"da05a1a5a37706eb","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/da05a1a5a37706eb","status":"passed","time":{"start":1761308658352,"stop":1761308660015,"duration":1663}},{"uid":"f8ed1d88d6b579f7","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/f8ed1d88d6b579f7","status":"passed","time":{"start":1761306822033,"stop":1761306823728,"duration":1695}},{"uid":"5eca7d7d1381207a","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/5eca7d7d1381207a","status":"passed","time":{"start":1761137119783,"stop":1761137121681,"duration":1898}},{"uid":"70f00cb1c71324da","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/70f00cb1c71324da","status":"passed","time":{"start":1761135808479,"stop":1761135810675,"duration":2196}}]},"tags":["backend"]},"source":"f45c9a9f88785ab9.json","parameterValues":["'Member'","'member_id_function'"]}