{"uid":"8332b4e43e4162c7","name":"test_edit_document_invalid_id[not_found]","fullName":"tests.test_backend.document.test_edit_document#test_edit_document_invalid_id","historyId":"90509acdac6b5bc83227a75b044824a1","time":{"start":1761900038736,"stop":1761900038736,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f2708f7bf10>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761899890641,"stop":1761899890641,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761899890642,"stop":1761899890642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761899890642,"stop":1761899890642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761899890642,"stop":1761899891240,"duration":598},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761899890642,"stop":1761899890642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761899900632,"stop":1761899900818,"duration":186},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_edit_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2554-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_edit_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"400"},{"name":"fake_id","value":"'000000000000000000000000'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":49},"items":[{"uid":"d91d368df46690da","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/d91d368df46690da","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835059294,"stop":1761835059294,"duration":0}},{"uid":"628dcd9f23752656","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/628dcd9f23752656","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834643898,"stop":1761834643898,"duration":0}},{"uid":"86339f1fb9335642","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/86339f1fb9335642","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833480104,"stop":1761833480104,"duration":0}},{"uid":"72a680a0ca547d90","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/72a680a0ca547d90","status":"passed","time":{"start":1761821734583,"stop":1761821734756,"duration":173}},{"uid":"a11911c17ca85c83","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/a11911c17ca85c83","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818768433,"stop":1761818768433,"duration":0}},{"uid":"c82caeb857d9c9d5","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/c82caeb857d9c9d5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748632235,"stop":1761748632235,"duration":0}},{"uid":"9ad1fcb1e708060f","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/9ad1fcb1e708060f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747908122,"stop":1761747908122,"duration":0}},{"uid":"74f62c5af275caf3","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/74f62c5af275caf3","status":"passed","time":{"start":1761746905537,"stop":1761746905833,"duration":296}},{"uid":"5d84972630ab3d28","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/5d84972630ab3d28","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745740323,"stop":1761745740323,"duration":0}},{"uid":"45760dd38c62f96e","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/45760dd38c62f96e","status":"passed","time":{"start":1761576740658,"stop":1761576740896,"duration":238}},{"uid":"c3d9875fffed82bd","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/c3d9875fffed82bd","status":"passed","time":{"start":1761557383503,"stop":1761557383686,"duration":183}},{"uid":"63dd8ae32dd15cb9","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/63dd8ae32dd15cb9","status":"passed","time":{"start":1761308606257,"stop":1761308606453,"duration":196}},{"uid":"ccee5e0d61937dbf","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/ccee5e0d61937dbf","status":"passed","time":{"start":1761306769101,"stop":1761306769310,"duration":209}},{"uid":"20531b1faf10cf61","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/20531b1faf10cf61","status":"passed","time":{"start":1761137062471,"stop":1761137062682,"duration":211}},{"uid":"868b3a967627cb70","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/868b3a967627cb70","status":"passed","time":{"start":1761135744309,"stop":1761135744564,"duration":255}},{"uid":"1b24dece47540dd1","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/1b24dece47540dd1","status":"passed","time":{"start":1761134167910,"stop":1761134168113,"duration":203}},{"uid":"641a9973d01e4a53","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/641a9973d01e4a53","status":"passed","time":{"start":1761128535559,"stop":1761128535831,"duration":272}},{"uid":"2093d807cd37c50a","reportUrl":"https://vaizcom.github.io/autotests/383//#testresult/2093d807cd37c50a","status":"passed","time":{"start":1761124644333,"stop":1761124644594,"duration":261}},{"uid":"6cbcce9551ee427d","reportUrl":"https://vaizcom.github.io/autotests/382//#testresult/6cbcce9551ee427d","status":"passed","time":{"start":1761119457177,"stop":1761119457371,"duration":194}},{"uid":"3e3288c0c292e2fc","reportUrl":"https://vaizcom.github.io/autotests/381//#testresult/3e3288c0c292e2fc","status":"passed","time":{"start":1761053473507,"stop":1761053473716,"duration":209}}]},"tags":["backend"]},"source":"8332b4e43e4162c7.json","parameterValues":["400","'000000000000000000000000'"]}