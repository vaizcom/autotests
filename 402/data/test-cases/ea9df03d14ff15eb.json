{"uid":"ea9df03d14ff15eb","name":"Тест: Проверка архивации проекта","fullName":"tests.test_backend.project.test_project#test_archive_project","historyId":"e590b902bb04a2241c8a3ba5ffb8b269","time":{"start":1761910917835,"stop":1761910917835,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f1c6962ef90>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910792963,"stop":1761910793391,"duration":428},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761910801404,"stop":1761910801539,"duration":135},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.project"},{"name":"suite","value":"test_project"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2545-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.project.test_project"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":52},"items":[{"uid":"6405fc3832403016","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/6405fc3832403016","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910619476,"stop":1761910619476,"duration":0}},{"uid":"dca9d376dfa273fb","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/dca9d376dfa273fb","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910012963,"stop":1761910012963,"duration":0}},{"uid":"6f51d941d113675","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/6f51d941d113675","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900044050,"stop":1761900044050,"duration":0}},{"uid":"f8536ef778c96048","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/f8536ef778c96048","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835063189,"stop":1761835063189,"duration":0}},{"uid":"831b29d2fefc5f85","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/831b29d2fefc5f85","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834650024,"stop":1761834650024,"duration":0}},{"uid":"2caf3d7507bb635","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/2caf3d7507bb635","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833485914,"stop":1761833485914,"duration":0}},{"uid":"c707fc3e9dc10f1","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/c707fc3e9dc10f1","status":"passed","time":{"start":1761821826880,"stop":1761821827092,"duration":212}},{"uid":"e03b0a8594a7145c","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/e03b0a8594a7145c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818773810,"stop":1761818773810,"duration":0}},{"uid":"3074ebd7f68e6424","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/3074ebd7f68e6424","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748636932,"stop":1761748636932,"duration":0}},{"uid":"710641efdce79d4f","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/710641efdce79d4f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747914041,"stop":1761747914041,"duration":0}},{"uid":"6c014ec8c1dde256","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/6c014ec8c1dde256","status":"passed","time":{"start":1761747038121,"stop":1761747038467,"duration":346}},{"uid":"2ac0b61fe0b7538","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/2ac0b61fe0b7538","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745744352,"stop":1761745744352,"duration":0}},{"uid":"58125e53d773b5b7","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/58125e53d773b5b7","status":"passed","time":{"start":1761576858850,"stop":1761576859090,"duration":240}},{"uid":"95c975770b199468","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/95c975770b199468","status":"passed","time":{"start":1761557478523,"stop":1761557478723,"duration":200}},{"uid":"b1ad43479f85414c","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/b1ad43479f85414c","status":"passed","time":{"start":1761308695666,"stop":1761308695869,"duration":203}},{"uid":"4351f57e04536caf","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/4351f57e04536caf","status":"passed","time":{"start":1761306863210,"stop":1761306863427,"duration":217}},{"uid":"fc383ed6b09c6e46","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/fc383ed6b09c6e46","status":"passed","time":{"start":1761137162346,"stop":1761137162572,"duration":226}},{"uid":"85378f3d266f2b8a","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/85378f3d266f2b8a","status":"passed","time":{"start":1761135861051,"stop":1761135861318,"duration":267}},{"uid":"74e44e3e88d63ce5","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/74e44e3e88d63ce5","status":"passed","time":{"start":1761134269001,"stop":1761134269227,"duration":226}},{"uid":"e44b86ef2b2a3ad3","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/e44b86ef2b2a3ad3","status":"passed","time":{"start":1761128660115,"stop":1761128660388,"duration":273}}]},"tags":["backend"]},"source":"ea9df03d14ff15eb.json","parameterValues":[]}