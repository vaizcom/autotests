{"uid":"88a847777569441d","name":"test_get_ydocument_foreign_space[member]","fullName":"tests.test_backend.document.test_get_y_document#test_get_ydocument_foreign_space","historyId":"f38a423e2185776d9a9ac770e50beb03","time":{"start":1761910619395,"stop":1761910619395,"duration":0},"description":" ","descriptionHtml":"","status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fce4b119550>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910495818,"stop":1761910495819,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910495819,"stop":1761910496047,"duration":228},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"guest_client","time":{"start":1761910501824,"stop":1761910502079,"duration":255},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761910503762,"stop":1761910503877,"duration":115},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_y_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_y_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"kind","value":"'Member'"},{"name":"kind_id_fixture","value":"'temp_member'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":51},"items":[{"uid":"bff4be1dbfbebac4","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/bff4be1dbfbebac4","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910012878,"stop":1761910012878,"duration":0}},{"uid":"786caa24cb89353a","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/786caa24cb89353a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900043970,"stop":1761900043970,"duration":0}},{"uid":"82719e5414b56aab","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/82719e5414b56aab","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835063108,"stop":1761835063108,"duration":0}},{"uid":"2e31959610d30460","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/2e31959610d30460","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834649914,"stop":1761834649914,"duration":0}},{"uid":"a7d1d3f6ee7a51e5","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/a7d1d3f6ee7a51e5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833485844,"stop":1761833485844,"duration":0}},{"uid":"bcb11d4648e077f9","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/bcb11d4648e077f9","status":"passed","time":{"start":1761821823598,"stop":1761821824010,"duration":412}},{"uid":"867e27247d8ca69d","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/867e27247d8ca69d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818773731,"stop":1761818773731,"duration":0}},{"uid":"785d25aa0a3fd670","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/785d25aa0a3fd670","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748636835,"stop":1761748636835,"duration":0}},{"uid":"1eed8cb2652908aa","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/1eed8cb2652908aa","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747913946,"stop":1761747913946,"duration":0}},{"uid":"d8bef30cb805b751","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/d8bef30cb805b751","status":"passed","time":{"start":1761747033120,"stop":1761747033639,"duration":519}},{"uid":"a53ceb121eee8663","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/a53ceb121eee8663","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745744255,"stop":1761745744255,"duration":0}},{"uid":"a6fb9153808894c6","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/a6fb9153808894c6","status":"passed","time":{"start":1761576854949,"stop":1761576855369,"duration":420}},{"uid":"e29c0064a0328ab7","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/e29c0064a0328ab7","status":"passed","time":{"start":1761557475022,"stop":1761557475398,"duration":376}},{"uid":"8e4daf1ba52dd179","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/8e4daf1ba52dd179","status":"passed","time":{"start":1761308692393,"stop":1761308692772,"duration":379}},{"uid":"62e3d2969e1b2144","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/62e3d2969e1b2144","status":"passed","time":{"start":1761306859825,"stop":1761306860207,"duration":382}},{"uid":"a199ec5f2cb4d585","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/a199ec5f2cb4d585","status":"passed","time":{"start":1761137158053,"stop":1761137158448,"duration":395}},{"uid":"30dd20774d815dc3","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/30dd20774d815dc3","status":"passed","time":{"start":1761135856658,"stop":1761135857403,"duration":745}},{"uid":"c9d0154ca3b873a3","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/c9d0154ca3b873a3","status":"passed","time":{"start":1761134265612,"stop":1761134265993,"duration":381}},{"uid":"e870a9d2043eeeb8","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/e870a9d2043eeeb8","status":"passed","time":{"start":1761128655828,"stop":1761128656320,"duration":492}},{"uid":"edd2ab8fa7acd824","reportUrl":"https://vaizcom.github.io/autotests/383//#testresult/edd2ab8fa7acd824","status":"passed","time":{"start":1761124750622,"stop":1761124751140,"duration":518}}]},"tags":["backend"]},"source":"88a847777569441d.json","parameterValues":["'Member'","'temp_member'"]}