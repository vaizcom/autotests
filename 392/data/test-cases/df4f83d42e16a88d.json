{"uid":"df4f83d42e16a88d","name":"Проверка доступа owner_client к документам пространства, проекта и персональному документу","fullName":"tests.test_backend.document.access_doc.test_matrix_access_docs#test_owner_client_document_access","historyId":"2f7f1f3840e05e27e392e5adc272584b","time":{"start":1761745737501,"stop":1761745737625,"duration":124},"description":"\n    Проверяем, что owner_client имеет доступ к main_space_doc и main_project_doc,\n    но не имеет доступа к main_personal_doc.\n    ","descriptionHtml":"<pre><code>Проверяем, что owner_client имеет доступ к main_space_doc и main_project_doc,\nно не имеет доступа к main_personal_doc.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Доступ к MAIN_SPACE_DOC_ID должен быть разрешён\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fd40394d290>\nmain_space = '6866309d85fb8d104544a61e'\nmain_space_doc = '68a5b3f4a136528e28f58d65'\nmain_project_doc = '68a81156e503a7ab645236c1'\nmain_personal_doc = '68a5b40ba136528e28f58dba'\n\n    @allure.title('Проверка доступа owner_client к документам пространства, проекта и персональному документу')\n    def test_owner_client_document_access(owner_client, main_space, main_space_doc, main_project_doc, main_personal_doc):\n        \"\"\"\n        Проверяем, что owner_client имеет доступ к main_space_doc и main_project_doc,\n        но не имеет доступа к main_personal_doc.\n        \"\"\"\n        with allure.step('Проверка доступа owner_client к основному документу MAIN_SPACE_DOC_ID'):\n            response_space = owner_client.post(**get_document_endpoint(document_id=main_space_doc, space_id=main_space))\n>           assert response_space.status_code == 200, 'Доступ к MAIN_SPACE_DOC_ID должен быть разрешён'\nE           AssertionError: Доступ к MAIN_SPACE_DOC_ID должен быть разрешён\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\ntests/test_backend/document/access_doc/test_matrix_access_docs.py:86: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761745626380,"stop":1761745626380,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761745626380,"stop":1761745626380,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761745626380,"stop":1761745626380,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761745626380,"stop":1761745626380,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761745626380,"stop":1761745626628,"duration":248},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1761745631754,"stop":1761745632203,"duration":449},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1761745632203,"stop":1761745632603,"duration":400},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_personal_doc","time":{"start":1761745736044,"stop":1761745736044,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_project_doc","time":{"start":1761745736044,"stop":1761745736044,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space_doc","time":{"start":1761745736044,"stop":1761745736044,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Проверяем, что owner_client имеет доступ к main_space_doc и main_project_doc,\n    но не имеет доступа к main_personal_doc.\n    ","status":"failed","statusMessage":"AssertionError: Доступ к MAIN_SPACE_DOC_ID должен быть разрешён\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fd40394d290>\nmain_space = '6866309d85fb8d104544a61e'\nmain_space_doc = '68a5b3f4a136528e28f58d65'\nmain_project_doc = '68a81156e503a7ab645236c1'\nmain_personal_doc = '68a5b40ba136528e28f58dba'\n\n    @allure.title('Проверка доступа owner_client к документам пространства, проекта и персональному документу')\n    def test_owner_client_document_access(owner_client, main_space, main_space_doc, main_project_doc, main_personal_doc):\n        \"\"\"\n        Проверяем, что owner_client имеет доступ к main_space_doc и main_project_doc,\n        но не имеет доступа к main_personal_doc.\n        \"\"\"\n        with allure.step('Проверка доступа owner_client к основному документу MAIN_SPACE_DOC_ID'):\n            response_space = owner_client.post(**get_document_endpoint(document_id=main_space_doc, space_id=main_space))\n>           assert response_space.status_code == 200, 'Доступ к MAIN_SPACE_DOC_ID должен быть разрешён'\nE           AssertionError: Доступ к MAIN_SPACE_DOC_ID должен быть разрешён\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\ntests/test_backend/document/access_doc/test_matrix_access_docs.py:86: AssertionError","steps":[{"name":"Проверка доступа owner_client к основному документу MAIN_SPACE_DOC_ID","time":{"start":1761745737501,"stop":1761745737625,"duration":124},"status":"failed","statusMessage":"AssertionError: Доступ к MAIN_SPACE_DOC_ID должен быть разрешён\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/document/access_doc/test_matrix_access_docs.py\", line 86, in test_owner_client_document_access\n    assert response_space.status_code == 200, 'Доступ к MAIN_SPACE_DOC_ID должен быть разрешён'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document.access_doc"},{"name":"suite","value":"test_matrix_access_docs"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2534-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.access_doc.test_matrix_access_docs"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":38,"unknown":0,"total":40},"items":[{"uid":"75f01e86cee66eec","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/75f01e86cee66eec","status":"passed","time":{"start":1761576710748,"stop":1761576711472,"duration":724}},{"uid":"dc5a53ed35b54f9f","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/dc5a53ed35b54f9f","status":"passed","time":{"start":1761557361436,"stop":1761557362008,"duration":572}},{"uid":"77a1469eaacb1fb9","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/77a1469eaacb1fb9","status":"passed","time":{"start":1761308585525,"stop":1761308586125,"duration":600}},{"uid":"9df68d1967802c32","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/9df68d1967802c32","status":"passed","time":{"start":1761306746975,"stop":1761306747593,"duration":618}},{"uid":"e6799672159f4d25","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/e6799672159f4d25","status":"passed","time":{"start":1761137039747,"stop":1761137040551,"duration":804}},{"uid":"b482452859738d92","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/b482452859738d92","status":"passed","time":{"start":1761135716795,"stop":1761135717581,"duration":786}},{"uid":"322949af541666f3","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/322949af541666f3","status":"passed","time":{"start":1761134144546,"stop":1761134145155,"duration":609}},{"uid":"40a703b110e644bc","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/40a703b110e644bc","status":"passed","time":{"start":1761128505086,"stop":1761128505906,"duration":820}},{"uid":"6a8683fed762227b","reportUrl":"https://vaizcom.github.io/autotests/383//#testresult/6a8683fed762227b","status":"passed","time":{"start":1761124617246,"stop":1761124618352,"duration":1106}},{"uid":"2d9778de0c6ac71d","reportUrl":"https://vaizcom.github.io/autotests/382//#testresult/2d9778de0c6ac71d","status":"passed","time":{"start":1761119430325,"stop":1761119431048,"duration":723}},{"uid":"92b5c5c0d22ed76","reportUrl":"https://vaizcom.github.io/autotests/381//#testresult/92b5c5c0d22ed76","status":"passed","time":{"start":1761053451144,"stop":1761053451752,"duration":608}},{"uid":"791d86605b42c663","reportUrl":"https://vaizcom.github.io/autotests/380//#testresult/791d86605b42c663","status":"passed","time":{"start":1761047353831,"stop":1761047354489,"duration":658}},{"uid":"707a0dfbc965e61f","reportUrl":"https://vaizcom.github.io/autotests/379//#testresult/707a0dfbc965e61f","status":"passed","time":{"start":1760614774262,"stop":1760614774995,"duration":733}},{"uid":"ec1d62d2736b1708","reportUrl":"https://vaizcom.github.io/autotests/378//#testresult/ec1d62d2736b1708","status":"passed","time":{"start":1760599581365,"stop":1760599582046,"duration":681}},{"uid":"a73f8ceb9823bc52","reportUrl":"https://vaizcom.github.io/autotests/377//#testresult/a73f8ceb9823bc52","status":"passed","time":{"start":1760535591962,"stop":1760535592569,"duration":607}},{"uid":"17826a207da94e58","reportUrl":"https://vaizcom.github.io/autotests/376//#testresult/17826a207da94e58","status":"passed","time":{"start":1760534093861,"stop":1760534094676,"duration":815}},{"uid":"11228adcb003257a","reportUrl":"https://vaizcom.github.io/autotests/375//#testresult/11228adcb003257a","status":"passed","time":{"start":1760532631408,"stop":1760532632083,"duration":675}},{"uid":"fb73de6c86a941f1","reportUrl":"https://vaizcom.github.io/autotests/374//#testresult/fb73de6c86a941f1","status":"passed","time":{"start":1760529444360,"stop":1760529445016,"duration":656}},{"uid":"adc789e3ee33da44","reportUrl":"https://vaizcom.github.io/autotests/373//#testresult/adc789e3ee33da44","status":"passed","time":{"start":1760510846047,"stop":1760510846786,"duration":739}},{"uid":"606cd54a0732edb","reportUrl":"https://vaizcom.github.io/autotests/372//#testresult/606cd54a0732edb","status":"passed","time":{"start":1760449325670,"stop":1760449326200,"duration":530}}]},"tags":["backend"]},"source":"df4f83d42e16a88d.json","parameterValues":[]}