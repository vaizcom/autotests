{"uid":"b2677cf12c1b65f8","name":"test_invalid_document_id[empty]","fullName":"tests.test_backend.document.test_get_siblings#test_invalid_document_id","historyId":"7e37a500adeef916dbbf917cbf8dcbd9","time":{"start":1761910916839,"stop":1761910916839,"duration":0},"description":"\n    Негативные сценарии: разные варианты некорректного document_id.\n    ","descriptionHtml":"<pre><code>Негативные сценарии: разные варианты некорректного document_id.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f1c6962ef90>\n\n    @pytest.fixture(scope='function')\n    def space_id_function(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:228: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910792963,"stop":1761910793391,"duration":428},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"space_id_function","time":{"start":1761910916839,"stop":1761910916956,"duration":117},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 228, in space_id_function\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_siblings"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2545-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_siblings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"400"},{"name":"fake_id","value":"''"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":52},"items":[{"uid":"c3373a32ebc42b3d","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/c3373a32ebc42b3d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910617740,"stop":1761910617740,"duration":0}},{"uid":"fdd05337b09a5454","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/fdd05337b09a5454","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910011513,"stop":1761910011513,"duration":0}},{"uid":"cc0ad47ab31e5cb0","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/cc0ad47ab31e5cb0","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900042607,"stop":1761900042607,"duration":0}},{"uid":"6d5c254fed6a8cab","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/6d5c254fed6a8cab","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835062141,"stop":1761835062141,"duration":0}},{"uid":"d76372750dfb755e","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/d76372750dfb755e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834648475,"stop":1761834648475,"duration":0}},{"uid":"2159afce18129883","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/2159afce18129883","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833484402,"stop":1761833484402,"duration":0}},{"uid":"597b25ae2438c12c","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/597b25ae2438c12c","status":"passed","time":{"start":1761821809102,"stop":1761821809446,"duration":344}},{"uid":"e9d647edf8c6b306","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/e9d647edf8c6b306","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818772384,"stop":1761818772384,"duration":0}},{"uid":"baed6a5eaa17c32a","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/baed6a5eaa17c32a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748635192,"stop":1761748635192,"duration":0}},{"uid":"47f356e189ffb2ac","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/47f356e189ffb2ac","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747912533,"stop":1761747912533,"duration":0}},{"uid":"d5b118eb9048032","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/d5b118eb9048032","status":"passed","time":{"start":1761747012831,"stop":1761747013213,"duration":382}},{"uid":"86c22a4bff8b3e19","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/86c22a4bff8b3e19","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745743282,"stop":1761745743282,"duration":0}},{"uid":"b2b29ea9f8f3786f","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/b2b29ea9f8f3786f","status":"passed","time":{"start":1761576835869,"stop":1761576836274,"duration":405}},{"uid":"6960283e8fc3c49a","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/6960283e8fc3c49a","status":"passed","time":{"start":1761557460903,"stop":1761557461251,"duration":348}},{"uid":"9043f4258c6202","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/9043f4258c6202","status":"passed","time":{"start":1761308679812,"stop":1761308680153,"duration":341}},{"uid":"1c27e3c6551e032e","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/1c27e3c6551e032e","status":"passed","time":{"start":1761306846547,"stop":1761306846929,"duration":382}},{"uid":"210370b969285b04","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/210370b969285b04","status":"passed","time":{"start":1761137143645,"stop":1761137144060,"duration":415}},{"uid":"cc5a211346932e2","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/cc5a211346932e2","status":"passed","time":{"start":1761135837438,"stop":1761135838277,"duration":839}},{"uid":"7ef1cc69215360ac","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/7ef1cc69215360ac","status":"passed","time":{"start":1761134249340,"stop":1761134249716,"duration":376}},{"uid":"32eddfcbcf3fc46b","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/32eddfcbcf3fc46b","status":"passed","time":{"start":1761128636762,"stop":1761128637149,"duration":387}}]},"tags":["backend"]},"source":"b2677cf12c1b65f8.json","parameterValues":["400","''"]}