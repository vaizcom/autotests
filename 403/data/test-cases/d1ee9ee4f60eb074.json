{"uid":"d1ee9ee4f60eb074","name":"test_create_and_duplicate_document[member]","fullName":"tests.test_backend.document.test_duplicate_document#test_create_and_duplicate_document","historyId":"2d60736ce96f8be1d36c89dc77d89143","time":{"start":1761911301179,"stop":1761911301179,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fbc912cb790>\nrequest = <SubRequest 'temp_document' for <Function test_create_and_duplicate_document[member]>>\nkind = 'Member', kind_id_fixture = 'temp_member'\n\n    @pytest.fixture\n    def temp_document(owner_client, request, kind, kind_id_fixture):\n>       kind_id = request.getfixturevalue(kind_id_fixture)\n\ntests/conftest.py:261: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nowner_client = <tests.core.client.APIClient object at 0x7fbc912cb790>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761911162887,"stop":1761911162887,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761911162888,"stop":1761911163517,"duration":629},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_document","time":{"start":1761911301180,"stop":1761911301180,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 261, in temp_document\n    kind_id = request.getfixturevalue(kind_id_fixture)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 532, in getfixturevalue\n    fixturedef = self._get_active_fixturedef(argname)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 617, in _get_active_fixturedef\n    fixturedef.execute(request=subrequest)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1047, in execute\n    fixturedef = request._get_active_fixturedef(argname)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 617, in _get_active_fixturedef\n    fixturedef.execute(request=subrequest)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1071, in execute\n    raise exc.with_traceback(exc_tb)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_duplicate_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_duplicate_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"kind","value":"'Member'"},{"name":"kind_id_fixture","value":"'temp_member'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":53},"items":[{"uid":"ed9960daf2a24c26","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/ed9960daf2a24c26","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910912434,"stop":1761910912434,"duration":0}},{"uid":"d481c8b61a0fd41e","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/d481c8b61a0fd41e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910614237,"stop":1761910614237,"duration":0}},{"uid":"9b366d0f57d514f7","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/9b366d0f57d514f7","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910006695,"stop":1761910006695,"duration":0}},{"uid":"85a5751a669c0959","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/85a5751a669c0959","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900037740,"stop":1761900037740,"duration":0}},{"uid":"77d5f6dd2489e693","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/77d5f6dd2489e693","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835058565,"stop":1761835058565,"duration":0}},{"uid":"ad90c792ea049173","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/ad90c792ea049173","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834642829,"stop":1761834642829,"duration":0}},{"uid":"a874dae7a306a0aa","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/a874dae7a306a0aa","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833478895,"stop":1761833478895,"duration":0}},{"uid":"94df87d3330bebeb","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/94df87d3330bebeb","status":"passed","time":{"start":1761821724246,"stop":1761821724738,"duration":492}},{"uid":"e0ae0cc1aeb5cade","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/e0ae0cc1aeb5cade","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818767171,"stop":1761818767171,"duration":0}},{"uid":"c8f3e53c25ff52b3","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/c8f3e53c25ff52b3","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748631469,"stop":1761748631469,"duration":0}},{"uid":"231f1c7637dcb804","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/231f1c7637dcb804","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747907047,"stop":1761747907047,"duration":0}},{"uid":"f8fcc0d0299f1d24","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/f8fcc0d0299f1d24","status":"passed","time":{"start":1761746890879,"stop":1761746892299,"duration":1420}},{"uid":"6f1a02ae91d10197","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/6f1a02ae91d10197","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745739563,"stop":1761745739563,"duration":0}},{"uid":"723682e151519610","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/723682e151519610","status":"passed","time":{"start":1761576725896,"stop":1761576726539,"duration":643}},{"uid":"b077f2ee72e65f61","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/b077f2ee72e65f61","status":"passed","time":{"start":1761557373237,"stop":1761557373712,"duration":475}},{"uid":"843ffe12f9958cd6","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/843ffe12f9958cd6","status":"passed","time":{"start":1761308597468,"stop":1761308597950,"duration":482}},{"uid":"f5bb522cfc2bee7e","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/f5bb522cfc2bee7e","status":"passed","time":{"start":1761306758863,"stop":1761306759419,"duration":556}},{"uid":"408a0ff0d6e49ff5","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/408a0ff0d6e49ff5","status":"passed","time":{"start":1761137051971,"stop":1761137052974,"duration":1003}},{"uid":"ba9c002b912d4090","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/ba9c002b912d4090","status":"passed","time":{"start":1761135731182,"stop":1761135731847,"duration":665}},{"uid":"6219d6658862b69c","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/6219d6658862b69c","status":"passed","time":{"start":1761134156084,"stop":1761134156605,"duration":521}}]},"tags":["backend"]},"source":"d1ee9ee4f60eb074.json","parameterValues":["'Member'","'temp_member'"]}