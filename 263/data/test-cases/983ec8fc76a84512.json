{"uid":"983ec8fc76a84512","name":"Создание документа с различными значениями title — ожидаемый статус 200","fullName":"tests.test_backend.document.test_create_document#test_document_title_validation","historyId":"1e5aa4a9c8a7b6c54868ea85bb9e62a7","time":{"start":1752047997914,"stop":1752047997914,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f60ac7d5290>\ntemp_space = '686e2144dc7db2861c816ae1'\n\n    @pytest.fixture(scope='session')\n    def temp_project(owner_client, temp_space):\n        \"\"\"Создаёт проект, который используется во всех тестах модуля.\"\"\"\n        name = generate_project_name()\n        slug = generate_slug()\n        common_kwargs = {'color': 'blue', 'icon': 'Dot', 'description': 'temporary project', 'space_id': temp_space}\n        response = owner_client.post(**create_project_endpoint(name=name, slug=slug, **common_kwargs))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:124: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1752047939816,"stop":1752047940592,"duration":776},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1752047940592,"stop":1752047941242,"duration":650},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_project","time":{"start":1752047941242,"stop":1752047941963,"duration":721},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 124, in temp_project\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[{"name":"temp_space::0","time":{"start":1752048136220,"stop":1752048136701,"duration":481},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_create_document"},{"name":"host","value":"pkrvmfkh1xnbeme"},{"name":"thread","value":"2510-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_create_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_actual_title","value":"'<script>alert(1)</script>'"},{"name":"expected_status","value":"200"},{"name":"title","value":"'<script>alert(1)</script>'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":88,"unknown":0,"total":89},"items":[{"uid":"44a13e4cbdb2bc8b","reportUrl":"https://vaizcom.github.io/autotests/262//#testresult/44a13e4cbdb2bc8b","status":"passed","time":{"start":1752046686697,"stop":1752046687091,"duration":394}},{"uid":"727f47438f544f0b","reportUrl":"https://vaizcom.github.io/autotests/261//#testresult/727f47438f544f0b","status":"passed","time":{"start":1752044689045,"stop":1752044689440,"duration":395}},{"uid":"c63b02953a7be603","reportUrl":"https://vaizcom.github.io/autotests/260//#testresult/c63b02953a7be603","status":"passed","time":{"start":1751982694779,"stop":1751982695135,"duration":356}},{"uid":"86b6ded85b15170a","reportUrl":"https://vaizcom.github.io/autotests/259//#testresult/86b6ded85b15170a","status":"passed","time":{"start":1751976165954,"stop":1751976166270,"duration":316}},{"uid":"b4985514891aa63a","reportUrl":"https://vaizcom.github.io/autotests/258//#testresult/b4985514891aa63a","status":"passed","time":{"start":1751975120654,"stop":1751975121009,"duration":355}},{"uid":"25115e5cf3381ba4","reportUrl":"https://vaizcom.github.io/autotests/257//#testresult/25115e5cf3381ba4","status":"passed","time":{"start":1751973409359,"stop":1751973409681,"duration":322}},{"uid":"4c2febb3988efdb2","reportUrl":"https://vaizcom.github.io/autotests/256//#testresult/4c2febb3988efdb2","status":"passed","time":{"start":1751971682214,"stop":1751971682561,"duration":347}},{"uid":"f7f8b3f2c8f790db","reportUrl":"https://vaizcom.github.io/autotests/255//#testresult/f7f8b3f2c8f790db","status":"passed","time":{"start":1751965088778,"stop":1751965089095,"duration":317}},{"uid":"64f9d6de44f901e2","reportUrl":"https://vaizcom.github.io/autotests/254//#testresult/64f9d6de44f901e2","status":"passed","time":{"start":1751959179142,"stop":1751959179491,"duration":349}},{"uid":"4aad913e4417a971","reportUrl":"https://vaizcom.github.io/autotests/253//#testresult/4aad913e4417a971","status":"passed","time":{"start":1751897298538,"stop":1751897298878,"duration":340}},{"uid":"f2934583cbbb00f9","reportUrl":"https://vaizcom.github.io/autotests/252//#testresult/f2934583cbbb00f9","status":"passed","time":{"start":1751893987325,"stop":1751893987673,"duration":348}},{"uid":"c7dfcd393f25a093","reportUrl":"https://vaizcom.github.io/autotests/251//#testresult/c7dfcd393f25a093","status":"passed","time":{"start":1751889671260,"stop":1751889671633,"duration":373}},{"uid":"98466d45ddda2a85","reportUrl":"https://vaizcom.github.io/autotests/250//#testresult/98466d45ddda2a85","status":"passed","time":{"start":1751888348770,"stop":1751888349149,"duration":379}},{"uid":"2cf41a05d841affc","reportUrl":"https://vaizcom.github.io/autotests/249//#testresult/2cf41a05d841affc","status":"passed","time":{"start":1751887744109,"stop":1751887744425,"duration":316}},{"uid":"26cf2d6e678f1e9d","reportUrl":"https://vaizcom.github.io/autotests/248//#testresult/26cf2d6e678f1e9d","status":"passed","time":{"start":1751884519072,"stop":1751884519450,"duration":378}},{"uid":"2e51e19cdadb5154","reportUrl":"https://vaizcom.github.io/autotests/247//#testresult/2e51e19cdadb5154","status":"passed","time":{"start":1751882759360,"stop":1751882759745,"duration":385}},{"uid":"8cf9ad65634750ab","reportUrl":"https://vaizcom.github.io/autotests/246//#testresult/8cf9ad65634750ab","status":"passed","time":{"start":1751534997577,"stop":1751534997962,"duration":385}},{"uid":"10868c8ac6acec9","reportUrl":"https://vaizcom.github.io/autotests/245//#testresult/10868c8ac6acec9","status":"passed","time":{"start":1751525396443,"stop":1751525396780,"duration":337}},{"uid":"fc109682fc15cfc9","reportUrl":"https://vaizcom.github.io/autotests/244//#testresult/fc109682fc15cfc9","status":"passed","time":{"start":1751463819138,"stop":1751463819444,"duration":306}},{"uid":"7f578f5e55319028","reportUrl":"https://vaizcom.github.io/autotests/243//#testresult/7f578f5e55319028","status":"passed","time":{"start":1751463531226,"stop":1751463531571,"duration":345}}]},"tags":["backend"]},"source":"983ec8fc76a84512.json","parameterValues":["'<script>alert(1)</script>'","200","'<script>alert(1)</script>'"]}