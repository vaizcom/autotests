{"uid":"5ba5aba58de57905","name":"Проверка доступа к siblings Space-документа: создатель - owner, просматривающий - manager","fullName":"tests.test_backend.document.access_doc.test_get_siblings_doc_access#test_get_project_and_space_siblings_docs_access_by_roles","historyId":"2a469d036bf155fbaa9a305eaa9b9bf6","time":{"start":1761818712765,"stop":1761818712949,"duration":184},"description":"\n    Проверяет доступ к siblings документов при разных комбинациях:\n    - Создателя документа\n    - Просматривающего пользователя\n    - Типа документа (Space/Project)\n\n    Проверки:\n        1. Создание трёх последовательных документов указанной ролью\n        2. Запрос siblings для среднего документа другой ролью\n        3. Проверка статуса ответа и корректности данных siblings\n    ","descriptionHtml":"<pre><code>Проверяет доступ к siblings документов при разных комбинациях:\n- Создателя документа\n- Просматривающего пользователя\n- Типа документа (Space/Project)\n\nПроверки:\n    1. Создание трёх последовательных документов указанной ролью\n    2. Запрос siblings для среднего документа другой ролью\n    3. Проверка статуса ответа и корректности данных siblings\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"request = <FixtureRequest for <Function test_get_project_and_space_siblings_docs_access_by_roles[space_doc-owner_docs_by_manager_403]>>\nmain_space = '6866309d85fb8d104544a61e', creator_fixture = 'owner_client'\nclient_fixture = 'manager_client', expected_status = 200, kind = 'Space'\ncontainer_fixture = 'main_space'\n\n    @pytest.mark.parametrize(\n        'creator_fixture, client_fixture, expected_status',\n        [\n            ('owner_client', 'owner_client', 200),\n            ('owner_client', 'manager_client', 200),\n            ('owner_client', 'member_client', 200),\n            ('owner_client', 'guest_client', 200),\n            ('manager_client', 'owner_client', 200),\n            ('manager_client', 'manager_client', 200),\n            ('manager_client', 'member_client', 200),\n            ('manager_client', 'guest_client', 200),\n            ('member_client', 'owner_client', 200),\n            ('member_client', 'manager_client', 200),\n            ('member_client', 'member_client', 200),\n            ('member_client', 'guest_client', 200),\n        ],\n        ids=[\n            'owner_self_docs_200',\n            'owner_docs_by_manager_403',\n            'owner_docs_by_member_403',\n            'owner_docs_by_guest_403',\n            'manager_docs_by_owner_403',\n            'manager_self_docs_200',\n            'manager_docs_by_member_403',\n            'manager_docs_by_guest_403',\n            'member_docs_by_owner_403',\n            'member_docs_by_manager_403',\n            'member_self_docs_200',\n            'member_docs_by_guest_403',\n        ],\n    )\n    @pytest.mark.parametrize(\n        'kind, container_fixture',\n        [\n            ('Space', 'main_space'),\n            ('Project', 'main_project'),\n        ],\n        ids=['space_doc', 'project_doc'],\n    )\n    def test_get_project_and_space_siblings_docs_access_by_roles(\n        request, main_space, creator_fixture, client_fixture, expected_status, kind, container_fixture\n    ):\n        \"\"\"\n        Проверяет доступ к siblings документов при разных комбинациях:\n        - Создателя документа\n        - Просматривающего пользователя\n        - Типа документа (Space/Project)\n    \n        Проверки:\n            1. Создание трёх последовательных документов указанной ролью\n            2. Запрос siblings для среднего документа другой ролью\n            3. Проверка статуса ответа и корректности данных siblings\n        \"\"\"\n        creator = request.getfixturevalue(creator_fixture)\n        viewer = request.getfixturevalue(client_fixture)\n        creator_role = creator_fixture.replace('_client', '')\n        viewer_role = client_fixture.replace('_client', '')\n        container_id = request.getfixturevalue(container_fixture)\n    \n        current_date = datetime.now().strftime('%d.%m_%H:%M:%S')\n    \n        allure.dynamic.title(\n            f'Проверка доступа к siblings {kind}-документа: создатель - {creator_role}, просматривающий - {viewer_role}'\n        )\n    \n        doc_ids = []\n        with allure.step(f'Создание трёх {kind}-документов пользователем {creator_role}'):\n            for index in range(3):\n                title = f'{current_date}_{creator_role}_{kind}_Doc_{index}'\n                create_resp = creator.post(\n                    **create_document_endpoint(kind=kind, kind_id=container_id, space_id=main_space, title=title)\n                )\n>               assert (\n                    create_resp.status_code == 200\n                ), f'Ошибка при создании документа {index}: статус {create_resp.status_code}'\nE               AssertionError: Ошибка при создании документа 0: статус 400\nE               assert 400 == 200\nE                +  where 400 = <Response [400]>.status_code\n\ntests/test_backend/document/access_doc/test_get_siblings_doc_access.py:86: AssertionError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761818618312,"stop":1761818618312,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761818618312,"stop":1761818618312,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761818618312,"stop":1761818618312,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761818618313,"stop":1761818618313,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761818618313,"stop":1761818618921,"duration":608},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1761818622457,"stop":1761818623066,"duration":609},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1761818623066,"stop":1761818623350,"duration":284},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"manager_client","time":{"start":1761818623809,"stop":1761818624098,"duration":289},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Проверяет доступ к siblings документов при разных комбинациях:\n    - Создателя документа\n    - Просматривающего пользователя\n    - Типа документа (Space/Project)\n\n    Проверки:\n        1. Создание трёх последовательных документов указанной ролью\n        2. Запрос siblings для среднего документа другой ролью\n        3. Проверка статуса ответа и корректности данных siblings\n    ","status":"failed","statusMessage":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"request = <FixtureRequest for <Function test_get_project_and_space_siblings_docs_access_by_roles[space_doc-owner_docs_by_manager_403]>>\nmain_space = '6866309d85fb8d104544a61e', creator_fixture = 'owner_client'\nclient_fixture = 'manager_client', expected_status = 200, kind = 'Space'\ncontainer_fixture = 'main_space'\n\n    @pytest.mark.parametrize(\n        'creator_fixture, client_fixture, expected_status',\n        [\n            ('owner_client', 'owner_client', 200),\n            ('owner_client', 'manager_client', 200),\n            ('owner_client', 'member_client', 200),\n            ('owner_client', 'guest_client', 200),\n            ('manager_client', 'owner_client', 200),\n            ('manager_client', 'manager_client', 200),\n            ('manager_client', 'member_client', 200),\n            ('manager_client', 'guest_client', 200),\n            ('member_client', 'owner_client', 200),\n            ('member_client', 'manager_client', 200),\n            ('member_client', 'member_client', 200),\n            ('member_client', 'guest_client', 200),\n        ],\n        ids=[\n            'owner_self_docs_200',\n            'owner_docs_by_manager_403',\n            'owner_docs_by_member_403',\n            'owner_docs_by_guest_403',\n            'manager_docs_by_owner_403',\n            'manager_self_docs_200',\n            'manager_docs_by_member_403',\n            'manager_docs_by_guest_403',\n            'member_docs_by_owner_403',\n            'member_docs_by_manager_403',\n            'member_self_docs_200',\n            'member_docs_by_guest_403',\n        ],\n    )\n    @pytest.mark.parametrize(\n        'kind, container_fixture',\n        [\n            ('Space', 'main_space'),\n            ('Project', 'main_project'),\n        ],\n        ids=['space_doc', 'project_doc'],\n    )\n    def test_get_project_and_space_siblings_docs_access_by_roles(\n        request, main_space, creator_fixture, client_fixture, expected_status, kind, container_fixture\n    ):\n        \"\"\"\n        Проверяет доступ к siblings документов при разных комбинациях:\n        - Создателя документа\n        - Просматривающего пользователя\n        - Типа документа (Space/Project)\n    \n        Проверки:\n            1. Создание трёх последовательных документов указанной ролью\n            2. Запрос siblings для среднего документа другой ролью\n            3. Проверка статуса ответа и корректности данных siblings\n        \"\"\"\n        creator = request.getfixturevalue(creator_fixture)\n        viewer = request.getfixturevalue(client_fixture)\n        creator_role = creator_fixture.replace('_client', '')\n        viewer_role = client_fixture.replace('_client', '')\n        container_id = request.getfixturevalue(container_fixture)\n    \n        current_date = datetime.now().strftime('%d.%m_%H:%M:%S')\n    \n        allure.dynamic.title(\n            f'Проверка доступа к siblings {kind}-документа: создатель - {creator_role}, просматривающий - {viewer_role}'\n        )\n    \n        doc_ids = []\n        with allure.step(f'Создание трёх {kind}-документов пользователем {creator_role}'):\n            for index in range(3):\n                title = f'{current_date}_{creator_role}_{kind}_Doc_{index}'\n                create_resp = creator.post(\n                    **create_document_endpoint(kind=kind, kind_id=container_id, space_id=main_space, title=title)\n                )\n>               assert (\n                    create_resp.status_code == 200\n                ), f'Ошибка при создании документа {index}: статус {create_resp.status_code}'\nE               AssertionError: Ошибка при создании документа 0: статус 400\nE               assert 400 == 200\nE                +  where 400 = <Response [400]>.status_code\n\ntests/test_backend/document/access_doc/test_get_siblings_doc_access.py:86: AssertionError","steps":[{"name":"Создание трёх Space-документов пользователем owner","time":{"start":1761818712765,"stop":1761818712949,"duration":184},"status":"failed","statusMessage":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/document/access_doc/test_get_siblings_doc_access.py\", line 86, in test_get_project_and_space_siblings_docs_access_by_roles\n    assert (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document.access_doc"},{"name":"suite","value":"test_get_siblings_doc_access"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2546-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.access_doc.test_get_siblings_doc_access"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"client_fixture","value":"'manager_client'"},{"name":"container_fixture","value":"'main_space'"},{"name":"creator_fixture","value":"'owner_client'"},{"name":"expected_status","value":"200"},{"name":"kind","value":"'Space'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":44},"items":[{"uid":"6f752d3d2e90b5ff","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/6f752d3d2e90b5ff","status":"failed","statusDetails":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748581050,"stop":1761748581169,"duration":119}},{"uid":"5972c1a0bbffbe4e","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/5972c1a0bbffbe4e","status":"failed","statusDetails":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747849863,"stop":1761747850038,"duration":175}},{"uid":"f1a6f2362cef6cd7","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/f1a6f2362cef6cd7","status":"passed","time":{"start":1761746783500,"stop":1761746785768,"duration":2268}},{"uid":"cb45769ed95a3307","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/cb45769ed95a3307","status":"failed","statusDetails":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745696746,"stop":1761745696861,"duration":115}},{"uid":"f2bb1840615cb69a","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/f2bb1840615cb69a","status":"passed","time":{"start":1761576634695,"stop":1761576636286,"duration":1591}},{"uid":"696e4dc3b7ae1c69","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/696e4dc3b7ae1c69","status":"passed","time":{"start":1761557289519,"stop":1761557291036,"duration":1517}},{"uid":"d74b9739d8e13af4","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/d74b9739d8e13af4","status":"passed","time":{"start":1761308513696,"stop":1761308515263,"duration":1567}},{"uid":"b43e1b1212daf055","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/b43e1b1212daf055","status":"passed","time":{"start":1761306667060,"stop":1761306668917,"duration":1857}},{"uid":"5f0190263fce0837","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/5f0190263fce0837","status":"passed","time":{"start":1761136963561,"stop":1761136965281,"duration":1720}},{"uid":"c2cb32958ae032c5","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/c2cb32958ae032c5","status":"passed","time":{"start":1761135631887,"stop":1761135633976,"duration":2089}},{"uid":"23aaa4c8871ab8fb","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/23aaa4c8871ab8fb","status":"passed","time":{"start":1761134072523,"stop":1761134074400,"duration":1877}},{"uid":"2d4d788f646f5a85","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/2d4d788f646f5a85","status":"passed","time":{"start":1761128410114,"stop":1761128412210,"duration":2096}},{"uid":"fa4645074a7b0dad","reportUrl":"https://vaizcom.github.io/autotests/383//#testresult/fa4645074a7b0dad","status":"passed","time":{"start":1761124520790,"stop":1761124522908,"duration":2118}},{"uid":"a1926e5aeba2a1fb","reportUrl":"https://vaizcom.github.io/autotests/382//#testresult/a1926e5aeba2a1fb","status":"passed","time":{"start":1761119341504,"stop":1761119344026,"duration":2522}},{"uid":"f1a91d24be5eb441","reportUrl":"https://vaizcom.github.io/autotests/381//#testresult/f1a91d24be5eb441","status":"passed","time":{"start":1761053375265,"stop":1761053377325,"duration":2060}},{"uid":"ecbd69fb780e8337","reportUrl":"https://vaizcom.github.io/autotests/380//#testresult/ecbd69fb780e8337","status":"passed","time":{"start":1761047269456,"stop":1761047271729,"duration":2273}},{"uid":"8522e59d8a6b9c6b","reportUrl":"https://vaizcom.github.io/autotests/379//#testresult/8522e59d8a6b9c6b","status":"passed","time":{"start":1760614688810,"stop":1760614690782,"duration":1972}},{"uid":"dba57cef499866ac","reportUrl":"https://vaizcom.github.io/autotests/378//#testresult/dba57cef499866ac","status":"passed","time":{"start":1760599491991,"stop":1760599493753,"duration":1762}},{"uid":"77b0d453649e6a10","reportUrl":"https://vaizcom.github.io/autotests/377//#testresult/77b0d453649e6a10","status":"passed","time":{"start":1760535515973,"stop":1760535518268,"duration":2295}},{"uid":"4d074e5dd9348e67","reportUrl":"https://vaizcom.github.io/autotests/376//#testresult/4d074e5dd9348e67","status":"passed","time":{"start":1760533998540,"stop":1760534000630,"duration":2090}}]},"tags":["backend"]},"source":"5ba5aba58de57905.json","parameterValues":["'manager_client'","'main_space'","'owner_client'","200","'Space'"]}