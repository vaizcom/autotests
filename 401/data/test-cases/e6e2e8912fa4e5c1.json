{"uid":"e6e2e8912fa4e5c1","name":"Создание проекта с невалидным slug (не латиница)","fullName":"tests.test_backend.project.test_project#test_project_slug_only_latin_letter","historyId":"77ae0ed397b8c98fbd9ab45add82f64d","time":{"start":1761910619422,"stop":1761910619422,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fce4b119550>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910495818,"stop":1761910495819,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910495819,"stop":1761910496047,"duration":228},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761910503762,"stop":1761910503877,"duration":115},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.project"},{"name":"suite","value":"test_project"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.project.test_project"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":51},"items":[{"uid":"f676c2608dccb27c","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/f676c2608dccb27c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910012906,"stop":1761910012906,"duration":0}},{"uid":"2c49c5ce6ba799c2","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/2c49c5ce6ba799c2","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900043997,"stop":1761900043997,"duration":0}},{"uid":"f2ac4f86aefe94ce","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/f2ac4f86aefe94ce","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835063135,"stop":1761835063135,"duration":0}},{"uid":"bcd61e7418832be9","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/bcd61e7418832be9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834649942,"stop":1761834649942,"duration":0}},{"uid":"d09100bbed1975e4","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/d09100bbed1975e4","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833485868,"stop":1761833485868,"duration":0}},{"uid":"99ad35ddb900a92c","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/99ad35ddb900a92c","status":"passed","time":{"start":1761821825270,"stop":1761821825457,"duration":187}},{"uid":"ea36f170a6f9d4cb","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/ea36f170a6f9d4cb","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818773757,"stop":1761818773757,"duration":0}},{"uid":"1bce4570ba5369e6","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/1bce4570ba5369e6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748636878,"stop":1761748636878,"duration":0}},{"uid":"bf676b2a7604b2f3","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/bf676b2a7604b2f3","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747913974,"stop":1761747913974,"duration":0}},{"uid":"6c745937326371cb","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/6c745937326371cb","status":"passed","time":{"start":1761747035597,"stop":1761747035885,"duration":288}},{"uid":"79baf3e2e3f09c8b","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/79baf3e2e3f09c8b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745744283,"stop":1761745744283,"duration":0}},{"uid":"7b2d1877d6194300","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/7b2d1877d6194300","status":"passed","time":{"start":1761576856774,"stop":1761576856996,"duration":222}},{"uid":"a5956cf1265a8df9","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/a5956cf1265a8df9","status":"passed","time":{"start":1761557476854,"stop":1761557477036,"duration":182}},{"uid":"72db07c92849c0db","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/72db07c92849c0db","status":"passed","time":{"start":1761308694007,"stop":1761308694190,"duration":183}},{"uid":"4c6f98981f73e049","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/4c6f98981f73e049","status":"passed","time":{"start":1761306861504,"stop":1761306861714,"duration":210}},{"uid":"333f078fbff2a3e4","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/333f078fbff2a3e4","status":"passed","time":{"start":1761137159794,"stop":1761137160623,"duration":829}},{"uid":"a8f23857f832e0ba","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/a8f23857f832e0ba","status":"passed","time":{"start":1761135858966,"stop":1761135859215,"duration":249}},{"uid":"119aff19b37b5522","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/119aff19b37b5522","status":"passed","time":{"start":1761134267260,"stop":1761134267463,"duration":203}},{"uid":"9814ba8f86b7ac28","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/9814ba8f86b7ac28","status":"passed","time":{"start":1761128657922,"stop":1761128658184,"duration":262}},{"uid":"2294ad83c23c6c38","reportUrl":"https://vaizcom.github.io/autotests/383//#testresult/2294ad83c23c6c38","status":"passed","time":{"start":1761124752865,"stop":1761124753137,"duration":272}}]},"tags":["backend"]},"source":"e6e2e8912fa4e5c1.json","parameterValues":[]}