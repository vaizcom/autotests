{"uid":"23aaee4b8a60df8e","name":"Создание документа с различными значениями title — ожидаемый статус 200","fullName":"tests.test_backend.document.test_create_document#test_document_title_validation","historyId":"0c64575664cb9528b42a64aa695822d8","time":{"start":1761921877293,"stop":1761921877293,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fc7d133bfd0>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761921763685,"stop":1761921763685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761921763685,"stop":1761921764117,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761921773063,"stop":1761921773182,"duration":119},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_create_document"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2549-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_create_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_actual_title","value":"'Документ'"},{"name":"expected_status","value":"200"},{"name":"title","value":"'Документ'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":55},"items":[{"uid":"7ebb314f6ee53121","reportUrl":"https://vaizcom.github.io/autotests/404//#testresult/7ebb314f6ee53121","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761912188211,"stop":1761912188211,"duration":0}},{"uid":"f202109e530b02a8","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/f202109e530b02a8","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911300152,"stop":1761911300152,"duration":0}},{"uid":"351c3854cda9e80a","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/351c3854cda9e80a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910911817,"stop":1761910911817,"duration":0}},{"uid":"2c63261ad6702629","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/2c63261ad6702629","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910613692,"stop":1761910613692,"duration":0}},{"uid":"d7d6e140feadf1fa","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/d7d6e140feadf1fa","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910005554,"stop":1761910005554,"duration":0}},{"uid":"c14df1fa5be82a26","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/c14df1fa5be82a26","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900037043,"stop":1761900037043,"duration":0}},{"uid":"b9f58976f1a6013b","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/b9f58976f1a6013b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835057655,"stop":1761835057655,"duration":0}},{"uid":"9c12b9cc1399c670","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/9c12b9cc1399c670","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834642148,"stop":1761834642148,"duration":0}},{"uid":"777432aee75de043","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/777432aee75de043","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833478266,"stop":1761833478266,"duration":0}},{"uid":"a058dc84690cd313","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/a058dc84690cd313","status":"passed","time":{"start":1761821716462,"stop":1761821716689,"duration":227}},{"uid":"ab3297097ee9a27b","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/ab3297097ee9a27b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818766527,"stop":1761818766527,"duration":0}},{"uid":"b04e882ea48f2105","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/b04e882ea48f2105","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748630311,"stop":1761748630311,"duration":0}},{"uid":"4cea45d33e0cc037","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/4cea45d33e0cc037","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747905853,"stop":1761747905853,"duration":0}},{"uid":"116b48c442bd272d","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/116b48c442bd272d","status":"passed","time":{"start":1761746880960,"stop":1761746881310,"duration":350}},{"uid":"ee0e17641c142767","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/ee0e17641c142767","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745738330,"stop":1761745738330,"duration":0}},{"uid":"22bf897e7d8ce91c","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/22bf897e7d8ce91c","status":"passed","time":{"start":1761576715480,"stop":1761576715761,"duration":281}},{"uid":"bbc7db6c5a13a155","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/bbc7db6c5a13a155","status":"passed","time":{"start":1761557365294,"stop":1761557365536,"duration":242}},{"uid":"842417973e6d8d92","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/842417973e6d8d92","status":"passed","time":{"start":1761308589447,"stop":1761308589666,"duration":219}},{"uid":"6015d41b6145f4c1","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/6015d41b6145f4c1","status":"passed","time":{"start":1761306751351,"stop":1761306751615,"duration":264}},{"uid":"4a14e493203d7593","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/4a14e493203d7593","status":"passed","time":{"start":1761137044176,"stop":1761137044443,"duration":267}}]},"tags":["backend"]},"source":"23aaee4b8a60df8e.json","parameterValues":["'Документ'","200","'Документ'"]}