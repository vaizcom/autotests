{"uid":"8db1682bc829c936","name":"test_documents_access_denied_for_foreign_user[foreign member]","fullName":"tests.test_backend.document.access_doc.test_doc_access_for_foreign#test_documents_access_denied_for_foreign_user","historyId":"3b18522ead27161d43f1fa200857952a","time":{"start":1761911186364,"stop":1761911186364,"duration":0},"description":"\n    Проверяет запрет доступа к документам для стороннего пользователя при попытке\n    получить документы, связанные с определенным типом сущности (например, 'Project',\n    'Space' или 'Member'). Тест проверяет, что сторонний клиент получает статус 403\n    и код ошибки 'AccessDenied' в ответе.\n    ","descriptionHtml":"<pre><code>Проверяет запрет доступа к документам для стороннего пользователя при попытке\nполучить документы, связанные с определенным типом сущности (например, 'Project',\n'Space' или 'Member'). Тест проверяет, что сторонний клиент получает статус 403\nи код ошибки 'AccessDenied' в ответе.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fbc912cb790>\n\n    @pytest.fixture(scope='module')\n    def space_id_module(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:192: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761911162887,"stop":1761911162887,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761911162888,"stop":1761911163517,"duration":629},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"foreign_client","time":{"start":1761911165045,"stop":1761911165337,"duration":292},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"space_id_module","time":{"start":1761911186170,"stop":1761911186348,"duration":178},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 192, in space_id_module\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document.access_doc"},{"name":"suite","value":"test_doc_access_for_foreign"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.access_doc.test_doc_access_for_foreign"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"fixture_name","value":"'temp_member'"},{"name":"kind","value":"'Member'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":53},"items":[{"uid":"5b167caeb1d35340","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/5b167caeb1d35340","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910813721,"stop":1761910813721,"duration":0}},{"uid":"23f021fd0cfc8741","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/23f021fd0cfc8741","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910517107,"stop":1761910517107,"duration":0}},{"uid":"e48e45f1eb952b44","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/e48e45f1eb952b44","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761909881859,"stop":1761909881859,"duration":0}},{"uid":"666106903be2dcf7","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/666106903be2dcf7","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761899915382,"stop":1761899915382,"duration":0}},{"uid":"efaa8891b03bf30","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/efaa8891b03bf30","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834961057,"stop":1761834961057,"duration":0}},{"uid":"ddae4a458adf49","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/ddae4a458adf49","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834514147,"stop":1761834514147,"duration":0}},{"uid":"42b2b0ad69c02560","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/42b2b0ad69c02560","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833344108,"stop":1761833344108,"duration":0}},{"uid":"88e592a77d4da368","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/88e592a77d4da368","status":"passed","time":{"start":1761821524330,"stop":1761821524659,"duration":329}},{"uid":"bc78bdab5d017120","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/bc78bdab5d017120","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818649615,"stop":1761818649615,"duration":0}},{"uid":"bab88dcefaefe4ab","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/bab88dcefaefe4ab","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748524341,"stop":1761748524341,"duration":0}},{"uid":"26e71559f64a4fd8","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/26e71559f64a4fd8","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747785941,"stop":1761747785941,"duration":0}},{"uid":"9e41bae97053068c","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/9e41bae97053068c","status":"passed","time":{"start":1761746645539,"stop":1761746646011,"duration":472}},{"uid":"5bcc33f4113a856d","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/5bcc33f4113a856d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745647496,"stop":1761745647496,"duration":0}},{"uid":"451ed59696928b3a","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/451ed59696928b3a","status":"passed","time":{"start":1761576517013,"stop":1761576517387,"duration":374}},{"uid":"76363faa67aee430","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/76363faa67aee430","status":"passed","time":{"start":1761557173258,"stop":1761557173619,"duration":361}},{"uid":"447768a3163417b4","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/447768a3163417b4","status":"passed","time":{"start":1761308398080,"stop":1761308398441,"duration":361}},{"uid":"75e9df1ff582875f","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/75e9df1ff582875f","status":"passed","time":{"start":1761306545956,"stop":1761306546329,"duration":373}},{"uid":"a49b756a152d0169","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/a49b756a152d0169","status":"passed","time":{"start":1761136840055,"stop":1761136840441,"duration":386}},{"uid":"4e3a6b1ed029beb2","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/4e3a6b1ed029beb2","status":"passed","time":{"start":1761135496356,"stop":1761135496806,"duration":450}},{"uid":"d8ee634a602fe32f","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/d8ee634a602fe32f","status":"passed","time":{"start":1761133957051,"stop":1761133957407,"duration":356}}]},"tags":["backend"]},"source":"8db1682bc829c936.json","parameterValues":["'temp_member'","'Member'"]}