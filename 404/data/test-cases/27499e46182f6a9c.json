{"uid":"27499e46182f6a9c","name":"test_get_document_invalid_input[json-object]","fullName":"tests.test_backend.document.test_get_document#test_get_document_invalid_input","historyId":"07a993de4eb955e7977a4fc2be5e99d8","time":{"start":1761912190990,"stop":1761912190990,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761912080667,"stop":1761912081009,"duration":342},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"document_id","value":"{'id': '123'}"},{"name":"expected_error_code","value":"'InvalidForm'"},{"name":"expected_status","value":"400"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":54},"items":[{"uid":"3ac9ea3bffc8ed38","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/3ac9ea3bffc8ed38","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911303900,"stop":1761911303900,"duration":0}},{"uid":"e8517db3856e6112","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/e8517db3856e6112","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910914634,"stop":1761910914634,"duration":0}},{"uid":"8d7a83afada2d265","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/8d7a83afada2d265","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910615784,"stop":1761910615784,"duration":0}},{"uid":"66ac0fc1f13dcea9","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/66ac0fc1f13dcea9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910008862,"stop":1761910008862,"duration":0}},{"uid":"1449799019d21d7f","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/1449799019d21d7f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900039977,"stop":1761900039977,"duration":0}},{"uid":"78133732d7e87fd9","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/78133732d7e87fd9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835060179,"stop":1761835060179,"duration":0}},{"uid":"1a01fcf770abfef0","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/1a01fcf770abfef0","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834645238,"stop":1761834645238,"duration":0}},{"uid":"26a2954e831458aa","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/26a2954e831458aa","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833481652,"stop":1761833481652,"duration":0}},{"uid":"e587bb92962ff30","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/e587bb92962ff30","status":"passed","time":{"start":1761821752839,"stop":1761821753016,"duration":177}},{"uid":"e6943986fa67171a","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/e6943986fa67171a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818769783,"stop":1761818769783,"duration":0}},{"uid":"dc5b770527598f74","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/dc5b770527598f74","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748633110,"stop":1761748633110,"duration":0}},{"uid":"a19fefc8611258bf","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/a19fefc8611258bf","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747909372,"stop":1761747909372,"duration":0}},{"uid":"d39760f04665f303","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/d39760f04665f303","status":"passed","time":{"start":1761746934031,"stop":1761746934334,"duration":303}},{"uid":"49edc934f4a4e83e","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/49edc934f4a4e83e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745741252,"stop":1761745741252,"duration":0}},{"uid":"254c24cb031af09a","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/254c24cb031af09a","status":"passed","time":{"start":1761576766765,"stop":1761576766967,"duration":202}},{"uid":"25ee8f53a8432ae5","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/25ee8f53a8432ae5","status":"passed","time":{"start":1761557403522,"stop":1761557403729,"duration":207}},{"uid":"4b9053e65d3cb3b0","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/4b9053e65d3cb3b0","status":"passed","time":{"start":1761308624977,"stop":1761308625272,"duration":295}},{"uid":"f284f61baa52b61b","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/f284f61baa52b61b","status":"passed","time":{"start":1761306789060,"stop":1761306789274,"duration":214}},{"uid":"8ae9f2c18c400416","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/8ae9f2c18c400416","status":"passed","time":{"start":1761137084237,"stop":1761137084442,"duration":205}},{"uid":"e41abcddd7c9cec1","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/e41abcddd7c9cec1","status":"passed","time":{"start":1761135769859,"stop":1761135770108,"duration":249}}]},"tags":["backend"]},"source":"27499e46182f6a9c.json","parameterValues":["{'id': '123'}","'InvalidForm'","400"]}