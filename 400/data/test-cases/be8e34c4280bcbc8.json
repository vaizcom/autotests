{"uid":"be8e34c4280bcbc8","name":"test_edit_document_success[member]","fullName":"tests.test_backend.document.test_edit_document#test_edit_document_success","historyId":"76b8ba30ce20bf05f496798669b3feab","time":{"start":1761910007604,"stop":1761910007604,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f7b6371b6d0>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1761909856376,"stop":1761909856376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761909856376,"stop":1761909856376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761909856376,"stop":1761909856684,"duration":308},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761909856376,"stop":1761909856376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761909856376,"stop":1761909856376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761909866728,"stop":1761909866905,"duration":177},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_edit_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2551-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_edit_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"kind","value":"'Member'"},{"name":"kind_id_fixture","value":"'temp_member'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":10,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":50},"items":[{"uid":"6ccdd5fdbc37ea08","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/6ccdd5fdbc37ea08","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900038729,"stop":1761900038729,"duration":0}},{"uid":"9c88e8f24c0d0464","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/9c88e8f24c0d0464","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835059288,"stop":1761835059288,"duration":0}},{"uid":"c4154498c2178cc6","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/c4154498c2178cc6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834643891,"stop":1761834643891,"duration":0}},{"uid":"408ff4c3c27dba77","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/408ff4c3c27dba77","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833480098,"stop":1761833480098,"duration":0}},{"uid":"d810839cb6395afb","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/d810839cb6395afb","status":"passed","time":{"start":1761821734214,"stop":1761821734395,"duration":181}},{"uid":"90cf9c0919c8553c","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/90cf9c0919c8553c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818768426,"stop":1761818768426,"duration":0}},{"uid":"d6a189dcf215b04a","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/d6a189dcf215b04a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748632228,"stop":1761748632228,"duration":0}},{"uid":"48c28cf6d35006b5","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/48c28cf6d35006b5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747908115,"stop":1761747908115,"duration":0}},{"uid":"207aec845e286286","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/207aec845e286286","status":"passed","time":{"start":1761746904945,"stop":1761746905251,"duration":306}},{"uid":"7b8419e7f634a3b5","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/7b8419e7f634a3b5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745740317,"stop":1761745740317,"duration":0}},{"uid":"aed7be347c2c24b","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/aed7be347c2c24b","status":"passed","time":{"start":1761576740174,"stop":1761576740435,"duration":261}},{"uid":"e9aa89b8da08aa73","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/e9aa89b8da08aa73","status":"passed","time":{"start":1761557383125,"stop":1761557383319,"duration":194}},{"uid":"feb5ca5469f7b6e3","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/feb5ca5469f7b6e3","status":"passed","time":{"start":1761308605849,"stop":1761308606054,"duration":205}},{"uid":"b4c2c851c4296ca2","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/b4c2c851c4296ca2","status":"passed","time":{"start":1761306768645,"stop":1761306768899,"duration":254}},{"uid":"77c724a18429693e","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/77c724a18429693e","status":"passed","time":{"start":1761137062028,"stop":1761137062261,"duration":233}},{"uid":"5bd592152ca74967","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/5bd592152ca74967","status":"passed","time":{"start":1761135743784,"stop":1761135744052,"duration":268}},{"uid":"920aaaf9a2dcc5f6","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/920aaaf9a2dcc5f6","status":"passed","time":{"start":1761134167501,"stop":1761134167719,"duration":218}},{"uid":"491f71c36898c2bc","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/491f71c36898c2bc","status":"passed","time":{"start":1761128535012,"stop":1761128535292,"duration":280}},{"uid":"9054fbdc029a8c3f","reportUrl":"https://vaizcom.github.io/autotests/383//#testresult/9054fbdc029a8c3f","status":"passed","time":{"start":1761124643803,"stop":1761124644077,"duration":274}},{"uid":"d6c4cda387a47b67","reportUrl":"https://vaizcom.github.io/autotests/382//#testresult/d6c4cda387a47b67","status":"passed","time":{"start":1761119456179,"stop":1761119456520,"duration":341}}]},"tags":["backend"]},"source":"be8e34c4280bcbc8.json","parameterValues":["'Member'","'temp_member'"]}