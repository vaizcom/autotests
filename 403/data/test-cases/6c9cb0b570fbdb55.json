{"uid":"6c9cb0b570fbdb55","name":"Редактирование кастомного поля типа: TaskRelations","fullName":"tests.test_backend.board.test_create_board#test_edit_custom_field_common_fields","historyId":"247dde352faac6d16c323675eaf44adc","time":{"start":1761911173071,"stop":1761911173071,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fbc912cb790>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761911162887,"stop":1761911162887,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761911162888,"stop":1761911163517,"duration":629},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761911172524,"stop":1761911172705,"duration":181},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.board"},{"name":"suite","value":"test_create_board"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.board.test_create_board"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"field_type","value":"'TaskRelations'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":53},"items":[{"uid":"e338575c511c0244","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/e338575c511c0244","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910801905,"stop":1761910801905,"duration":0}},{"uid":"3182a291820eb62e","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/3182a291820eb62e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910504246,"stop":1761910504246,"duration":0}},{"uid":"505073d197869798","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/505073d197869798","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761909867282,"stop":1761909867282,"duration":0}},{"uid":"eae6e6c6fdf7e3ec","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/eae6e6c6fdf7e3ec","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761899901205,"stop":1761899901205,"duration":0}},{"uid":"699bfe1b0ebb3abd","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/699bfe1b0ebb3abd","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834950190,"stop":1761834950190,"duration":0}},{"uid":"82577ef9193e8df3","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/82577ef9193e8df3","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834497955,"stop":1761834497955,"duration":0}},{"uid":"c52613ea9f1b3fc9","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/c52613ea9f1b3fc9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833327585,"stop":1761833327585,"duration":0}},{"uid":"5135b0a4e9c19b7e","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/5135b0a4e9c19b7e","status":"passed","time":{"start":1761821504973,"stop":1761821505444,"duration":471}},{"uid":"dfa148441cf1b63d","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/dfa148441cf1b63d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818627869,"stop":1761818627869,"duration":0}},{"uid":"d450806e0a7c88f4","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/d450806e0a7c88f4","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748512455,"stop":1761748512455,"duration":0}},{"uid":"c134325d73d60b94","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/c134325d73d60b94","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747772037,"stop":1761747772037,"duration":0}},{"uid":"178b2fbf35b45322","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/178b2fbf35b45322","status":"passed","time":{"start":1761746621508,"stop":1761746622145,"duration":637}},{"uid":"f5c665b17867de4e","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/f5c665b17867de4e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745637326,"stop":1761745637326,"duration":0}},{"uid":"9c459537eb57f882","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/9c459537eb57f882","status":"passed","time":{"start":1761576496431,"stop":1761576496887,"duration":456}},{"uid":"4abaefeee0f13777","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/4abaefeee0f13777","status":"passed","time":{"start":1761557152875,"stop":1761557153326,"duration":451}},{"uid":"4feffa40c501a424","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/4feffa40c501a424","status":"passed","time":{"start":1761308377074,"stop":1761308377522,"duration":448}},{"uid":"ba6322acbcd72fd1","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/ba6322acbcd72fd1","status":"passed","time":{"start":1761306525633,"stop":1761306526193,"duration":560}},{"uid":"b57f59861d71a250","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/b57f59861d71a250","status":"passed","time":{"start":1761136819727,"stop":1761136820217,"duration":490}},{"uid":"b31d648f92223554","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/b31d648f92223554","status":"passed","time":{"start":1761135472530,"stop":1761135473070,"duration":540}},{"uid":"74d40c94945522b8","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/74d40c94945522b8","status":"passed","time":{"start":1761133937330,"stop":1761133937839,"duration":509}}]},"tags":["backend"]},"source":"6c9cb0b570fbdb55.json","parameterValues":["'TaskRelations'"]}