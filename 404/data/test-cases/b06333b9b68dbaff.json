{"uid":"b06333b9b68dbaff","name":"test_edit_document_overwrite[member]","fullName":"tests.test_backend.document.test_edit_document#test_edit_document_overwrite","historyId":"d21006d8ae3f5c850bf87861f93bb2bd","time":{"start":1761921879124,"stop":1761921879124,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fc7d133bfd0>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761921763685,"stop":1761921763685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761921763685,"stop":1761921764117,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761921773063,"stop":1761921773182,"duration":119},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_edit_document"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2549-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_edit_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"kind","value":"'Member'"},{"name":"kind_id_fixture","value":"'temp_member'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":55},"items":[{"uid":"c1512f9d6f2beb79","reportUrl":"https://vaizcom.github.io/autotests/404//#testresult/c1512f9d6f2beb79","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761912190088,"stop":1761912190088,"duration":0}},{"uid":"d19ba0538bfe5ee","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/d19ba0538bfe5ee","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911302648,"stop":1761911302648,"duration":0}},{"uid":"604e73ad5601cbba","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/604e73ad5601cbba","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910913207,"stop":1761910913207,"duration":0}},{"uid":"64b0a78cf14c1dcb","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/64b0a78cf14c1dcb","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910614935,"stop":1761910614935,"duration":0}},{"uid":"24f89c8b481d7724","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/24f89c8b481d7724","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910007670,"stop":1761910007670,"duration":0}},{"uid":"357769df3b3b439c","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/357769df3b3b439c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900038796,"stop":1761900038796,"duration":0}},{"uid":"5272946266b95021","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/5272946266b95021","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835059355,"stop":1761835059355,"duration":0}},{"uid":"f39a83ad9e611c7","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/f39a83ad9e611c7","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834643961,"stop":1761834643961,"duration":0}},{"uid":"1fe528d1d150bb7d","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/1fe528d1d150bb7d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833480155,"stop":1761833480155,"duration":0}},{"uid":"c8c9132bc0baa3d0","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/c8c9132bc0baa3d0","status":"passed","time":{"start":1761821739117,"stop":1761821739698,"duration":581}},{"uid":"a7f624ed68d2f484","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/a7f624ed68d2f484","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818768493,"stop":1761818768493,"duration":0}},{"uid":"6a627cd011c24650","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/6a627cd011c24650","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748632295,"stop":1761748632295,"duration":0}},{"uid":"ed14deaf93f549fe","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/ed14deaf93f549fe","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747908182,"stop":1761747908182,"duration":0}},{"uid":"f75f64071c1bbae","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/f75f64071c1bbae","status":"passed","time":{"start":1761746913543,"stop":1761746914473,"duration":930}},{"uid":"df2e32a2156818c2","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/df2e32a2156818c2","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745740383,"stop":1761745740383,"duration":0}},{"uid":"790c7957b0572e62","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/790c7957b0572e62","status":"passed","time":{"start":1761576746788,"stop":1761576747511,"duration":723}},{"uid":"e557acf56751372e","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/e557acf56751372e","status":"passed","time":{"start":1761557388284,"stop":1761557388889,"duration":605}},{"uid":"93f2c51ee783c2f6","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/93f2c51ee783c2f6","status":"passed","time":{"start":1761308611271,"stop":1761308611882,"duration":611}},{"uid":"ad0883b06d055dd1","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/ad0883b06d055dd1","status":"passed","time":{"start":1761306774308,"stop":1761306774966,"duration":658}},{"uid":"ade274a8d3bea51d","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/ade274a8d3bea51d","status":"passed","time":{"start":1761137068454,"stop":1761137069098,"duration":644}}]},"tags":["backend"]},"source":"b06333b9b68dbaff.json","parameterValues":["'Member'","'temp_member'"]}