{"uid":"492362a7f1e673b","name":"test_invalid_document_id[short]","fullName":"tests.test_backend.document.test_get_siblings#test_invalid_document_id","historyId":"8c43db0c07bfafe109d5918dd5247db4","time":{"start":1761912193178,"stop":1761912193178,"duration":0},"description":"\n    Негативные сценарии: разные варианты некорректного document_id.\n    ","descriptionHtml":"<pre><code>Негативные сценарии: разные варианты некорректного document_id.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @pytest.fixture(scope='function')\n    def space_id_function(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:228: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"space_id_function","time":{"start":1761912193178,"stop":1761912193307,"duration":129},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 228, in space_id_function\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_siblings"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_siblings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"400"},{"name":"fake_id","value":"'123'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":54},"items":[{"uid":"757fb3ad26792f12","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/757fb3ad26792f12","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911306728,"stop":1761911306728,"duration":0}},{"uid":"54071ddea2d96813","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/54071ddea2d96813","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910916964,"stop":1761910916964,"duration":0}},{"uid":"e490a3b2788899b6","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/e490a3b2788899b6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910617862,"stop":1761910617862,"duration":0}},{"uid":"4ad0073ea7f9fe","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/4ad0073ea7f9fe","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910011717,"stop":1761910011717,"duration":0}},{"uid":"18ca0b160842bc61","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/18ca0b160842bc61","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900042804,"stop":1761900042804,"duration":0}},{"uid":"afc694c27aff4ea8","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/afc694c27aff4ea8","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835062274,"stop":1761835062274,"duration":0}},{"uid":"c5417e267d2bacf3","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/c5417e267d2bacf3","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834648670,"stop":1761834648670,"duration":0}},{"uid":"ec555bf866d2c152","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/ec555bf866d2c152","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833484591,"stop":1761833484591,"duration":0}},{"uid":"150b3b4226e26c59","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/150b3b4226e26c59","status":"passed","time":{"start":1761821810436,"stop":1761821810855,"duration":419}},{"uid":"c9fac66c1f1c997","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/c9fac66c1f1c997","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818772578,"stop":1761818772578,"duration":0}},{"uid":"ade20458b6ebf78e","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/ade20458b6ebf78e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748635322,"stop":1761748635322,"duration":0}},{"uid":"283f8b9acefc6326","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/283f8b9acefc6326","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747912716,"stop":1761747912716,"duration":0}},{"uid":"3ded7be660a991df","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/3ded7be660a991df","status":"passed","time":{"start":1761747015058,"stop":1761747015501,"duration":443}},{"uid":"8eeb4ba276e8a43","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/8eeb4ba276e8a43","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745743405,"stop":1761745743405,"duration":0}},{"uid":"8c479f8448b83d43","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/8c479f8448b83d43","status":"passed","time":{"start":1761576837683,"stop":1761576838749,"duration":1066}},{"uid":"83bf8e777eff255a","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/83bf8e777eff255a","status":"passed","time":{"start":1761557462590,"stop":1761557463068,"duration":478}},{"uid":"8011a734682fb66c","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/8011a734682fb66c","status":"passed","time":{"start":1761308680900,"stop":1761308681261,"duration":361}},{"uid":"fd1158b40826ba","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/fd1158b40826ba","status":"passed","time":{"start":1761306847756,"stop":1761306848107,"duration":351}},{"uid":"7b2e174b43408aad","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/7b2e174b43408aad","status":"passed","time":{"start":1761137145118,"stop":1761137146096,"duration":978}},{"uid":"151af3568cd4e59d","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/151af3568cd4e59d","status":"passed","time":{"start":1761135839701,"stop":1761135840181,"duration":480}}]},"tags":["backend"]},"source":"492362a7f1e673b.json","parameterValues":["400","'123'"]}