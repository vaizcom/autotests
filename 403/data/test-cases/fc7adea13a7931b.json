{"uid":"fc7adea13a7931b","name":"test_deeply_nested_parents[space]","fullName":"tests.test_backend.document.test_get_siblings#test_deeply_nested_parents","historyId":"20b83f811fde801d2a9a70b6b3a6ea49","time":{"start":1761911305413,"stop":1761911305413,"duration":0},"description":"\n    Глубокая вложенность: проверяем цепочку parents.\n    ","descriptionHtml":"<pre><code>Глубокая вложенность: проверяем цепочку parents.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fbc912cb790>\n\n    @pytest.fixture(scope='function')\n    def space_id_function(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:228: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761911162887,"stop":1761911162887,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761911162888,"stop":1761911163517,"duration":629},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"space_id_function","time":{"start":1761911305414,"stop":1761911305584,"duration":170},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 228, in space_id_function\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"feature","value":"Document Siblings"},{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_siblings"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_siblings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"kind","value":"'Space'"},{"name":"kind_id_fixture","value":"'space_id_function'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":53},"items":[{"uid":"d4f8126d16b0e3a2","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/d4f8126d16b0e3a2","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910915898,"stop":1761910915898,"duration":0}},{"uid":"8a740e4a9b65cdf5","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/8a740e4a9b65cdf5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910616913,"stop":1761910616913,"duration":0}},{"uid":"6816fbf652dd6859","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/6816fbf652dd6859","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910010371,"stop":1761910010371,"duration":0}},{"uid":"ae78b66bf18af186","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/ae78b66bf18af186","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900041461,"stop":1761900041461,"duration":0}},{"uid":"a2fa516580f67e0f","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/a2fa516580f67e0f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835061335,"stop":1761835061335,"duration":0}},{"uid":"9ae02a7e353bfaed","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/9ae02a7e353bfaed","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834646861,"stop":1761834646861,"duration":0}},{"uid":"6c397e7de7d39e7f","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/6c397e7de7d39e7f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833483182,"stop":1761833483182,"duration":0}},{"uid":"a51e56175ea3a6cf","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/a51e56175ea3a6cf","status":"passed","time":{"start":1761821790693,"stop":1761821792065,"duration":1372}},{"uid":"6226191b94840a6a","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/6226191b94840a6a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818771276,"stop":1761818771276,"duration":0}},{"uid":"b8a3be432c18c25d","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/b8a3be432c18c25d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748634306,"stop":1761748634306,"duration":0}},{"uid":"3b363c8af9776913","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/3b363c8af9776913","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747911094,"stop":1761747911094,"duration":0}},{"uid":"13aa8b3735877bc4","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/13aa8b3735877bc4","status":"passed","time":{"start":1761746987491,"stop":1761746989157,"duration":1666}},{"uid":"535c8166f67360b1","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/535c8166f67360b1","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745742465,"stop":1761745742465,"duration":0}},{"uid":"b623c93122ce9a83","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/b623c93122ce9a83","status":"passed","time":{"start":1761576814038,"stop":1761576815576,"duration":1538}},{"uid":"c4ba1ae6adc87988","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/c4ba1ae6adc87988","status":"passed","time":{"start":1761557443891,"stop":1761557445211,"duration":1320}},{"uid":"7bbb436523dddde1","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/7bbb436523dddde1","status":"passed","time":{"start":1761308663181,"stop":1761308664477,"duration":1296}},{"uid":"906b6a7bae6cd0bc","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/906b6a7bae6cd0bc","status":"passed","time":{"start":1761306828207,"stop":1761306829592,"duration":1385}},{"uid":"3a8ee567588cedba","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/3a8ee567588cedba","status":"passed","time":{"start":1761137125377,"stop":1761137127449,"duration":2072}},{"uid":"b2ea66b0072e0730","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/b2ea66b0072e0730","status":"passed","time":{"start":1761135815391,"stop":1761135817065,"duration":1674}},{"uid":"6aa20412065317f0","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/6aa20412065317f0","status":"passed","time":{"start":1761134230321,"stop":1761134231646,"duration":1325}}]},"tags":["backend"]},"source":"fc7adea13a7931b.json","parameterValues":["'Space'","'space_id_function'"]}