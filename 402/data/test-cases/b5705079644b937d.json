{"uid":"b5705079644b937d","name":"test_get_documents_invalid_inputs[missing kindId]","fullName":"tests.test_backend.document.test_get_documents#test_get_documents_invalid_inputs","historyId":"d09e58488a9672e588e2aa3f059c9050","time":{"start":1761910914722,"stop":1761910914722,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f1c6962ef90>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910792963,"stop":1761910793391,"duration":428},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761910801404,"stop":1761910801539,"duration":135},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_documents"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2545-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_documents"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case_id","value":"'missing kindId'"},{"name":"expected_status","value":"400"},{"name":"kind","value":"'Project'"},{"name":"kind_id","value":"None"},{"name":"space_id","value":"'valid_space_id'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":52},"items":[{"uid":"bd6ad12fea180e04","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/bd6ad12fea180e04","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910615873,"stop":1761910615873,"duration":0}},{"uid":"b74a6fde904388c6","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/b74a6fde904388c6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910008948,"stop":1761910008948,"duration":0}},{"uid":"923b429d01e5afc4","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/923b429d01e5afc4","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900040064,"stop":1761900040064,"duration":0}},{"uid":"f9f59c2ca8c87ec3","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/f9f59c2ca8c87ec3","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835060267,"stop":1761835060267,"duration":0}},{"uid":"2093dd289f64c5ec","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/2093dd289f64c5ec","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834645329,"stop":1761834645329,"duration":0}},{"uid":"2bf79567edafc27a","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/2bf79567edafc27a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833481734,"stop":1761833481734,"duration":0}},{"uid":"ba506c19af1e98e9","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/ba506c19af1e98e9","status":"passed","time":{"start":1761821758782,"stop":1761821758961,"duration":179}},{"uid":"17168bf81b9fe636","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/17168bf81b9fe636","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818769869,"stop":1761818769869,"duration":0}},{"uid":"c0f348a8823068ff","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/c0f348a8823068ff","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748633196,"stop":1761748633196,"duration":0}},{"uid":"ea18f3ce9134222d","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/ea18f3ce9134222d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747909460,"stop":1761747909460,"duration":0}},{"uid":"98e78b8548751d9","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/98e78b8548751d9","status":"passed","time":{"start":1761746946455,"stop":1761746946757,"duration":302}},{"uid":"9df873deb3fe4c14","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/9df873deb3fe4c14","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745741339,"stop":1761745741339,"duration":0}},{"uid":"89c476c2532e76f","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/89c476c2532e76f","status":"passed","time":{"start":1761576775425,"stop":1761576775690,"duration":265}},{"uid":"7dc18c17d77f1483","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/7dc18c17d77f1483","status":"passed","time":{"start":1761557412616,"stop":1761557412807,"duration":191}},{"uid":"ab5795817504de3f","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/ab5795817504de3f","status":"passed","time":{"start":1761308632704,"stop":1761308632923,"duration":219}},{"uid":"cae0b9796c22bf7a","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/cae0b9796c22bf7a","status":"passed","time":{"start":1761306796488,"stop":1761306796696,"duration":208}},{"uid":"1a5f1aabd9dc7b2e","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/1a5f1aabd9dc7b2e","status":"passed","time":{"start":1761137092153,"stop":1761137092362,"duration":209}},{"uid":"60ae165ba900f8","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/60ae165ba900f8","status":"passed","time":{"start":1761135777713,"stop":1761135777965,"duration":252}},{"uid":"36b842e9d0844ad0","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/36b842e9d0844ad0","status":"passed","time":{"start":1761134195909,"stop":1761134196101,"duration":192}},{"uid":"c4c849c385cf375d","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/c4c849c385cf375d","status":"passed","time":{"start":1761128572548,"stop":1761128572795,"duration":247}}]},"tags":["backend"]},"source":"b5705079644b937d.json","parameterValues":["'missing kindId'","400","'Project'","None","'valid_space_id'"]}