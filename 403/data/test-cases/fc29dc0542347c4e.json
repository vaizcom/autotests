{"uid":"fc29dc0542347c4e","name":"Создание документа с различными значениями title — ожидаемый статус 200","fullName":"tests.test_backend.document.test_create_document#test_document_title_validation","historyId":"fbeaecf664567cd335d1d16bd871ed5b","time":{"start":1761911300111,"stop":1761911300111,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fbc912cb790>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761911162887,"stop":1761911162887,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761911162888,"stop":1761911163517,"duration":629},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761911172524,"stop":1761911172705,"duration":181},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_create_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_create_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_actual_title","value":"' '"},{"name":"expected_status","value":"200"},{"name":"title","value":"' '"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":53},"items":[{"uid":"e30ac43cab190fdc","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/e30ac43cab190fdc","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910911776,"stop":1761910911776,"duration":0}},{"uid":"96d4335f9a13d987","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/96d4335f9a13d987","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910613652,"stop":1761910613652,"duration":0}},{"uid":"985e735c1c8c4d36","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/985e735c1c8c4d36","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910005512,"stop":1761910005512,"duration":0}},{"uid":"8c0f324053bb3ffa","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/8c0f324053bb3ffa","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900037003,"stop":1761900037003,"duration":0}},{"uid":"3e89190b541ab15b","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/3e89190b541ab15b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835057614,"stop":1761835057614,"duration":0}},{"uid":"7d2ec9e26bb9a569","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/7d2ec9e26bb9a569","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834642106,"stop":1761834642106,"duration":0}},{"uid":"4b51664f5b27d013","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/4b51664f5b27d013","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833478231,"stop":1761833478231,"duration":0}},{"uid":"590359e38bdc8add","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/590359e38bdc8add","status":"passed","time":{"start":1761821715205,"stop":1761821715429,"duration":224}},{"uid":"4e5a4ce88f71a45b","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/4e5a4ce88f71a45b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818766487,"stop":1761818766487,"duration":0}},{"uid":"ced3e364cdf49cbc","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/ced3e364cdf49cbc","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748630270,"stop":1761748630270,"duration":0}},{"uid":"5ef19a5d6518c118","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/5ef19a5d6518c118","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747905812,"stop":1761747905812,"duration":0}},{"uid":"36ec0f03e2935a36","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/36ec0f03e2935a36","status":"passed","time":{"start":1761746878732,"stop":1761746879066,"duration":334}},{"uid":"8d79a7105fcbf432","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/8d79a7105fcbf432","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745738289,"stop":1761745738289,"duration":0}},{"uid":"e45a208655d86f15","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/e45a208655d86f15","status":"passed","time":{"start":1761576713984,"stop":1761576714283,"duration":299}},{"uid":"570cf3dabc40a412","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/570cf3dabc40a412","status":"passed","time":{"start":1761557364000,"stop":1761557364253,"duration":253}},{"uid":"f935e37136b2faf5","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/f935e37136b2faf5","status":"passed","time":{"start":1761308588157,"stop":1761308588408,"duration":251}},{"uid":"78419f3b7a47609f","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/78419f3b7a47609f","status":"passed","time":{"start":1761306749764,"stop":1761306750034,"duration":270}},{"uid":"b3b26ac284d43148","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/b3b26ac284d43148","status":"passed","time":{"start":1761137042770,"stop":1761137043021,"duration":251}},{"uid":"18208b4f64c54e95","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/18208b4f64c54e95","status":"passed","time":{"start":1761135720173,"stop":1761135720570,"duration":397}},{"uid":"94f540c0ae4ef99a","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/94f540c0ae4ef99a","status":"passed","time":{"start":1761134147183,"stop":1761134147433,"duration":250}}]},"tags":["backend"]},"source":"fc29dc0542347c4e.json","parameterValues":["' '","200","' '"]}