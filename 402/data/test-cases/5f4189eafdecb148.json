{"uid":"5f4189eafdecb148","name":"Получение борды по boardId через /GetBoard","fullName":"tests.test_backend.board.test_get_board#test_get_board_by_id","historyId":"a0feb1c6a2b3516193b5165204c07136","time":{"start":1761910801919,"stop":1761910801919,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f1c6962ef90>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910792963,"stop":1761910793391,"duration":428},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761910801404,"stop":1761910801539,"duration":135},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.board"},{"name":"suite","value":"test_get_board"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2545-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.board.test_get_board"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":52},"items":[{"uid":"529050bf4f0796a3","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/529050bf4f0796a3","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910504261,"stop":1761910504261,"duration":0}},{"uid":"3fcc98b5a10d5682","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/3fcc98b5a10d5682","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761909867296,"stop":1761909867296,"duration":0}},{"uid":"58bd1c8a546b252c","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/58bd1c8a546b252c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761899901219,"stop":1761899901219,"duration":0}},{"uid":"3de28fda1022e95a","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/3de28fda1022e95a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834950204,"stop":1761834950204,"duration":0}},{"uid":"8ede4fc60b40dcbb","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/8ede4fc60b40dcbb","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834497970,"stop":1761834497970,"duration":0}},{"uid":"8a117182c02fe3fe","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/8a117182c02fe3fe","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833327598,"stop":1761833327598,"duration":0}},{"uid":"98b9801c27bfb7ff","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/98b9801c27bfb7ff","status":"passed","time":{"start":1761821505905,"stop":1761821506370,"duration":465}},{"uid":"e2ad981c546b264","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/e2ad981c546b264","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818627883,"stop":1761818627883,"duration":0}},{"uid":"617adf76117d3e1a","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/617adf76117d3e1a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748512469,"stop":1761748512469,"duration":0}},{"uid":"1c1a727c8a401863","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/1c1a727c8a401863","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747772051,"stop":1761747772051,"duration":0}},{"uid":"10d31df48bf9975b","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/10d31df48bf9975b","status":"passed","time":{"start":1761746622803,"stop":1761746623427,"duration":624}},{"uid":"216090cedbe1ef55","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/216090cedbe1ef55","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745637340,"stop":1761745637340,"duration":0}},{"uid":"b259df48eb4dfa5","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/b259df48eb4dfa5","status":"passed","time":{"start":1761576497369,"stop":1761576497823,"duration":454}},{"uid":"d1f4b07ca79821b4","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/d1f4b07ca79821b4","status":"passed","time":{"start":1761557153802,"stop":1761557154222,"duration":420}},{"uid":"c43bd6977067e7fd","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/c43bd6977067e7fd","status":"passed","time":{"start":1761308377980,"stop":1761308378412,"duration":432}},{"uid":"b2ccb9669a21fbe0","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/b2ccb9669a21fbe0","status":"passed","time":{"start":1761306526696,"stop":1761306527138,"duration":442}},{"uid":"e7f4a502f88845fe","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/e7f4a502f88845fe","status":"passed","time":{"start":1761136820704,"stop":1761136821168,"duration":464}},{"uid":"ab2e07bfa2857594","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/ab2e07bfa2857594","status":"passed","time":{"start":1761135473639,"stop":1761135474420,"duration":781}},{"uid":"f2d8678c2a9c698d","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/f2d8678c2a9c698d","status":"passed","time":{"start":1761133938315,"stop":1761133938750,"duration":435}},{"uid":"6663472ca6e8818","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/6663472ca6e8818","status":"passed","time":{"start":1761128238941,"stop":1761128239475,"duration":534}}]},"tags":["backend"]},"source":"5f4189eafdecb148.json","parameterValues":[]}