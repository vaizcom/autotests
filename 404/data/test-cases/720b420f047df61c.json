{"uid":"720b420f047df61c","name":"Редактирование борды: изменение имени через /EditBoard","fullName":"tests.test_backend.board.test_create_board#test_edit_board_name","historyId":"d90d058146779dc8e8a15d006ed847c8","time":{"start":1761912081244,"stop":1761912081244,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761912080667,"stop":1761912081009,"duration":342},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.board"},{"name":"suite","value":"test_create_board"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.board.test_create_board"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":54},"items":[{"uid":"b855370779661bdc","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/b855370779661bdc","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911172948,"stop":1761911172948,"duration":0}},{"uid":"9259c2c38e51e27","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/9259c2c38e51e27","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910801780,"stop":1761910801780,"duration":0}},{"uid":"71c8ac6d1b6f46b2","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/71c8ac6d1b6f46b2","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910504123,"stop":1761910504123,"duration":0}},{"uid":"ecf62c056d081556","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/ecf62c056d081556","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761909867153,"stop":1761909867153,"duration":0}},{"uid":"3c7f9ec396a8226c","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/3c7f9ec396a8226c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761899901082,"stop":1761899901082,"duration":0}},{"uid":"966146e1adf86cd6","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/966146e1adf86cd6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834950068,"stop":1761834950068,"duration":0}},{"uid":"2fa4e70071491800","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/2fa4e70071491800","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834497820,"stop":1761834497820,"duration":0}},{"uid":"6d926a9376f73e7a","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/6d926a9376f73e7a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833327473,"stop":1761833327473,"duration":0}},{"uid":"ea4e8149b1b69ce3","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/ea4e8149b1b69ce3","status":"passed","time":{"start":1761821498911,"stop":1761821499340,"duration":429}},{"uid":"3f76f1772ead639","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/3f76f1772ead639","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818627751,"stop":1761818627751,"duration":0}},{"uid":"cb846ade36301bbf","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/cb846ade36301bbf","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748512334,"stop":1761748512334,"duration":0}},{"uid":"be945930691d801","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/be945930691d801","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747771921,"stop":1761747771921,"duration":0}},{"uid":"822cc5167b1ac84d","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/822cc5167b1ac84d","status":"passed","time":{"start":1761746613441,"stop":1761746614061,"duration":620}},{"uid":"8fbd7a1c385261f9","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/8fbd7a1c385261f9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745637207,"stop":1761745637207,"duration":0}},{"uid":"f498645591a2a385","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/f498645591a2a385","status":"passed","time":{"start":1761576490152,"stop":1761576490605,"duration":453}},{"uid":"ffc91e98dc6bd58a","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/ffc91e98dc6bd58a","status":"passed","time":{"start":1761557147241,"stop":1761557147693,"duration":452}},{"uid":"d89af460e2d8cb30","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/d89af460e2d8cb30","status":"passed","time":{"start":1761308371456,"stop":1761308371878,"duration":422}},{"uid":"b3bf148c61a5cd84","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/b3bf148c61a5cd84","status":"passed","time":{"start":1761306519239,"stop":1761306519662,"duration":423}},{"uid":"cd254ea46af90d25","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/cd254ea46af90d25","status":"passed","time":{"start":1761136813569,"stop":1761136814029,"duration":460}},{"uid":"89fc7e471424a910","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/89fc7e471424a910","status":"passed","time":{"start":1761135465569,"stop":1761135466105,"duration":536}}]},"tags":["backend"]},"source":"720b420f047df61c.json","parameterValues":[]}