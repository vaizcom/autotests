{"uid":"d412a7553e82aca9","name":"test_board_group_name_validation[None value]","fullName":"tests.test_backend.board.board_validation_test#test_board_group_name_validation","historyId":"fa1f3b5edbb2fbaa58a7711b64f3c603","time":{"start":1761910503958,"stop":1761910503958,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fce4b119550>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910495818,"stop":1761910495819,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910495819,"stop":1761910496047,"duration":228},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761910503762,"stop":1761910503877,"duration":115},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.board"},{"name":"suite","value":"board_validation_test"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.board.board_validation_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"400"},{"name":"name","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":10,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":51},"items":[{"uid":"9c2dfffc781f8828","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/9c2dfffc781f8828","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761909866986,"stop":1761909866986,"duration":0}},{"uid":"c57e3040404aec15","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/c57e3040404aec15","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761899900921,"stop":1761899900921,"duration":0}},{"uid":"413492d84e89bab1","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/413492d84e89bab1","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834949903,"stop":1761834949903,"duration":0}},{"uid":"66c0476e94042112","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/66c0476e94042112","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834497624,"stop":1761834497624,"duration":0}},{"uid":"76f2b2e27f421db4","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/76f2b2e27f421db4","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833327330,"stop":1761833327330,"duration":0}},{"uid":"a356b92b33892111","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/a356b92b33892111","status":"passed","time":{"start":1761821493963,"stop":1761821494152,"duration":189}},{"uid":"7f914005fe7528ed","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/7f914005fe7528ed","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818627591,"stop":1761818627591,"duration":0}},{"uid":"8037d0dba28c2501","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/8037d0dba28c2501","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748512172,"stop":1761748512172,"duration":0}},{"uid":"d5d2ef001ba21710","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/d5d2ef001ba21710","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747771758,"stop":1761747771758,"duration":0}},{"uid":"da9814a31e827101","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/da9814a31e827101","status":"passed","time":{"start":1761746604749,"stop":1761746605040,"duration":291}},{"uid":"21125122eada5aa7","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/21125122eada5aa7","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745637045,"stop":1761745637045,"duration":0}},{"uid":"fd552d48cfa0b754","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/fd552d48cfa0b754","status":"passed","time":{"start":1761576484177,"stop":1761576484407,"duration":230}},{"uid":"f52f07a28cffdeb","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/f52f07a28cffdeb","status":"passed","time":{"start":1761557141847,"stop":1761557142033,"duration":186}},{"uid":"7d0cc0a5ec478e67","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/7d0cc0a5ec478e67","status":"passed","time":{"start":1761308365426,"stop":1761308365996,"duration":570}},{"uid":"d1878424ac77d797","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/d1878424ac77d797","status":"passed","time":{"start":1761306512934,"stop":1761306513152,"duration":218}},{"uid":"8f2b887aaa5d2372","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/8f2b887aaa5d2372","status":"passed","time":{"start":1761136807690,"stop":1761136807902,"duration":212}},{"uid":"b389bcbe22df3897","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/b389bcbe22df3897","status":"passed","time":{"start":1761135458952,"stop":1761135459194,"duration":242}},{"uid":"3ec392c695480c8c","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/3ec392c695480c8c","status":"passed","time":{"start":1761133925249,"stop":1761133925447,"duration":198}},{"uid":"e2a2558126a16179","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/e2a2558126a16179","status":"passed","time":{"start":1761128222838,"stop":1761128223097,"duration":259}},{"uid":"f0b190b36a1868b8","reportUrl":"https://vaizcom.github.io/autotests/383//#testresult/f0b190b36a1868b8","status":"passed","time":{"start":1761124326733,"stop":1761124326992,"duration":259}}]},"tags":["backend"]},"source":"d412a7553e82aca9.json","parameterValues":["400","None"]}