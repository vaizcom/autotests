{"uid":"b7687e702a0ce989","name":"Редактирование кастомного поля типа: Number","fullName":"tests.test_backend.board.test_create_board#test_edit_custom_field_common_fields","historyId":"61b7d9ca3ba2e9ca2c263980149c1d91","time":{"start":1761910801876,"stop":1761910801876,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f1c6962ef90>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910792963,"stop":1761910793391,"duration":428},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761910801404,"stop":1761910801539,"duration":135},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.board"},{"name":"suite","value":"test_create_board"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2545-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.board.test_create_board"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"field_type","value":"'Number'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":52},"items":[{"uid":"7fbb4005a5c81747","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/7fbb4005a5c81747","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910504218,"stop":1761910504218,"duration":0}},{"uid":"e2d295411ad5db1b","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/e2d295411ad5db1b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761909867252,"stop":1761909867252,"duration":0}},{"uid":"bed1c192db3291e2","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/bed1c192db3291e2","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761899901176,"stop":1761899901176,"duration":0}},{"uid":"60ee88bbd8fec3a8","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/60ee88bbd8fec3a8","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834950161,"stop":1761834950161,"duration":0}},{"uid":"16e6f6c2f4ede21f","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/16e6f6c2f4ede21f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834497924,"stop":1761834497924,"duration":0}},{"uid":"11d7ad02665c4e36","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/11d7ad02665c4e36","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833327560,"stop":1761833327560,"duration":0}},{"uid":"9a28dc4188d3b76d","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/9a28dc4188d3b76d","status":"passed","time":{"start":1761821503151,"stop":1761821503593,"duration":442}},{"uid":"ffcb4a0bd5fe9195","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/ffcb4a0bd5fe9195","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818627841,"stop":1761818627841,"duration":0}},{"uid":"10d561d97baf8e81","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/10d561d97baf8e81","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748512426,"stop":1761748512426,"duration":0}},{"uid":"6bef845345a76347","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/6bef845345a76347","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747772008,"stop":1761747772008,"duration":0}},{"uid":"600261203a2d3ea2","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/600261203a2d3ea2","status":"passed","time":{"start":1761746618904,"stop":1761746619540,"duration":636}},{"uid":"edcac6ebf323a7df","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/edcac6ebf323a7df","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745637298,"stop":1761745637298,"duration":0}},{"uid":"eab48ddffda0560d","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/eab48ddffda0560d","status":"passed","time":{"start":1761576494553,"stop":1761576495011,"duration":458}},{"uid":"b59f92bdcbfc2d86","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/b59f92bdcbfc2d86","status":"passed","time":{"start":1761557151055,"stop":1761557151518,"duration":463}},{"uid":"a2925f09f9c24ff2","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/a2925f09f9c24ff2","status":"passed","time":{"start":1761308375320,"stop":1761308375743,"duration":423}},{"uid":"5b734d407748ede1","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/5b734d407748ede1","status":"passed","time":{"start":1761306523232,"stop":1761306523698,"duration":466}},{"uid":"5130006bc812c2fb","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/5130006bc812c2fb","status":"passed","time":{"start":1761136817734,"stop":1761136818240,"duration":506}},{"uid":"5bebc4b9c944c476","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/5bebc4b9c944c476","status":"passed","time":{"start":1761135470266,"stop":1761135470877,"duration":611}},{"uid":"1a809ae0eabbf6b0","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/1a809ae0eabbf6b0","status":"passed","time":{"start":1761133935351,"stop":1761133935832,"duration":481}},{"uid":"165f363de5e91759","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/165f363de5e91759","status":"passed","time":{"start":1761128235257,"stop":1761128235827,"duration":570}}]},"tags":["backend"]},"source":"b7687e702a0ce989.json","parameterValues":["'Number'"]}