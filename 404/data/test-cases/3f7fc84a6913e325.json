{"uid":"3f7fc84a6913e325","name":"test_duplicate_document_invalid_id[empty]","fullName":"tests.test_backend.document.test_duplicate_document#test_duplicate_document_invalid_id","historyId":"c1d175c57f3350765ee0c3fefddd3d1e","time":{"start":1761921878641,"stop":1761921878641,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fc7d133bfd0>\n\n    @pytest.fixture(scope='function')\n    def space_id_function(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:228: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761921763685,"stop":1761921763685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761921763685,"stop":1761921764117,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"space_id_function","time":{"start":1761921878641,"stop":1761921878764,"duration":123},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 228, in space_id_function\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_duplicate_document"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2549-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_duplicate_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"400"},{"name":"fake_id","value":"''"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":55},"items":[{"uid":"b9bdcb78f9541021","reportUrl":"https://vaizcom.github.io/autotests/404//#testresult/b9bdcb78f9541021","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761912189488,"stop":1761912189488,"duration":0}},{"uid":"61b30fe79e097c05","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/61b30fe79e097c05","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911301993,"stop":1761911301993,"duration":0}},{"uid":"daf5ec24f9e035b8","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/daf5ec24f9e035b8","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910912701,"stop":1761910912701,"duration":0}},{"uid":"3f6d89b4029f8cc2","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/3f6d89b4029f8cc2","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910614458,"stop":1761910614458,"duration":0}},{"uid":"69d8c4faaf0e0b3e","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/69d8c4faaf0e0b3e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910007013,"stop":1761910007013,"duration":0}},{"uid":"f0a4afbb6f212f00","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/f0a4afbb6f212f00","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900037983,"stop":1761900037983,"duration":0}},{"uid":"790ee3e0aec77704","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/790ee3e0aec77704","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835058848,"stop":1761835058848,"duration":0}},{"uid":"a250c1488fd15192","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/a250c1488fd15192","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834643197,"stop":1761834643197,"duration":0}},{"uid":"f041dfa7764af8b6","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/f041dfa7764af8b6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833479205,"stop":1761833479205,"duration":0}},{"uid":"79dbb68ba9f38bdb","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/79dbb68ba9f38bdb","status":"passed","time":{"start":1761821727055,"stop":1761821727405,"duration":350}},{"uid":"8add93715fce78f","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/8add93715fce78f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818767484,"stop":1761818767484,"duration":0}},{"uid":"de864b6182e069b8","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/de864b6182e069b8","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748631668,"stop":1761748631668,"duration":0}},{"uid":"2cf583cfd1b3f6c5","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/2cf583cfd1b3f6c5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747907514,"stop":1761747907514,"duration":0}},{"uid":"6373f2c3f409a9b4","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/6373f2c3f409a9b4","status":"passed","time":{"start":1761746895763,"stop":1761746896136,"duration":373}},{"uid":"e459391e1c7a50e1","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/e459391e1c7a50e1","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745739881,"stop":1761745739881,"duration":0}},{"uid":"887d155a973ee6e9","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/887d155a973ee6e9","status":"passed","time":{"start":1761576730103,"stop":1761576730607,"duration":504}},{"uid":"41536e5a256472cb","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/41536e5a256472cb","status":"passed","time":{"start":1761557376154,"stop":1761557376529,"duration":375}},{"uid":"706fa653ba6d5472","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/706fa653ba6d5472","status":"passed","time":{"start":1761308599768,"stop":1761308600121,"duration":353}},{"uid":"b8795c9f2b5875f3","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/b8795c9f2b5875f3","status":"passed","time":{"start":1761306761577,"stop":1761306761958,"duration":381}},{"uid":"555e75db8e5259c","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/555e75db8e5259c","status":"passed","time":{"start":1761137055240,"stop":1761137055577,"duration":337}}]},"tags":["backend"]},"source":"3f7fc84a6913e325.json","parameterValues":["400","''"]}