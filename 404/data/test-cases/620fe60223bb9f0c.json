{"uid":"620fe60223bb9f0c","name":"test_edit_document_title_length[exceed_max-project]","fullName":"tests.test_backend.document.test_edit_document#test_edit_document_title_length","historyId":"0ed1baf1a519793a25c1e936bb4bc617","time":{"start":1761921879516,"stop":1761921879516,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fc7d133bfd0>\n\n    @pytest.fixture(scope='function')\n    def space_id_function(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:228: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761921763685,"stop":1761921763685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761921763685,"stop":1761921764117,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"space_id_function","time":{"start":1761921879516,"stop":1761921879635,"duration":119},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 228, in space_id_function\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_edit_document"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2549-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_edit_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"400"},{"name":"kind","value":"'Project'"},{"name":"kind_id_fixture","value":"'project_id_function'"},{"name":"length","value":"2049"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":55},"items":[{"uid":"856714603b9ade64","reportUrl":"https://vaizcom.github.io/autotests/404//#testresult/856714603b9ade64","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761912190502,"stop":1761912190502,"duration":0}},{"uid":"e919229e8af4e6b5","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/e919229e8af4e6b5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911303276,"stop":1761911303276,"duration":0}},{"uid":"2db6881803651d1e","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/2db6881803651d1e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910913657,"stop":1761910913657,"duration":0}},{"uid":"dd7d383373df2d8e","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/dd7d383373df2d8e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910615330,"stop":1761910615330,"duration":0}},{"uid":"639506bc9be9dc20","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/639506bc9be9dc20","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910008232,"stop":1761910008232,"duration":0}},{"uid":"de01d23dc0ea1531","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/de01d23dc0ea1531","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900039358,"stop":1761900039358,"duration":0}},{"uid":"ce5ec3d10e3a77e2","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/ce5ec3d10e3a77e2","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835059730,"stop":1761835059730,"duration":0}},{"uid":"efe3d9987f2c16b9","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/efe3d9987f2c16b9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834644559,"stop":1761834644559,"duration":0}},{"uid":"71c8b3d8f9322e38","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/71c8b3d8f9322e38","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833480980,"stop":1761833480980,"duration":0}},{"uid":"20b878c3ee9dcd9a","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/20b878c3ee9dcd9a","status":"passed","time":{"start":1761821746156,"stop":1761821747026,"duration":870}},{"uid":"4a3a23648af175ba","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/4a3a23648af175ba","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818769146,"stop":1761818769146,"duration":0}},{"uid":"7cf6c9dfa1afcf03","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/7cf6c9dfa1afcf03","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748632675,"stop":1761748632675,"duration":0}},{"uid":"6423bd0bd7a7d004","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/6423bd0bd7a7d004","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747908750,"stop":1761747908750,"duration":0}},{"uid":"8598025cec7a3f59","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/8598025cec7a3f59","status":"passed","time":{"start":1761746923332,"stop":1761746924372,"duration":1040}},{"uid":"3c0b677836c23d51","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/3c0b677836c23d51","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745740790,"stop":1761745740790,"duration":0}},{"uid":"8a5d7374b35501dd","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/8a5d7374b35501dd","status":"passed","time":{"start":1761576757190,"stop":1761576758261,"duration":1071}},{"uid":"61a7eb8a68e631b9","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/61a7eb8a68e631b9","status":"passed","time":{"start":1761557395440,"stop":1761557396328,"duration":888}},{"uid":"583400cca073eb54","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/583400cca073eb54","status":"passed","time":{"start":1761308618218,"stop":1761308619114,"duration":896}},{"uid":"2fad29370a5df05d","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/2fad29370a5df05d","status":"passed","time":{"start":1761306781144,"stop":1761306782242,"duration":1098}},{"uid":"3293ae06579a08e6","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/3293ae06579a08e6","status":"passed","time":{"start":1761137076033,"stop":1761137077103,"duration":1070}}]},"tags":["backend"]},"source":"620fe60223bb9f0c.json","parameterValues":["400","'Project'","'project_id_function'","2049"]}