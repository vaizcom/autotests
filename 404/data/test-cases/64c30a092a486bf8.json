{"uid":"64c30a092a486bf8","name":"Проверка доступа к siblings Project-документа: создатель - owner, просматривающий - guest","fullName":"tests.test_backend.document.access_doc.test_get_siblings_doc_access#test_get_project_and_space_siblings_docs_access_by_roles","historyId":"339fe7966dd3c33dd5485a5d65f8e095","time":{"start":1761921845897,"stop":1761921846013,"duration":116},"description":"\n    Проверяет доступ к siblings документов при разных комбинациях:\n    - Создателя документа\n    - Просматривающего пользователя\n    - Типа документа (Space/Project)\n\n    Проверки:\n        1. Создание трёх последовательных документов указанной ролью\n        2. Запрос siblings для среднего документа другой ролью\n        3. Проверка статуса ответа и корректности данных siblings\n    ","descriptionHtml":"<pre><code>Проверяет доступ к siblings документов при разных комбинациях:\n- Создателя документа\n- Просматривающего пользователя\n- Типа документа (Space/Project)\n\nПроверки:\n    1. Создание трёх последовательных документов указанной ролью\n    2. Запрос siblings для среднего документа другой ролью\n    3. Проверка статуса ответа и корректности данных siblings\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"request = <FixtureRequest for <Function test_get_project_and_space_siblings_docs_access_by_roles[project_doc-owner_docs_by_guest_403]>>\nmain_space = '6866309d85fb8d104544a61e', creator_fixture = 'owner_client'\nclient_fixture = 'guest_client', expected_status = 200, kind = 'Project'\ncontainer_fixture = 'main_project'\n\n    @pytest.mark.parametrize(\n        'creator_fixture, client_fixture, expected_status',\n        [\n            ('owner_client', 'owner_client', 200),\n            ('owner_client', 'manager_client', 200),\n            ('owner_client', 'member_client', 200),\n            ('owner_client', 'guest_client', 200),\n            ('manager_client', 'owner_client', 200),\n            ('manager_client', 'manager_client', 200),\n            ('manager_client', 'member_client', 200),\n            ('manager_client', 'guest_client', 200),\n            ('member_client', 'owner_client', 200),\n            ('member_client', 'manager_client', 200),\n            ('member_client', 'member_client', 200),\n            ('member_client', 'guest_client', 200),\n        ],\n        ids=[\n            'owner_self_docs_200',\n            'owner_docs_by_manager_403',\n            'owner_docs_by_member_403',\n            'owner_docs_by_guest_403',\n            'manager_docs_by_owner_403',\n            'manager_self_docs_200',\n            'manager_docs_by_member_403',\n            'manager_docs_by_guest_403',\n            'member_docs_by_owner_403',\n            'member_docs_by_manager_403',\n            'member_self_docs_200',\n            'member_docs_by_guest_403',\n        ],\n    )\n    @pytest.mark.parametrize(\n        'kind, container_fixture',\n        [\n            ('Space', 'main_space'),\n            ('Project', 'main_project'),\n        ],\n        ids=['space_doc', 'project_doc'],\n    )\n    def test_get_project_and_space_siblings_docs_access_by_roles(\n        request, main_space, creator_fixture, client_fixture, expected_status, kind, container_fixture\n    ):\n        \"\"\"\n        Проверяет доступ к siblings документов при разных комбинациях:\n        - Создателя документа\n        - Просматривающего пользователя\n        - Типа документа (Space/Project)\n    \n        Проверки:\n            1. Создание трёх последовательных документов указанной ролью\n            2. Запрос siblings для среднего документа другой ролью\n            3. Проверка статуса ответа и корректности данных siblings\n        \"\"\"\n        creator = request.getfixturevalue(creator_fixture)\n        viewer = request.getfixturevalue(client_fixture)\n        creator_role = creator_fixture.replace('_client', '')\n        viewer_role = client_fixture.replace('_client', '')\n        container_id = request.getfixturevalue(container_fixture)\n    \n        current_date = datetime.now().strftime('%d.%m_%H:%M:%S')\n    \n        allure.dynamic.title(\n            f'Проверка доступа к siblings {kind}-документа: создатель - {creator_role}, просматривающий - {viewer_role}'\n        )\n    \n        doc_ids = []\n        with allure.step(f'Создание трёх {kind}-документов пользователем {creator_role}'):\n            for index in range(3):\n                title = f'{current_date}_{creator_role}_{kind}_Doc_{index}'\n                create_resp = creator.post(\n                    **create_document_endpoint(kind=kind, kind_id=container_id, space_id=main_space, title=title)\n                )\n>               assert (\n                    create_resp.status_code == 200\n                ), f'Ошибка при создании документа {index}: статус {create_resp.status_code}'\nE               AssertionError: Ошибка при создании документа 0: статус 400\nE               assert 400 == 200\nE                +  where 400 = <Response [400]>.status_code\n\ntests/test_backend/document/access_doc/test_get_siblings_doc_access.py:86: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761921763685,"stop":1761921763685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761921763685,"stop":1761921764117,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1761921767245,"stop":1761921767518,"duration":273},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1761921767518,"stop":1761921767725,"duration":207},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_project","time":{"start":1761921767725,"stop":1761921768196,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"guest_client","time":{"start":1761921770374,"stop":1761921770656,"duration":282},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Проверяет доступ к siblings документов при разных комбинациях:\n    - Создателя документа\n    - Просматривающего пользователя\n    - Типа документа (Space/Project)\n\n    Проверки:\n        1. Создание трёх последовательных документов указанной ролью\n        2. Запрос siblings для среднего документа другой ролью\n        3. Проверка статуса ответа и корректности данных siblings\n    ","status":"failed","statusMessage":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"request = <FixtureRequest for <Function test_get_project_and_space_siblings_docs_access_by_roles[project_doc-owner_docs_by_guest_403]>>\nmain_space = '6866309d85fb8d104544a61e', creator_fixture = 'owner_client'\nclient_fixture = 'guest_client', expected_status = 200, kind = 'Project'\ncontainer_fixture = 'main_project'\n\n    @pytest.mark.parametrize(\n        'creator_fixture, client_fixture, expected_status',\n        [\n            ('owner_client', 'owner_client', 200),\n            ('owner_client', 'manager_client', 200),\n            ('owner_client', 'member_client', 200),\n            ('owner_client', 'guest_client', 200),\n            ('manager_client', 'owner_client', 200),\n            ('manager_client', 'manager_client', 200),\n            ('manager_client', 'member_client', 200),\n            ('manager_client', 'guest_client', 200),\n            ('member_client', 'owner_client', 200),\n            ('member_client', 'manager_client', 200),\n            ('member_client', 'member_client', 200),\n            ('member_client', 'guest_client', 200),\n        ],\n        ids=[\n            'owner_self_docs_200',\n            'owner_docs_by_manager_403',\n            'owner_docs_by_member_403',\n            'owner_docs_by_guest_403',\n            'manager_docs_by_owner_403',\n            'manager_self_docs_200',\n            'manager_docs_by_member_403',\n            'manager_docs_by_guest_403',\n            'member_docs_by_owner_403',\n            'member_docs_by_manager_403',\n            'member_self_docs_200',\n            'member_docs_by_guest_403',\n        ],\n    )\n    @pytest.mark.parametrize(\n        'kind, container_fixture',\n        [\n            ('Space', 'main_space'),\n            ('Project', 'main_project'),\n        ],\n        ids=['space_doc', 'project_doc'],\n    )\n    def test_get_project_and_space_siblings_docs_access_by_roles(\n        request, main_space, creator_fixture, client_fixture, expected_status, kind, container_fixture\n    ):\n        \"\"\"\n        Проверяет доступ к siblings документов при разных комбинациях:\n        - Создателя документа\n        - Просматривающего пользователя\n        - Типа документа (Space/Project)\n    \n        Проверки:\n            1. Создание трёх последовательных документов указанной ролью\n            2. Запрос siblings для среднего документа другой ролью\n            3. Проверка статуса ответа и корректности данных siblings\n        \"\"\"\n        creator = request.getfixturevalue(creator_fixture)\n        viewer = request.getfixturevalue(client_fixture)\n        creator_role = creator_fixture.replace('_client', '')\n        viewer_role = client_fixture.replace('_client', '')\n        container_id = request.getfixturevalue(container_fixture)\n    \n        current_date = datetime.now().strftime('%d.%m_%H:%M:%S')\n    \n        allure.dynamic.title(\n            f'Проверка доступа к siblings {kind}-документа: создатель - {creator_role}, просматривающий - {viewer_role}'\n        )\n    \n        doc_ids = []\n        with allure.step(f'Создание трёх {kind}-документов пользователем {creator_role}'):\n            for index in range(3):\n                title = f'{current_date}_{creator_role}_{kind}_Doc_{index}'\n                create_resp = creator.post(\n                    **create_document_endpoint(kind=kind, kind_id=container_id, space_id=main_space, title=title)\n                )\n>               assert (\n                    create_resp.status_code == 200\n                ), f'Ошибка при создании документа {index}: статус {create_resp.status_code}'\nE               AssertionError: Ошибка при создании документа 0: статус 400\nE               assert 400 == 200\nE                +  where 400 = <Response [400]>.status_code\n\ntests/test_backend/document/access_doc/test_get_siblings_doc_access.py:86: AssertionError","steps":[{"name":"Создание трёх Project-документов пользователем owner","time":{"start":1761921845897,"stop":1761921846013,"duration":116},"status":"failed","statusMessage":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/document/access_doc/test_get_siblings_doc_access.py\", line 86, in test_get_project_and_space_siblings_docs_access_by_roles\n    assert (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document.access_doc"},{"name":"suite","value":"test_get_siblings_doc_access"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2549-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.access_doc.test_get_siblings_doc_access"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"client_fixture","value":"'guest_client'"},{"name":"container_fixture","value":"'main_project'"},{"name":"creator_fixture","value":"'owner_client'"},{"name":"expected_status","value":"200"},{"name":"kind","value":"'Project'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":55},"items":[{"uid":"6c992bcb006f69f9","reportUrl":"https://vaizcom.github.io/autotests/404//#testresult/6c992bcb006f69f9","status":"failed","statusDetails":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761912156749,"stop":1761912156881,"duration":132}},{"uid":"88cd1ce7841465f1","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/88cd1ce7841465f1","status":"failed","statusDetails":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911262929,"stop":1761911263107,"duration":178}},{"uid":"ad8b5edd65ed1c84","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/ad8b5edd65ed1c84","status":"failed","statusDetails":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910879835,"stop":1761910879961,"duration":126}},{"uid":"eee8306f8d428f6b","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/eee8306f8d428f6b","status":"failed","statusDetails":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910580644,"stop":1761910581448,"duration":804}},{"uid":"9858be68a16f5900","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/9858be68a16f5900","status":"failed","statusDetails":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761909964447,"stop":1761909964628,"duration":181}},{"uid":"7eff756c50a79248","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/7eff756c50a79248","status":"failed","statusDetails":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761899994568,"stop":1761899994742,"duration":174}},{"uid":"5fb762b50b0ee33f","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/5fb762b50b0ee33f","status":"failed","statusDetails":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835025450,"stop":1761835025572,"duration":122}},{"uid":"9ac7fd375b1b3156","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/9ac7fd375b1b3156","status":"failed","statusDetails":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834598071,"stop":1761834598254,"duration":183}},{"uid":"fa880126148b1d3f","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/fa880126148b1d3f","status":"failed","statusDetails":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833433407,"stop":1761833433593,"duration":186}},{"uid":"eaf8b5abf05693","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/eaf8b5abf05693","status":"passed","time":{"start":1761821655928,"stop":1761821658131,"duration":2203}},{"uid":"742dd5e5d8b2ba2c","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/742dd5e5d8b2ba2c","status":"failed","statusDetails":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818728099,"stop":1761818728274,"duration":175}},{"uid":"646cfa52684d7907","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/646cfa52684d7907","status":"failed","statusDetails":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748594651,"stop":1761748594769,"duration":118}},{"uid":"148e45f9954fb788","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/148e45f9954fb788","status":"failed","statusDetails":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747865113,"stop":1761747865293,"duration":180}},{"uid":"f9440e95b6b8bbff","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/f9440e95b6b8bbff","status":"passed","time":{"start":1761746810932,"stop":1761746813123,"duration":2191}},{"uid":"686a152306b470cf","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/686a152306b470cf","status":"failed","statusDetails":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745707852,"stop":1761745707978,"duration":126}},{"uid":"1a6a613507832137","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/1a6a613507832137","status":"passed","time":{"start":1761576657612,"stop":1761576660194,"duration":2582}},{"uid":"23e159502dc11f24","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/23e159502dc11f24","status":"passed","time":{"start":1761557312081,"stop":1761557313702,"duration":1621}},{"uid":"8312672a834eed54","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/8312672a834eed54","status":"passed","time":{"start":1761308536364,"stop":1761308537998,"duration":1634}},{"uid":"86b0f2d24762223b","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/86b0f2d24762223b","status":"passed","time":{"start":1761306692693,"stop":1761306694573,"duration":1880}},{"uid":"6b40cf289a788fe8","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/6b40cf289a788fe8","status":"passed","time":{"start":1761136988587,"stop":1761136990439,"duration":1852}}]},"tags":["backend"]},"source":"64c30a092a486bf8.json","parameterValues":["'guest_client'","'main_project'","'owner_client'","200","'Project'"]}