{"uid":"7efa78423eb3c4e7","name":"Проверка доступа к siblings Project-документа: создатель - member, просматривающий - member","fullName":"tests.test_backend.document.access_doc.test_get_siblings_doc_access#test_get_project_and_space_siblings_docs_access_by_roles","historyId":"946e45102058751a2e74ae24a4d96f71","time":{"start":1759767525604,"stop":1759767525875,"duration":271},"description":"\n    Проверяет доступ к siblings документов при разных комбинациях:\n    - Создателя документа\n    - Просматривающего пользователя\n    - Типа документа (Space/Project)\n\n    Проверки:\n        1. Создание трёх последовательных документов указанной ролью\n        2. Запрос siblings для среднего документа другой ролью\n        3. Проверка статуса ответа и корректности данных siblings\n    ","descriptionHtml":"<pre><code>Проверяет доступ к siblings документов при разных комбинациях:\n- Создателя документа\n- Просматривающего пользователя\n- Типа документа (Space/Project)\n\nПроверки:\n    1. Создание трёх последовательных документов указанной ролью\n    2. Запрос siblings для среднего документа другой ролью\n    3. Проверка статуса ответа и корректности данных siblings\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"request = <FixtureRequest for <Function test_get_project_and_space_siblings_docs_access_by_roles[project_doc-member_self_docs_200]>>\nmain_space = '6866309d85fb8d104544a61e', creator_fixture = 'member_client'\nclient_fixture = 'member_client', expected_status = 200, kind = 'Project'\ncontainer_fixture = 'main_project'\n\n    @pytest.mark.parametrize(\n        'creator_fixture, client_fixture, expected_status',\n        [\n            ('owner_client', 'owner_client', 200),\n            ('owner_client', 'manager_client', 200),\n            ('owner_client', 'member_client', 200),\n            ('owner_client', 'guest_client', 200),\n            ('manager_client', 'owner_client', 200),\n            ('manager_client', 'manager_client', 200),\n            ('manager_client', 'member_client', 200),\n            ('manager_client', 'guest_client', 200),\n            ('member_client', 'owner_client', 200),\n            ('member_client', 'manager_client', 200),\n            ('member_client', 'member_client', 200),\n            ('member_client', 'guest_client', 200),\n        ],\n        ids=[\n            'owner_self_docs_200',\n            'owner_docs_by_manager_403',\n            'owner_docs_by_member_403',\n            'owner_docs_by_guest_403',\n            'manager_docs_by_owner_403',\n            'manager_self_docs_200',\n            'manager_docs_by_member_403',\n            'manager_docs_by_guest_403',\n            'member_docs_by_owner_403',\n            'member_docs_by_manager_403',\n            'member_self_docs_200',\n            'member_docs_by_guest_403',\n        ],\n    )\n    @pytest.mark.parametrize(\n        'kind, container_fixture',\n        [\n            ('Space', 'main_space'),\n            ('Project', 'main_project'),\n        ],\n        ids=['space_doc', 'project_doc'],\n    )\n    def test_get_project_and_space_siblings_docs_access_by_roles(\n        request, main_space, creator_fixture, client_fixture, expected_status, kind, container_fixture\n    ):\n        \"\"\"\n        Проверяет доступ к siblings документов при разных комбинациях:\n        - Создателя документа\n        - Просматривающего пользователя\n        - Типа документа (Space/Project)\n    \n        Проверки:\n            1. Создание трёх последовательных документов указанной ролью\n            2. Запрос siblings для среднего документа другой ролью\n            3. Проверка статуса ответа и корректности данных siblings\n        \"\"\"\n        creator = request.getfixturevalue(creator_fixture)\n        viewer = request.getfixturevalue(client_fixture)\n        creator_role = creator_fixture.replace('_client', '')\n        viewer_role = client_fixture.replace('_client', '')\n        container_id = request.getfixturevalue(container_fixture)\n    \n        current_date = datetime.now().strftime('%d.%m_%H:%M:%S')\n    \n        allure.dynamic.title(\n            f'Проверка доступа к siblings {kind}-документа: создатель - {creator_role}, просматривающий - {viewer_role}'\n        )\n    \n        doc_ids = []\n        with allure.step(f'Создание трёх {kind}-документов пользователем {creator_role}'):\n            for index in range(3):\n                title = f'{current_date}_{creator_role}_{kind}_Doc_{index}'\n                create_resp = creator.post(\n                    **create_document_endpoint(kind=kind, kind_id=container_id, space_id=main_space, title=title)\n                )\n>               assert (\n                    create_resp.status_code == 200\n                ), f'Ошибка при создании документа {index}: статус {create_resp.status_code}'\nE               AssertionError: Ошибка при создании документа 0: статус 400\nE               assert 400 == 200\nE                +  where 400 = <Response [400]>.status_code\n\ntests/test_backend/document/access_doc/test_get_siblings_doc_access.py:86: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1759767275032,"stop":1759767275032,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1759767275033,"stop":1759767275033,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1759767275033,"stop":1759767275033,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1759767275033,"stop":1759767275653,"duration":620},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1759767275033,"stop":1759767275033,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1759767275653,"stop":1759767276290,"duration":637},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_project","time":{"start":1759767276290,"stop":1759767276592,"duration":302},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"member_client","time":{"start":1759767279249,"stop":1759767279709,"duration":460},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Проверяет доступ к siblings документов при разных комбинациях:\n    - Создателя документа\n    - Просматривающего пользователя\n    - Типа документа (Space/Project)\n\n    Проверки:\n        1. Создание трёх последовательных документов указанной ролью\n        2. Запрос siblings для среднего документа другой ролью\n        3. Проверка статуса ответа и корректности данных siblings\n    ","status":"failed","statusMessage":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"request = <FixtureRequest for <Function test_get_project_and_space_siblings_docs_access_by_roles[project_doc-member_self_docs_200]>>\nmain_space = '6866309d85fb8d104544a61e', creator_fixture = 'member_client'\nclient_fixture = 'member_client', expected_status = 200, kind = 'Project'\ncontainer_fixture = 'main_project'\n\n    @pytest.mark.parametrize(\n        'creator_fixture, client_fixture, expected_status',\n        [\n            ('owner_client', 'owner_client', 200),\n            ('owner_client', 'manager_client', 200),\n            ('owner_client', 'member_client', 200),\n            ('owner_client', 'guest_client', 200),\n            ('manager_client', 'owner_client', 200),\n            ('manager_client', 'manager_client', 200),\n            ('manager_client', 'member_client', 200),\n            ('manager_client', 'guest_client', 200),\n            ('member_client', 'owner_client', 200),\n            ('member_client', 'manager_client', 200),\n            ('member_client', 'member_client', 200),\n            ('member_client', 'guest_client', 200),\n        ],\n        ids=[\n            'owner_self_docs_200',\n            'owner_docs_by_manager_403',\n            'owner_docs_by_member_403',\n            'owner_docs_by_guest_403',\n            'manager_docs_by_owner_403',\n            'manager_self_docs_200',\n            'manager_docs_by_member_403',\n            'manager_docs_by_guest_403',\n            'member_docs_by_owner_403',\n            'member_docs_by_manager_403',\n            'member_self_docs_200',\n            'member_docs_by_guest_403',\n        ],\n    )\n    @pytest.mark.parametrize(\n        'kind, container_fixture',\n        [\n            ('Space', 'main_space'),\n            ('Project', 'main_project'),\n        ],\n        ids=['space_doc', 'project_doc'],\n    )\n    def test_get_project_and_space_siblings_docs_access_by_roles(\n        request, main_space, creator_fixture, client_fixture, expected_status, kind, container_fixture\n    ):\n        \"\"\"\n        Проверяет доступ к siblings документов при разных комбинациях:\n        - Создателя документа\n        - Просматривающего пользователя\n        - Типа документа (Space/Project)\n    \n        Проверки:\n            1. Создание трёх последовательных документов указанной ролью\n            2. Запрос siblings для среднего документа другой ролью\n            3. Проверка статуса ответа и корректности данных siblings\n        \"\"\"\n        creator = request.getfixturevalue(creator_fixture)\n        viewer = request.getfixturevalue(client_fixture)\n        creator_role = creator_fixture.replace('_client', '')\n        viewer_role = client_fixture.replace('_client', '')\n        container_id = request.getfixturevalue(container_fixture)\n    \n        current_date = datetime.now().strftime('%d.%m_%H:%M:%S')\n    \n        allure.dynamic.title(\n            f'Проверка доступа к siblings {kind}-документа: создатель - {creator_role}, просматривающий - {viewer_role}'\n        )\n    \n        doc_ids = []\n        with allure.step(f'Создание трёх {kind}-документов пользователем {creator_role}'):\n            for index in range(3):\n                title = f'{current_date}_{creator_role}_{kind}_Doc_{index}'\n                create_resp = creator.post(\n                    **create_document_endpoint(kind=kind, kind_id=container_id, space_id=main_space, title=title)\n                )\n>               assert (\n                    create_resp.status_code == 200\n                ), f'Ошибка при создании документа {index}: статус {create_resp.status_code}'\nE               AssertionError: Ошибка при создании документа 0: статус 400\nE               assert 400 == 200\nE                +  where 400 = <Response [400]>.status_code\n\ntests/test_backend/document/access_doc/test_get_siblings_doc_access.py:86: AssertionError","steps":[{"name":"Создание трёх Project-документов пользователем member","time":{"start":1759767525604,"stop":1759767525874,"duration":270},"status":"failed","statusMessage":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/document/access_doc/test_get_siblings_doc_access.py\", line 86, in test_get_project_and_space_siblings_docs_access_by_roles\n    assert (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document.access_doc"},{"name":"suite","value":"test_get_siblings_doc_access"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2552-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.access_doc.test_get_siblings_doc_access"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"client_fixture","value":"'member_client'"},{"name":"container_fixture","value":"'main_project'"},{"name":"creator_fixture","value":"'member_client'"},{"name":"expected_status","value":"200"},{"name":"kind","value":"'Project'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":1,"skipped":0,"passed":33,"unknown":0,"total":35},"items":[{"uid":"611f985e7072f661","reportUrl":"https://vaizcom.github.io/autotests/343//#testresult/611f985e7072f661","status":"passed","time":{"start":1759767472997,"stop":1759767475070,"duration":2073}},{"uid":"5bca3781ee4ccf46","reportUrl":"https://vaizcom.github.io/autotests/341//#testresult/5bca3781ee4ccf46","status":"passed","time":{"start":1759753939989,"stop":1759753941757,"duration":1768}},{"uid":"f052931f2fb4f9bd","reportUrl":"https://vaizcom.github.io/autotests/340//#testresult/f052931f2fb4f9bd","status":"passed","time":{"start":1759743901117,"stop":1759743903450,"duration":2333}},{"uid":"d1cfdaf73d2e18be","reportUrl":"https://vaizcom.github.io/autotests/339//#testresult/d1cfdaf73d2e18be","status":"broken","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='api.vaiz.dev', port=443): Max retries exceeded with url: /v4/Login (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7fb5f6e8f010>, 'Connection to api.vaiz.dev timed out. (connect timeout=None)'))","time":{"start":1759485535542,"stop":1759485535542,"duration":0}},{"uid":"d9c333d39dcce548","reportUrl":"https://vaizcom.github.io/autotests/338//#testresult/d9c333d39dcce548","status":"passed","time":{"start":1759232527426,"stop":1759232529219,"duration":1793}},{"uid":"79c2cec09fc98cb5","reportUrl":"https://vaizcom.github.io/autotests/337//#testresult/79c2cec09fc98cb5","status":"passed","time":{"start":1759140808415,"stop":1759140810265,"duration":1850}},{"uid":"3dad308f1163d535","reportUrl":"https://vaizcom.github.io/autotests/335//#testresult/3dad308f1163d535","status":"passed","time":{"start":1758891887653,"stop":1758891889956,"duration":2303}},{"uid":"d9c30ee2384c0c52","reportUrl":"https://vaizcom.github.io/autotests/334//#testresult/d9c30ee2384c0c52","status":"passed","time":{"start":1758807839550,"stop":1758807843854,"duration":4304}},{"uid":"bc34413aadf8bdf1","reportUrl":"https://vaizcom.github.io/autotests/333//#testresult/bc34413aadf8bdf1","status":"passed","time":{"start":1758806714454,"stop":1758806716837,"duration":2383}},{"uid":"79406f3bdc56e2b7","reportUrl":"https://vaizcom.github.io/autotests/332//#testresult/79406f3bdc56e2b7","status":"passed","time":{"start":1758791293402,"stop":1758791295729,"duration":2327}},{"uid":"5db79547de09eee2","reportUrl":"https://vaizcom.github.io/autotests/331//#testresult/5db79547de09eee2","status":"passed","time":{"start":1758540599957,"stop":1758540604148,"duration":4191}},{"uid":"2e659354e6c828db","reportUrl":"https://vaizcom.github.io/autotests/330//#testresult/2e659354e6c828db","status":"passed","time":{"start":1758289237886,"stop":1758289240648,"duration":2762}},{"uid":"2be49f75a510dbc6","reportUrl":"https://vaizcom.github.io/autotests/329//#testresult/2be49f75a510dbc6","status":"passed","time":{"start":1755852398653,"stop":1755852400787,"duration":2134}},{"uid":"80268d87876601dc","reportUrl":"https://vaizcom.github.io/autotests/328//#testresult/80268d87876601dc","status":"passed","time":{"start":1755851907553,"stop":1755851909860,"duration":2307}},{"uid":"bdec7fd878833d0e","reportUrl":"https://vaizcom.github.io/autotests/327//#testresult/bdec7fd878833d0e","status":"passed","time":{"start":1755848047834,"stop":1755848050017,"duration":2183}},{"uid":"b95e1cc8f327e9c1","reportUrl":"https://vaizcom.github.io/autotests/326//#testresult/b95e1cc8f327e9c1","status":"passed","time":{"start":1755777916876,"stop":1755777919160,"duration":2284}},{"uid":"dce30ceb8290ce95","reportUrl":"https://vaizcom.github.io/autotests/325//#testresult/dce30ceb8290ce95","status":"passed","time":{"start":1755774551226,"stop":1755774553887,"duration":2661}},{"uid":"d883721de1c30355","reportUrl":"https://vaizcom.github.io/autotests/324//#testresult/d883721de1c30355","status":"passed","time":{"start":1755694685299,"stop":1755694688318,"duration":3019}},{"uid":"eebba83eb314caaf","reportUrl":"https://vaizcom.github.io/autotests/323//#testresult/eebba83eb314caaf","status":"passed","time":{"start":1755694113519,"stop":1755694116470,"duration":2951}},{"uid":"30d584b758289fb6","reportUrl":"https://vaizcom.github.io/autotests/322//#testresult/30d584b758289fb6","status":"passed","time":{"start":1755687181591,"stop":1755687183948,"duration":2357}}]},"tags":["backend"]},"source":"7efa78423eb3c4e7.json","parameterValues":["'member_client'","'main_project'","'member_client'","200","'Project'"]}