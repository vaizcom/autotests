{"uid":"aeba34bcef635f0","name":"test_create_document[Member]","fullName":"tests.test_backend.document.test_create_document#test_create_document","historyId":"6d0e9c42d11a5dd1635e9189ba9a6547","time":{"start":1761910613632,"stop":1761910613632,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fce4b119550>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910495818,"stop":1761910495819,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910495818,"stop":1761910495818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910495819,"stop":1761910496047,"duration":228},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761910503762,"stop":1761910503877,"duration":115},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_create_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_create_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"kind","value":"'Member'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":51},"items":[{"uid":"35fb9b7dd3dcf3d3","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/35fb9b7dd3dcf3d3","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910005492,"stop":1761910005492,"duration":0}},{"uid":"7cb8ecad7eea3ec6","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/7cb8ecad7eea3ec6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900036982,"stop":1761900036982,"duration":0}},{"uid":"906d56961aa12c21","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/906d56961aa12c21","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835057594,"stop":1761835057594,"duration":0}},{"uid":"ffbf4c06d766663b","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/ffbf4c06d766663b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834642082,"stop":1761834642082,"duration":0}},{"uid":"fcb5b3334f72abc5","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/fcb5b3334f72abc5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833478213,"stop":1761833478213,"duration":0}},{"uid":"f5113f94cb8b3670","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/f5113f94cb8b3670","status":"passed","time":{"start":1761821714445,"stop":1761821714692,"duration":247}},{"uid":"8ba27565f8d80c70","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/8ba27565f8d80c70","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818766467,"stop":1761818766467,"duration":0}},{"uid":"b8cfad96e9cdac32","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/b8cfad96e9cdac32","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748630250,"stop":1761748630250,"duration":0}},{"uid":"8d00bc53ff5027b1","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/8d00bc53ff5027b1","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747905792,"stop":1761747905792,"duration":0}},{"uid":"d390a86b1efa982","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/d390a86b1efa982","status":"passed","time":{"start":1761746877729,"stop":1761746878058,"duration":329}},{"uid":"8dbd0849cd63c445","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/8dbd0849cd63c445","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745738269,"stop":1761745738269,"duration":0}},{"uid":"6536ff91d56a43e6","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/6536ff91d56a43e6","status":"passed","time":{"start":1761576713026,"stop":1761576713395,"duration":369}},{"uid":"f82dad63f5acb3","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/f82dad63f5acb3","status":"passed","time":{"start":1761557363269,"stop":1761557363506,"duration":237}},{"uid":"679f297da63632d9","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/679f297da63632d9","status":"passed","time":{"start":1761308587437,"stop":1761308587673,"duration":236}},{"uid":"55fca4e94cdcb6cd","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/55fca4e94cdcb6cd","status":"passed","time":{"start":1761306748977,"stop":1761306749230,"duration":253}},{"uid":"ef9ed9d0a8cbf828","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/ef9ed9d0a8cbf828","status":"passed","time":{"start":1761137041982,"stop":1761137042243,"duration":261}},{"uid":"956497679d1c60ef","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/956497679d1c60ef","status":"passed","time":{"start":1761135719238,"stop":1761135719526,"duration":288}},{"uid":"2413542bd5559fb1","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/2413542bd5559fb1","status":"passed","time":{"start":1761134146454,"stop":1761134146702,"duration":248}},{"uid":"ea6eff1e81767e4a","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/ea6eff1e81767e4a","status":"passed","time":{"start":1761128507687,"stop":1761128507986,"duration":299}},{"uid":"8d9268ed5d915c49","reportUrl":"https://vaizcom.github.io/autotests/383//#testresult/8d9268ed5d915c49","status":"passed","time":{"start":1761124620181,"stop":1761124620596,"duration":415}}]},"tags":["backend"]},"source":"aeba34bcef635f0.json","parameterValues":["'Member'"]}