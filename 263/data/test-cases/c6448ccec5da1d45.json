{"uid":"c6448ccec5da1d45","name":"Создание борды с описанием максимальной длины(Поле отсутствует на фронте)","fullName":"tests.test_backend.board.board_validation_test#test_board_with_max_description","historyId":"4efd74d1deedf7d13f9f0c35a63e1045","time":{"start":1752047942029,"stop":1752047942029,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f60ac7d5290>\ntemp_space = '686e2144dc7db2861c816ae1'\n\n    @pytest.fixture(scope='session')\n    def temp_project(owner_client, temp_space):\n        \"\"\"Создаёт проект, который используется во всех тестах модуля.\"\"\"\n        name = generate_project_name()\n        slug = generate_slug()\n        common_kwargs = {'color': 'blue', 'icon': 'Dot', 'description': 'temporary project', 'space_id': temp_space}\n        response = owner_client.post(**create_project_endpoint(name=name, slug=slug, **common_kwargs))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:124: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1752047939816,"stop":1752047940592,"duration":776},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1752047940592,"stop":1752047941242,"duration":650},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_project","time":{"start":1752047941242,"stop":1752047941963,"duration":721},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 124, in temp_project\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[{"name":"temp_space::0","time":{"start":1752048136220,"stop":1752048136701,"duration":481},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.board"},{"name":"suite","value":"board_validation_test"},{"name":"host","value":"pkrvmfkh1xnbeme"},{"name":"thread","value":"2510-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.board.board_validation_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":105,"unknown":0,"total":106},"items":[{"uid":"5ee86c8762bbaa39","reportUrl":"https://vaizcom.github.io/autotests/262//#testresult/5ee86c8762bbaa39","status":"passed","time":{"start":1752046616046,"stop":1752046616377,"duration":331}},{"uid":"339fe5326246500c","reportUrl":"https://vaizcom.github.io/autotests/261//#testresult/339fe5326246500c","status":"passed","time":{"start":1752044606256,"stop":1752044606586,"duration":330}},{"uid":"65b0b6fb844cdcac","reportUrl":"https://vaizcom.github.io/autotests/260//#testresult/65b0b6fb844cdcac","status":"passed","time":{"start":1751982630896,"stop":1751982631131,"duration":235}},{"uid":"305bee53538f9beb","reportUrl":"https://vaizcom.github.io/autotests/259//#testresult/305bee53538f9beb","status":"passed","time":{"start":1751976085396,"stop":1751976085711,"duration":315}},{"uid":"a0627f66335efa1a","reportUrl":"https://vaizcom.github.io/autotests/258//#testresult/a0627f66335efa1a","status":"passed","time":{"start":1751975053659,"stop":1751975053911,"duration":252}},{"uid":"71c4064eac20779f","reportUrl":"https://vaizcom.github.io/autotests/257//#testresult/71c4064eac20779f","status":"passed","time":{"start":1751973343908,"stop":1751973344221,"duration":313}},{"uid":"71a06e40ff94d6a","reportUrl":"https://vaizcom.github.io/autotests/256//#testresult/71a06e40ff94d6a","status":"passed","time":{"start":1751971619948,"stop":1751971620217,"duration":269}},{"uid":"e1784787044e541d","reportUrl":"https://vaizcom.github.io/autotests/255//#testresult/e1784787044e541d","status":"passed","time":{"start":1751965011175,"stop":1751965011446,"duration":271}},{"uid":"e252eccf61ed5006","reportUrl":"https://vaizcom.github.io/autotests/254//#testresult/e252eccf61ed5006","status":"passed","time":{"start":1751959107156,"stop":1751959107422,"duration":266}},{"uid":"64ba068b35532b40","reportUrl":"https://vaizcom.github.io/autotests/253//#testresult/64ba068b35532b40","status":"passed","time":{"start":1751897221614,"stop":1751897221930,"duration":316}},{"uid":"d2d56eb69910111d","reportUrl":"https://vaizcom.github.io/autotests/252//#testresult/d2d56eb69910111d","status":"passed","time":{"start":1751893914877,"stop":1751893915186,"duration":309}},{"uid":"7f3341f1603a498e","reportUrl":"https://vaizcom.github.io/autotests/251//#testresult/7f3341f1603a498e","status":"passed","time":{"start":1751889612302,"stop":1751889612648,"duration":346}},{"uid":"738d94379ac42529","reportUrl":"https://vaizcom.github.io/autotests/250//#testresult/738d94379ac42529","status":"passed","time":{"start":1751888302569,"stop":1751888302827,"duration":258}},{"uid":"b74dd37681f877c2","reportUrl":"https://vaizcom.github.io/autotests/249//#testresult/b74dd37681f877c2","status":"passed","time":{"start":1751887695570,"stop":1751887695884,"duration":314}},{"uid":"dbf4a8ef574c891b","reportUrl":"https://vaizcom.github.io/autotests/248//#testresult/dbf4a8ef574c891b","status":"passed","time":{"start":1751884476860,"stop":1751884477147,"duration":287}},{"uid":"979757cc1275d3a1","reportUrl":"https://vaizcom.github.io/autotests/247//#testresult/979757cc1275d3a1","status":"passed","time":{"start":1751882728202,"stop":1751882728512,"duration":310}},{"uid":"a484ce9d67567999","reportUrl":"https://vaizcom.github.io/autotests/246//#testresult/a484ce9d67567999","status":"passed","time":{"start":1751534974991,"stop":1751534975305,"duration":314}},{"uid":"3c6024075ca40b3a","reportUrl":"https://vaizcom.github.io/autotests/245//#testresult/3c6024075ca40b3a","status":"passed","time":{"start":1751525369354,"stop":1751525369945,"duration":591}},{"uid":"319e5c5ca4e4a57c","reportUrl":"https://vaizcom.github.io/autotests/244//#testresult/319e5c5ca4e4a57c","status":"passed","time":{"start":1751463798169,"stop":1751463798422,"duration":253}},{"uid":"3c48b48fe5c0ca1a","reportUrl":"https://vaizcom.github.io/autotests/243//#testresult/3c48b48fe5c0ca1a","status":"passed","time":{"start":1751463506795,"stop":1751463507089,"duration":294}}]},"tags":["backend"]},"source":"c6448ccec5da1d45.json","parameterValues":[]}