{"uid":"edd921c47d4c2526","name":"Создание документа с различными значениями title — ожидаемый статус 200","fullName":"tests.test_backend.document.test_create_document#test_document_title_validation","historyId":"a9036867234e2c912ae6e6797b5ffc1d","time":{"start":1761921877238,"stop":1761921877238,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fc7d133bfd0>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761921763685,"stop":1761921763685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761921763685,"stop":1761921764117,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761921773063,"stop":1761921773182,"duration":119},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_create_document"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2549-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_create_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_actual_title","value":"'Untitled document'"},{"name":"expected_status","value":"200"},{"name":"title","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":55},"items":[{"uid":"70a395811bfd2241","reportUrl":"https://vaizcom.github.io/autotests/404//#testresult/70a395811bfd2241","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761912188158,"stop":1761912188158,"duration":0}},{"uid":"3da2f480943647e3","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/3da2f480943647e3","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911300098,"stop":1761911300098,"duration":0}},{"uid":"f9728063c8785e20","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/f9728063c8785e20","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910911763,"stop":1761910911763,"duration":0}},{"uid":"997483f12e8225d5","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/997483f12e8225d5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910613639,"stop":1761910613639,"duration":0}},{"uid":"220a3709be982106","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/220a3709be982106","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910005498,"stop":1761910005498,"duration":0}},{"uid":"688dc23d1cf55d8d","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/688dc23d1cf55d8d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900036989,"stop":1761900036989,"duration":0}},{"uid":"d48dcf4a9ac040c3","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/d48dcf4a9ac040c3","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835057601,"stop":1761835057601,"duration":0}},{"uid":"53fef781c069d30d","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/53fef781c069d30d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834642090,"stop":1761834642090,"duration":0}},{"uid":"f8fce86e4a45ff72","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/f8fce86e4a45ff72","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833478219,"stop":1761833478219,"duration":0}},{"uid":"fce50cd47bdf5b93","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/fce50cd47bdf5b93","status":"passed","time":{"start":1761821714694,"stop":1761821714938,"duration":244}},{"uid":"88afbc383cb5bcff","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/88afbc383cb5bcff","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818766473,"stop":1761818766473,"duration":0}},{"uid":"d05469a171d90f30","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/d05469a171d90f30","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748630257,"stop":1761748630257,"duration":0}},{"uid":"b443347f6028bc3d","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/b443347f6028bc3d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747905799,"stop":1761747905799,"duration":0}},{"uid":"9f4bd0c4c2e78119","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/9f4bd0c4c2e78119","status":"passed","time":{"start":1761746878060,"stop":1761746878387,"duration":327}},{"uid":"f3224ea266286966","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/f3224ea266286966","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745738276,"stop":1761745738276,"duration":0}},{"uid":"63011c2dd2eabcc6","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/63011c2dd2eabcc6","status":"passed","time":{"start":1761576713397,"stop":1761576713710,"duration":313}},{"uid":"2ed2f0d4e7ff2b3b","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/2ed2f0d4e7ff2b3b","status":"passed","time":{"start":1761557363508,"stop":1761557363730,"duration":222}},{"uid":"2bc074a13cc5a8e","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/2bc074a13cc5a8e","status":"passed","time":{"start":1761308587675,"stop":1761308587910,"duration":235}},{"uid":"9661c62ba060f2b3","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/9661c62ba060f2b3","status":"passed","time":{"start":1761306749233,"stop":1761306749479,"duration":246}},{"uid":"180b7e19d7c496c0","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/180b7e19d7c496c0","status":"passed","time":{"start":1761137042245,"stop":1761137042488,"duration":243}}]},"tags":["backend"]},"source":"edd921c47d4c2526.json","parameterValues":["'Untitled document'","200","None"]}