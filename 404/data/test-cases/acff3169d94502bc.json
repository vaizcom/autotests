{"uid":"acff3169d94502bc","name":"Создание документа с дублирующимся title","fullName":"tests.test_backend.document.test_create_document#test_document_title_duplicates","historyId":"cf03e04a8fea7f7804464f14c71e010d","time":{"start":1761921877361,"stop":1761921877361,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fc7d133bfd0>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761921763685,"stop":1761921763685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761921763685,"stop":1761921764117,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761921773063,"stop":1761921773182,"duration":119},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_create_document"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2549-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_create_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":55},"items":[{"uid":"7f9d12665106dbcc","reportUrl":"https://vaizcom.github.io/autotests/404//#testresult/7f9d12665106dbcc","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761912188277,"stop":1761912188277,"duration":0}},{"uid":"ed8739588c50ba71","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/ed8739588c50ba71","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911300219,"stop":1761911300219,"duration":0}},{"uid":"c1fd7f1b78f70099","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/c1fd7f1b78f70099","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910911900,"stop":1761910911900,"duration":0}},{"uid":"ca7c5c24b87660e0","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/ca7c5c24b87660e0","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910613759,"stop":1761910613759,"duration":0}},{"uid":"968bd3537b1fa6c2","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/968bd3537b1fa6c2","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910005622,"stop":1761910005622,"duration":0}},{"uid":"6328a65a660e53a1","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/6328a65a660e53a1","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900037110,"stop":1761900037110,"duration":0}},{"uid":"d09fa0447621605c","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/d09fa0447621605c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835057723,"stop":1761835057723,"duration":0}},{"uid":"adef496b41c85931","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/adef496b41c85931","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834642218,"stop":1761834642218,"duration":0}},{"uid":"c4ef6db485ec5090","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/c4ef6db485ec5090","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833478324,"stop":1761833478324,"duration":0}},{"uid":"e4b37184cdad2d53","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/e4b37184cdad2d53","status":"passed","time":{"start":1761821719233,"stop":1761821720127,"duration":894}},{"uid":"55d0ca364df15876","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/55d0ca364df15876","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818766593,"stop":1761818766593,"duration":0}},{"uid":"24411c099c114d08","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/24411c099c114d08","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748630377,"stop":1761748630377,"duration":0}},{"uid":"67fea86872466288","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/67fea86872466288","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747905921,"stop":1761747905921,"duration":0}},{"uid":"87ced0cc879d5d0d","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/87ced0cc879d5d0d","status":"passed","time":{"start":1761746885082,"stop":1761746885763,"duration":681}},{"uid":"2025c42ad2dd37e1","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/2025c42ad2dd37e1","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745738398,"stop":1761745738398,"duration":0}},{"uid":"ba71c93de7024ab1","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/ba71c93de7024ab1","status":"passed","time":{"start":1761576718880,"stop":1761576719481,"duration":601}},{"uid":"1c4e51cdf55a6694","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/1c4e51cdf55a6694","status":"passed","time":{"start":1761557368752,"stop":1761557369221,"duration":469}},{"uid":"947e947d3fb772e9","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/947e947d3fb772e9","status":"passed","time":{"start":1761308593347,"stop":1761308593828,"duration":481}},{"uid":"618839c4c4ece917","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/618839c4c4ece917","status":"passed","time":{"start":1761306754445,"stop":1761306754965,"duration":520}},{"uid":"6897e1440c182d12","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/6897e1440c182d12","status":"passed","time":{"start":1761137047508,"stop":1761137048004,"duration":496}}]},"tags":["backend"]},"source":"acff3169d94502bc.json","parameterValues":[]}