{"uid":"4eab34e3581d125e","name":"Несоответствие kind и kindId — kind=Space с kindId от Member","fullName":"tests.test_backend.document.test_get_documents#test_get_documents_mismatched_kind_and_id","historyId":"c6ebe153916ef8adca939bf2b8259299","time":{"start":1759837460083,"stop":1759837460251,"duration":168},"status":"failed","statusMessage":"AssertionError: assert 503 == 403\n +  where 503 = <Response [503]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f0d403af650>\ntemp_space = '68e4fbe2e49ce50caff67b74'\nrequest = <FixtureRequest for <Function test_get_documents_mismatched_kind_and_id[space-wrong-id]>>\nkind = 'Space', wrong_fixture = 'temp_member'\ncase_title = 'kind=Space с kindId от Member'\n\n    @pytest.mark.parametrize(\n        'kind, wrong_fixture, case_title',\n        [\n            ('Project', 'temp_member', 'kind=Project с kindId от Member'),\n            ('Member', 'temp_project', 'kind=Member с kindId от Project'),\n            ('Space', 'temp_member', 'kind=Space с kindId от Member'),\n        ],\n        ids=['project-wrong-id', 'member-wrong-id', 'space-wrong-id'],\n    )\n    def test_get_documents_mismatched_kind_and_id(owner_client, temp_space, request, kind, wrong_fixture, case_title):\n        kind_id = request.getfixturevalue(wrong_fixture)\n        allure.dynamic.title(f'Несоответствие kind и kindId — {case_title}')\n    \n        with allure.step(f'Отправка запроса с kind={kind} и kindId от {wrong_fixture}'):\n            response = owner_client.post(**get_documents_endpoint(kind=kind, kind_id=kind_id, space_id=temp_space))\n    \n        with allure.step('Ожидаем ошибку 403'):\n>           assert response.status_code == 403\nE           assert 503 == 403\nE            +  where 503 = <Response [503]>.status_code\n\ntests/test_backend/document/test_get_documents.py:210: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1759837147179,"stop":1759837147495,"duration":316},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1759837154550,"stop":1759837155711,"duration":1161},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_member","time":{"start":1759837202743,"stop":1759837203578,"duration":835},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 503 == 403\n +  where 503 = <Response [503]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f0d403af650>\ntemp_space = '68e4fbe2e49ce50caff67b74'\nrequest = <FixtureRequest for <Function test_get_documents_mismatched_kind_and_id[space-wrong-id]>>\nkind = 'Space', wrong_fixture = 'temp_member'\ncase_title = 'kind=Space с kindId от Member'\n\n    @pytest.mark.parametrize(\n        'kind, wrong_fixture, case_title',\n        [\n            ('Project', 'temp_member', 'kind=Project с kindId от Member'),\n            ('Member', 'temp_project', 'kind=Member с kindId от Project'),\n            ('Space', 'temp_member', 'kind=Space с kindId от Member'),\n        ],\n        ids=['project-wrong-id', 'member-wrong-id', 'space-wrong-id'],\n    )\n    def test_get_documents_mismatched_kind_and_id(owner_client, temp_space, request, kind, wrong_fixture, case_title):\n        kind_id = request.getfixturevalue(wrong_fixture)\n        allure.dynamic.title(f'Несоответствие kind и kindId — {case_title}')\n    \n        with allure.step(f'Отправка запроса с kind={kind} и kindId от {wrong_fixture}'):\n            response = owner_client.post(**get_documents_endpoint(kind=kind, kind_id=kind_id, space_id=temp_space))\n    \n        with allure.step('Ожидаем ошибку 403'):\n>           assert response.status_code == 403\nE           assert 503 == 403\nE            +  where 503 = <Response [503]>.status_code\n\ntests/test_backend/document/test_get_documents.py:210: AssertionError","steps":[{"name":"Отправка запроса с kind=Space и kindId от temp_member","time":{"start":1759837460083,"stop":1759837460251,"duration":168},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Ожидаем ошибку 403","time":{"start":1759837460251,"stop":1759837460251,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 503 == 403\n +  where 503 = <Response [503]>.status_code\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/document/test_get_documents.py\", line 210, in test_get_documents_mismatched_kind_and_id\n    assert response.status_code == 403\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[{"name":"temp_member::0","time":{"start":1759837469358,"stop":1759837469358,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space::0","time":{"start":1759837469360,"stop":1759837469533,"duration":173},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_documents"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2583-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_documents"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case_title","value":"'kind=Space с kindId от Member'"},{"name":"kind","value":"'Space'"},{"name":"wrong_fixture","value":"'temp_member'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":4},"items":[{"uid":"e0b47cf4392e925f","reportUrl":"https://vaizcom.github.io/autotests/355//#testresult/e0b47cf4392e925f","status":"passed","time":{"start":1759836316326,"stop":1759836316636,"duration":310}},{"uid":"845d83ac271c6ab6","reportUrl":"https://vaizcom.github.io/autotests/354//#testresult/845d83ac271c6ab6","status":"passed","time":{"start":1759835661551,"stop":1759835661739,"duration":188}},{"uid":"bc3d64031ecb1413","reportUrl":"https://vaizcom.github.io/autotests/353//#testresult/bc3d64031ecb1413","status":"passed","time":{"start":1759834780440,"stop":1759834780673,"duration":233}}]},"tags":["backend"]},"source":"4eab34e3581d125e.json","parameterValues":["'kind=Space с kindId от Member'","'Space'","'temp_member'"]}