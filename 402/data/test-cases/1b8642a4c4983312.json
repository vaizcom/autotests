{"uid":"1b8642a4c4983312","name":"Негативный тест: создание задачи с отрицательным индексом (index=-1) Ожидался статус 400","fullName":"tests.test_backend.task_service.create_task.test_task_indexing_in_group#test_create_task_with_negative_index_returns_error","historyId":"a42f33416a3a9a56b5892ae778c359ce","time":{"start":1761910931207,"stop":1761910931322,"duration":115},"description":"\n    Негативный тест: создание задачи с отрицательным индексом должно возвращать ошибку по полю index.\n    ","descriptionHtml":"<pre><code>Негативный тест: создание задачи с отрицательным индексом должно возвращать ошибку по полю index.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Ожидался code=InvalidForm, получено: JwtDoesNotExits\nassert 'JwtDoesNotExits' == 'InvalidForm'\n  \n  - InvalidForm\n  + JwtDoesNotExits","statusTrace":"request = <FixtureRequest for <Function test_create_task_with_negative_index_returns_error[-1]>>\nmain_space = '6866309d85fb8d104544a61e', main_board = '6866731185fb8d104544e826'\nnegative_index = -1\n\n    @allure.parent_suite(\"create_task\")\n    @allure.title(\"Негативный тест: создание задачи с отрицательным индексом должно возвращать ошибку по полю index.\")\n    @pytest.mark.parametrize(\"negative_index\", [-1, -10])\n    def test_create_task_with_negative_index_returns_error(\n        request, main_space, main_board, negative_index\n    ):\n        \"\"\"\n        Негативный тест: создание задачи с отрицательным индексом должно возвращать ошибку по полю index.\n        \"\"\"\n        allure.dynamic.title(f\"Негативный тест: создание задачи с отрицательным индексом (index={negative_index}) Ожидался статус 400\")\n        client = request.getfixturevalue(\"owner_client\")\n        payload = create_task_endpoint(\n            space_id=main_space,\n            board=main_board,\n            name=\"Test negative index\",\n            index=negative_index,\n        )\n        with allure.step(f\"Пробуем создать задачу с index={negative_index}\"):\n            response = client.post(**payload)\n    \n        with allure.step(\"Проверяем структуру и содержание ошибки\"):\n            assert response.status_code == 400, f\"Ожидался статус 400, получено {response.status_code}, ответ: {response.text}\"\n            body = response.json()\n            assert body.get(\"error\"), \"В ответе нет поля 'error'\"\n            error = body[\"error\"]\n>           assert error.get(\"code\") == \"InvalidForm\", f\"Ожидался code=InvalidForm, получено: {error.get('code')}\"\nE           AssertionError: Ожидался code=InvalidForm, получено: JwtDoesNotExits\nE           assert 'JwtDoesNotExits' == 'InvalidForm'\nE             \nE             - InvalidForm\nE             + JwtDoesNotExits\n\ntests/test_backend/task_service/create_task/test_task_indexing_in_group.py:134: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910792963,"stop":1761910793391,"duration":428},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1761910796070,"stop":1761910796305,"duration":235},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1761910796305,"stop":1761910796513,"duration":208},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_board","time":{"start":1761910799743,"stop":1761910800266,"duration":523},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Негативный тест: создание задачи с отрицательным индексом должно возвращать ошибку по полю index.\n    ","status":"failed","statusMessage":"AssertionError: Ожидался code=InvalidForm, получено: JwtDoesNotExits\nassert 'JwtDoesNotExits' == 'InvalidForm'\n  \n  - InvalidForm\n  + JwtDoesNotExits","statusTrace":"request = <FixtureRequest for <Function test_create_task_with_negative_index_returns_error[-1]>>\nmain_space = '6866309d85fb8d104544a61e', main_board = '6866731185fb8d104544e826'\nnegative_index = -1\n\n    @allure.parent_suite(\"create_task\")\n    @allure.title(\"Негативный тест: создание задачи с отрицательным индексом должно возвращать ошибку по полю index.\")\n    @pytest.mark.parametrize(\"negative_index\", [-1, -10])\n    def test_create_task_with_negative_index_returns_error(\n        request, main_space, main_board, negative_index\n    ):\n        \"\"\"\n        Негативный тест: создание задачи с отрицательным индексом должно возвращать ошибку по полю index.\n        \"\"\"\n        allure.dynamic.title(f\"Негативный тест: создание задачи с отрицательным индексом (index={negative_index}) Ожидался статус 400\")\n        client = request.getfixturevalue(\"owner_client\")\n        payload = create_task_endpoint(\n            space_id=main_space,\n            board=main_board,\n            name=\"Test negative index\",\n            index=negative_index,\n        )\n        with allure.step(f\"Пробуем создать задачу с index={negative_index}\"):\n            response = client.post(**payload)\n    \n        with allure.step(\"Проверяем структуру и содержание ошибки\"):\n            assert response.status_code == 400, f\"Ожидался статус 400, получено {response.status_code}, ответ: {response.text}\"\n            body = response.json()\n            assert body.get(\"error\"), \"В ответе нет поля 'error'\"\n            error = body[\"error\"]\n>           assert error.get(\"code\") == \"InvalidForm\", f\"Ожидался code=InvalidForm, получено: {error.get('code')}\"\nE           AssertionError: Ожидался code=InvalidForm, получено: JwtDoesNotExits\nE           assert 'JwtDoesNotExits' == 'InvalidForm'\nE             \nE             - InvalidForm\nE             + JwtDoesNotExits\n\ntests/test_backend/task_service/create_task/test_task_indexing_in_group.py:134: AssertionError","steps":[{"name":"Пробуем создать задачу с index=-1","time":{"start":1761910931207,"stop":1761910931322,"duration":115},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем структуру и содержание ошибки","time":{"start":1761910931322,"stop":1761910931322,"duration":0},"status":"failed","statusMessage":"AssertionError: Ожидался code=InvalidForm, получено: JwtDoesNotExits\nassert 'JwtDoesNotExits' == 'InvalidForm'\n  \n  - InvalidForm\n  + JwtDoesNotExits\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/task_service/create_task/test_task_indexing_in_group.py\", line 134, in test_create_task_with_negative_index_returns_error\n    assert error.get(\"code\") == \"InvalidForm\", f\"Ожидался code=InvalidForm, получено: {error.get('code')}\"\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"create_task"},{"name":"tag","value":"backend"},{"name":"suite","value":"test_task_indexing_in_group"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2545-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.task_service.create_task.test_task_indexing_in_group"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"negative_index","value":"-1"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":9,"unknown":0,"total":20},"items":[{"uid":"28215e5000facb28","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/28215e5000facb28","status":"failed","statusDetails":"AssertionError: Ожидался code=InvalidForm, получено: JwtDoesNotExits\nassert 'JwtDoesNotExits' == 'InvalidForm'\n  \n  - InvalidForm\n  + JwtDoesNotExits","time":{"start":1761910632544,"stop":1761910632677,"duration":133}},{"uid":"366e430d8f6486e6","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/366e430d8f6486e6","status":"failed","statusDetails":"AssertionError: Ожидался code=InvalidForm, получено: JwtDoesNotExits\nassert 'JwtDoesNotExits' == 'InvalidForm'\n  \n  - InvalidForm\n  + JwtDoesNotExits","time":{"start":1761910030570,"stop":1761910030742,"duration":172}},{"uid":"d969d33f15006ae2","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/d969d33f15006ae2","status":"failed","statusDetails":"AssertionError: Ожидался code=InvalidForm, получено: JwtDoesNotExits\nassert 'JwtDoesNotExits' == 'InvalidForm'\n  \n  - InvalidForm\n  + JwtDoesNotExits","time":{"start":1761900061932,"stop":1761900062120,"duration":188}},{"uid":"4bbb04d788af0a2a","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/4bbb04d788af0a2a","status":"failed","statusDetails":"AssertionError: Ожидался code=InvalidForm, получено: JwtDoesNotExits\nassert 'JwtDoesNotExits' == 'InvalidForm'\n  \n  - InvalidForm\n  + JwtDoesNotExits","time":{"start":1761835076255,"stop":1761835076374,"duration":119}},{"uid":"9a2e2275204bcee4","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/9a2e2275204bcee4","status":"failed","statusDetails":"AssertionError: Ожидался code=InvalidForm, получено: JwtDoesNotExits\nassert 'JwtDoesNotExits' == 'InvalidForm'\n  \n  - InvalidForm\n  + JwtDoesNotExits","time":{"start":1761834669462,"stop":1761834669667,"duration":205}},{"uid":"4dd5dfe30b62b908","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/4dd5dfe30b62b908","status":"failed","statusDetails":"AssertionError: Ожидался code=InvalidForm, получено: JwtDoesNotExits\nassert 'JwtDoesNotExits' == 'InvalidForm'\n  \n  - InvalidForm\n  + JwtDoesNotExits","time":{"start":1761833504180,"stop":1761833504357,"duration":177}},{"uid":"5a66bfe2305b1543","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/5a66bfe2305b1543","status":"passed","time":{"start":1761822028996,"stop":1761822029194,"duration":198}},{"uid":"eefd1b4922087eb5","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/eefd1b4922087eb5","status":"failed","statusDetails":"AssertionError: Ожидался code=InvalidForm, получено: JwtDoesNotExits\nassert 'JwtDoesNotExits' == 'InvalidForm'\n  \n  - InvalidForm\n  + JwtDoesNotExits","time":{"start":1761818790228,"stop":1761818790402,"duration":174}},{"uid":"26fa9c41c13383e5","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/26fa9c41c13383e5","status":"failed","statusDetails":"AssertionError: Ожидался code=InvalidForm, получено: JwtDoesNotExits\nassert 'JwtDoesNotExits' == 'InvalidForm'\n  \n  - InvalidForm\n  + JwtDoesNotExits","time":{"start":1761748650623,"stop":1761748650747,"duration":124}},{"uid":"ff1237c825967e4d","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/ff1237c825967e4d","status":"failed","statusDetails":"AssertionError: Ожидался code=InvalidForm, получено: JwtDoesNotExits\nassert 'JwtDoesNotExits' == 'InvalidForm'\n  \n  - InvalidForm\n  + JwtDoesNotExits","time":{"start":1761747928956,"stop":1761747929131,"duration":175}},{"uid":"b38f258ca6a2504","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/b38f258ca6a2504","status":"passed","time":{"start":1761747319793,"stop":1761747320085,"duration":292}},{"uid":"34810fc1e6864e2b","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/34810fc1e6864e2b","status":"failed","statusDetails":"AssertionError: Ожидался code=InvalidForm, получено: JwtDoesNotExits\nassert 'JwtDoesNotExits' == 'InvalidForm'\n  \n  - InvalidForm\n  + JwtDoesNotExits","time":{"start":1761745757270,"stop":1761745757389,"duration":119}},{"uid":"a48dc556784db355","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/a48dc556784db355","status":"passed","time":{"start":1761577103669,"stop":1761577103862,"duration":193}},{"uid":"9f874a9e69ab9671","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/9f874a9e69ab9671","status":"passed","time":{"start":1761557667365,"stop":1761557667548,"duration":183}},{"uid":"664c4070d475122a","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/664c4070d475122a","status":"passed","time":{"start":1761308919002,"stop":1761308919208,"duration":206}},{"uid":"f00aae9b254f042d","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/f00aae9b254f042d","status":"passed","time":{"start":1761307099672,"stop":1761307099858,"duration":186}},{"uid":"91768d5c74003713","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/91768d5c74003713","status":"passed","time":{"start":1761137388566,"stop":1761137388771,"duration":205}},{"uid":"357caf97eba5a56a","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/357caf97eba5a56a","status":"passed","time":{"start":1761136135119,"stop":1761136135337,"duration":218}},{"uid":"667bb265ddd2b959","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/667bb265ddd2b959","status":"passed","time":{"start":1761134508578,"stop":1761134508775,"duration":197}}]},"tags":["backend"]},"source":"1b8642a4c4983312.json","parameterValues":["-1"]}