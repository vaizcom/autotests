{"uid":"7cc5b525a3c269f","name":"Создание задачи на доске и проверка: группа, индекс и уникальность размещения","fullName":"tests.test_backend.task_service.create_task.test_create_task_on_board#test_create_task_and_verify_on_board","historyId":"2ef165c559faa11f7c7cfd08f28b076c","time":{"start":1761912203727,"stop":1761912203862,"duration":135},"description":"\n    Тест создает задачу с указанными бордой, группой и индексом=0, и проверяет:\n      - корректность задачи,\n      - что задача только в одной группе, нет дублей, верный индекс=0.\n      - random client_fixture\n    ","descriptionHtml":"<pre><code>Тест создает задачу с указанными бордой, группой и индексом=0, и проверяет:\n  - корректность задачи,\n  - что задача только в одной группе, нет дублей, верный индекс=0.\n  - random client_fixture\n</code></pre>\n","status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api.vaiz.dev/v4/GetBoard","statusTrace":"request = <FixtureRequest for <Function test_create_task_and_verify_on_board>>\ncreate_task_in_main = <function create_task_in_main.<locals>._create_task at 0x7f53e97dca40>\nmain_space = '6866309d85fb8d104544a61e', main_board = '6866731185fb8d104544e826'\n\n    @allure.parent_suite(\"create_task\")\n    @allure.title(\"Создание задачи на доске и проверка: группа, индекс и уникальность размещения\")\n    def test_create_task_and_verify_on_board(request, create_task_in_main, main_space, main_board):\n        \"\"\"\n        Тест создает задачу с указанными бордой, группой и индексом=0, и проверяет:\n          - корректность задачи,\n          - что задача только в одной группе, нет дублей, верный индекс=0.\n          - random client_fixture\n        \"\"\"\n        random_client = random.choice([\"owner_client\", \"manager_client\", \"member_client\"])\n        client = get_client(request, random_client)\n>       random_group_id = get_random_group_id(client, main_board, main_space)\n\ntests/test_backend/task_service/create_task/test_create_task_on_board.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_backend/task_service/create_task/utils.py:68: in get_random_group_id\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api.vaiz.dev/v4/GetBoard\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/requests/models.py:1024: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1761912076138,"stop":1761912076602,"duration":464},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1761912076602,"stop":1761912076805,"duration":203},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_project","time":{"start":1761912076805,"stop":1761912077004,"duration":199},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_board","time":{"start":1761912079197,"stop":1761912079397,"duration":200},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_task_in_main","time":{"start":1761912203726,"stop":1761912203726,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"create_task"},{"name":"tag","value":"backend"},{"name":"suite","value":"test_create_task_on_board"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.task_service.create_task.test_create_task_on_board"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":20,"unknown":0,"total":22},"items":[{"uid":"de182a7f32e0bba9","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/de182a7f32e0bba9","status":"passed","time":{"start":1761911318541,"stop":1761911320496,"duration":1955}},{"uid":"7d6da54e39fe4033","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/7d6da54e39fe4033","status":"passed","time":{"start":1761910927528,"stop":1761910928845,"duration":1317}},{"uid":"c2171bf9966afa86","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/c2171bf9966afa86","status":"passed","time":{"start":1761910628213,"stop":1761910629474,"duration":1261}},{"uid":"7fd95d2a06856134","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/7fd95d2a06856134","status":"passed","time":{"start":1761910024754,"stop":1761910026377,"duration":1623}},{"uid":"51a386007ea07655","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/51a386007ea07655","status":"passed","time":{"start":1761900056466,"stop":1761900058242,"duration":1776}},{"uid":"72699d132b1fe6a3","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/72699d132b1fe6a3","status":"passed","time":{"start":1761835072487,"stop":1761835073791,"duration":1304}},{"uid":"fda669d78c7c9210","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/fda669d78c7c9210","status":"passed","time":{"start":1761834662563,"stop":1761834664402,"duration":1839}},{"uid":"ddda449efc2d5a98","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/ddda449efc2d5a98","status":"passed","time":{"start":1761833498453,"stop":1761833500105,"duration":1652}},{"uid":"2f7cd231747c2e30","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/2f7cd231747c2e30","status":"passed","time":{"start":1761821851497,"stop":1761821852743,"duration":1246}},{"uid":"f4749ab3f88e7240","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/f4749ab3f88e7240","status":"passed","time":{"start":1761818784890,"stop":1761818786446,"duration":1556}},{"uid":"d4fefa321ccdc0fc","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/d4fefa321ccdc0fc","status":"passed","time":{"start":1761748646189,"stop":1761748648149,"duration":1960}},{"uid":"86d657e09b7c6608","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/86d657e09b7c6608","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetBoard","time":{"start":1761747925342,"stop":1761747925521,"duration":179}},{"uid":"a40b7c181f1a98b2","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/a40b7c181f1a98b2","status":"passed","time":{"start":1761747070723,"stop":1761747072327,"duration":1604}},{"uid":"949e0b79b1e3d7f0","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/949e0b79b1e3d7f0","status":"passed","time":{"start":1761745753588,"stop":1761745754853,"duration":1265}},{"uid":"ae62837cb331803f","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/ae62837cb331803f","status":"passed","time":{"start":1761576888220,"stop":1761576889910,"duration":1690}},{"uid":"4c6cc59c1a62920a","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/4c6cc59c1a62920a","status":"passed","time":{"start":1761557502149,"stop":1761557503369,"duration":1220}},{"uid":"205978cbb85d96ab","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/205978cbb85d96ab","status":"passed","time":{"start":1761308723044,"stop":1761308724795,"duration":1751}},{"uid":"fc3aff0602e03435","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/fc3aff0602e03435","status":"passed","time":{"start":1761306888495,"stop":1761306889849,"duration":1354}},{"uid":"56fbfddef7cf69b0","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/56fbfddef7cf69b0","status":"passed","time":{"start":1761137190050,"stop":1761137191626,"duration":1576}},{"uid":"72b5ecd17fc9726c","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/72b5ecd17fc9726c","status":"passed","time":{"start":1761135891301,"stop":1761135892869,"duration":1568}}]},"tags":["backend"]},"source":"7cc5b525a3c269f.json","parameterValues":[]}