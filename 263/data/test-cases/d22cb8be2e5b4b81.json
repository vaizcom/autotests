{"uid":"d22cb8be2e5b4b81","name":"test_board_name_validation[number instead of string]","fullName":"tests.test_backend.board.board_validation_test#test_board_name_validation","historyId":"fdd050a0a73de8a65c39da4819227ca8","time":{"start":1752047942017,"stop":1752047942017,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f60ac7d5290>\ntemp_space = '686e2144dc7db2861c816ae1'\n\n    @pytest.fixture(scope='session')\n    def temp_project(owner_client, temp_space):\n        \"\"\"Создаёт проект, который используется во всех тестах модуля.\"\"\"\n        name = generate_project_name()\n        slug = generate_slug()\n        common_kwargs = {'color': 'blue', 'icon': 'Dot', 'description': 'temporary project', 'space_id': temp_space}\n        response = owner_client.post(**create_project_endpoint(name=name, slug=slug, **common_kwargs))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:124: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1752047939816,"stop":1752047940592,"duration":776},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1752047940592,"stop":1752047941242,"duration":650},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_project","time":{"start":1752047941242,"stop":1752047941963,"duration":721},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 124, in temp_project\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[{"name":"temp_space::0","time":{"start":1752048136220,"stop":1752048136701,"duration":481},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.board"},{"name":"suite","value":"board_validation_test"},{"name":"host","value":"pkrvmfkh1xnbeme"},{"name":"thread","value":"2510-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.board.board_validation_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"400"},{"name":"name","value":"123"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":105,"unknown":0,"total":106},"items":[{"uid":"340d8356e52f1cba","reportUrl":"https://vaizcom.github.io/autotests/262//#testresult/340d8356e52f1cba","status":"passed","time":{"start":1752046615141,"stop":1752046615386,"duration":245}},{"uid":"26caf40002a90783","reportUrl":"https://vaizcom.github.io/autotests/261//#testresult/26caf40002a90783","status":"passed","time":{"start":1752044605449,"stop":1752044605946,"duration":497}},{"uid":"1e3e2f42d9f37846","reportUrl":"https://vaizcom.github.io/autotests/260//#testresult/1e3e2f42d9f37846","status":"passed","time":{"start":1751982630463,"stop":1751982630678,"duration":215}},{"uid":"31987166d443f47a","reportUrl":"https://vaizcom.github.io/autotests/259//#testresult/31987166d443f47a","status":"passed","time":{"start":1751976084837,"stop":1751976085112,"duration":275}},{"uid":"5aa1e62300f26564","reportUrl":"https://vaizcom.github.io/autotests/258//#testresult/5aa1e62300f26564","status":"passed","time":{"start":1751975053155,"stop":1751975053415,"duration":260}},{"uid":"9c2620b7124e5373","reportUrl":"https://vaizcom.github.io/autotests/257//#testresult/9c2620b7124e5373","status":"passed","time":{"start":1751973343461,"stop":1751973343687,"duration":226}},{"uid":"6406d044761786e8","reportUrl":"https://vaizcom.github.io/autotests/256//#testresult/6406d044761786e8","status":"passed","time":{"start":1751971619521,"stop":1751971619726,"duration":205}},{"uid":"980cd9651501cda4","reportUrl":"https://vaizcom.github.io/autotests/255//#testresult/980cd9651501cda4","status":"passed","time":{"start":1751965010214,"stop":1751965010478,"duration":264}},{"uid":"b0c38a6d57e9d449","reportUrl":"https://vaizcom.github.io/autotests/254//#testresult/b0c38a6d57e9d449","status":"passed","time":{"start":1751959106625,"stop":1751959106867,"duration":242}},{"uid":"c61c1b88413144e0","reportUrl":"https://vaizcom.github.io/autotests/253//#testresult/c61c1b88413144e0","status":"passed","time":{"start":1751897220993,"stop":1751897221275,"duration":282}},{"uid":"7077b4b9444710f8","reportUrl":"https://vaizcom.github.io/autotests/252//#testresult/7077b4b9444710f8","status":"passed","time":{"start":1751893914254,"stop":1751893914565,"duration":311}},{"uid":"f1eb713685da4987","reportUrl":"https://vaizcom.github.io/autotests/251//#testresult/f1eb713685da4987","status":"passed","time":{"start":1751889611411,"stop":1751889611926,"duration":515}},{"uid":"77b950e0a6b00e97","reportUrl":"https://vaizcom.github.io/autotests/250//#testresult/77b950e0a6b00e97","status":"passed","time":{"start":1751888302062,"stop":1751888302301,"duration":239}},{"uid":"317b5566dc92aea0","reportUrl":"https://vaizcom.github.io/autotests/249//#testresult/317b5566dc92aea0","status":"passed","time":{"start":1751887694884,"stop":1751887695252,"duration":368}},{"uid":"edfdcbeec6196588","reportUrl":"https://vaizcom.github.io/autotests/248//#testresult/edfdcbeec6196588","status":"passed","time":{"start":1751884476392,"stop":1751884476629,"duration":237}},{"uid":"ae3bb5c771ebf693","reportUrl":"https://vaizcom.github.io/autotests/247//#testresult/ae3bb5c771ebf693","status":"passed","time":{"start":1751882726800,"stop":1751882727088,"duration":288}},{"uid":"9dbc84f64684d816","reportUrl":"https://vaizcom.github.io/autotests/246//#testresult/9dbc84f64684d816","status":"passed","time":{"start":1751534974139,"stop":1751534974391,"duration":252}},{"uid":"825ef0eef4b18316","reportUrl":"https://vaizcom.github.io/autotests/245//#testresult/825ef0eef4b18316","status":"passed","time":{"start":1751525367050,"stop":1751525367749,"duration":699}},{"uid":"84cd35b1edab63f7","reportUrl":"https://vaizcom.github.io/autotests/244//#testresult/84cd35b1edab63f7","status":"passed","time":{"start":1751463797706,"stop":1751463797931,"duration":225}},{"uid":"b40bfb955f8426e7","reportUrl":"https://vaizcom.github.io/autotests/243//#testresult/b40bfb955f8426e7","status":"passed","time":{"start":1751463506245,"stop":1751463506504,"duration":259}}]},"tags":["backend"]},"source":"d22cb8be2e5b4b81.json","parameterValues":["400","123"]}