{"uid":"df55559b84ab722e","name":"Позитивный сценарий: успешный экспорт Y-Doc для документа. Space","fullName":"tests.test_backend.document.test_get_y_document#test_get_ydocument_success","historyId":"8819b582b1a92f0428523289981b23fb","time":{"start":1759837464310,"stop":1759837464485,"duration":175},"status":"failed","statusMessage":"AssertionError: Не удалось создать документ: <html>\r\n  <head><title>503 Service Temporarily Unavailable</title></head>\r\n  <body>\r\n  <center><h1>503 Service Temporarily Unavailable</h1></center>\r\n  <hr><center>nginx</center>\r\n  </body>\r\n  </html>\r\n  \nassert 503 == 200\n +  where 503 = <Response [503]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f0d403af650>\nrequest = <FixtureRequest for <Function test_get_ydocument_success[space]>>\nkind = 'Space', kind_id_fixture = 'temp_space'\ntemp_space = '68e4fbe2e49ce50caff67b74'\n\n    @pytest.mark.parametrize(\n        'kind, kind_id_fixture',\n        [\n            ('Project', 'temp_project'),\n            ('Space', 'temp_space'),\n            ('Member', 'temp_member'),\n        ],\n        ids=['project', 'space', 'member'],\n    )\n    def test_get_ydocument_success(owner_client, request, kind, kind_id_fixture, temp_space):\n        allure.dynamic.title(f'Позитивный сценарий: успешный экспорт Y-Doc для документа. {kind}')\n        kind_id = request.getfixturevalue(kind_id_fixture)\n    \n        with allure.step('Создаем документ'):\n            resp = owner_client.post(\n                **create_document_endpoint(kind=kind, kind_id=kind_id, space_id=temp_space, title='TestYDoc')\n            )\n>           assert resp.status_code == 200, f'Не удалось создать документ: {resp.text}'\nE           AssertionError: Не удалось создать документ: <html>\r\nE             <head><title>503 Service Temporarily Unavailable</title></head>\r\nE             <body>\r\nE             <center><h1>503 Service Temporarily Unavailable</h1></center>\r\nE             <hr><center>nginx</center>\r\nE             </body>\r\nE             </html>\r\nE             \nE           assert 503 == 200\nE            +  where 503 = <Response [503]>.status_code\n\ntests/test_backend/document/test_get_y_document.py:29: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1759837147179,"stop":1759837147495,"duration":316},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1759837154550,"stop":1759837155711,"duration":1161},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Не удалось создать документ: <html>\r\n  <head><title>503 Service Temporarily Unavailable</title></head>\r\n  <body>\r\n  <center><h1>503 Service Temporarily Unavailable</h1></center>\r\n  <hr><center>nginx</center>\r\n  </body>\r\n  </html>\r\n  \nassert 503 == 200\n +  where 503 = <Response [503]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f0d403af650>\nrequest = <FixtureRequest for <Function test_get_ydocument_success[space]>>\nkind = 'Space', kind_id_fixture = 'temp_space'\ntemp_space = '68e4fbe2e49ce50caff67b74'\n\n    @pytest.mark.parametrize(\n        'kind, kind_id_fixture',\n        [\n            ('Project', 'temp_project'),\n            ('Space', 'temp_space'),\n            ('Member', 'temp_member'),\n        ],\n        ids=['project', 'space', 'member'],\n    )\n    def test_get_ydocument_success(owner_client, request, kind, kind_id_fixture, temp_space):\n        allure.dynamic.title(f'Позитивный сценарий: успешный экспорт Y-Doc для документа. {kind}')\n        kind_id = request.getfixturevalue(kind_id_fixture)\n    \n        with allure.step('Создаем документ'):\n            resp = owner_client.post(\n                **create_document_endpoint(kind=kind, kind_id=kind_id, space_id=temp_space, title='TestYDoc')\n            )\n>           assert resp.status_code == 200, f'Не удалось создать документ: {resp.text}'\nE           AssertionError: Не удалось создать документ: <html>\r\nE             <head><title>503 Service Temporarily Unavailable</title></head>\r\nE             <body>\r\nE             <center><h1>503 Service Temporarily Unavailable</h1></center>\r\nE             <hr><center>nginx</center>\r\nE             </body>\r\nE             </html>\r\nE             \nE           assert 503 == 200\nE            +  where 503 = <Response [503]>.status_code\n\ntests/test_backend/document/test_get_y_document.py:29: AssertionError","steps":[{"name":"Создаем документ","time":{"start":1759837464310,"stop":1759837464485,"duration":175},"status":"failed","statusMessage":"AssertionError: Не удалось создать документ: <html>\r\n  <head><title>503 Service Temporarily Unavailable</title></head>\r\n  <body>\r\n  <center><h1>503 Service Temporarily Unavailable</h1></center>\r\n  <hr><center>nginx</center>\r\n  </body>\r\n  </html>\r\n  \nassert 503 == 200\n +  where 503 = <Response [503]>.status_code\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/document/test_get_y_document.py\", line 29, in test_get_ydocument_success\n    assert resp.status_code == 200, f'Не удалось создать документ: {resp.text}'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[{"name":"temp_space::0","time":{"start":1759837469360,"stop":1759837469533,"duration":173},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_y_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2583-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_y_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"kind","value":"'Space'"},{"name":"kind_id_fixture","value":"'temp_space'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":4},"items":[{"uid":"cc0d1c798589cd20","reportUrl":"https://vaizcom.github.io/autotests/355//#testresult/cc0d1c798589cd20","status":"passed","time":{"start":1759836388840,"stop":1759836389450,"duration":610}},{"uid":"ef0f8b62e8743857","reportUrl":"https://vaizcom.github.io/autotests/354//#testresult/ef0f8b62e8743857","status":"passed","time":{"start":1759835721631,"stop":1759835722059,"duration":428}},{"uid":"f451bea891c6373b","reportUrl":"https://vaizcom.github.io/autotests/353//#testresult/f451bea891c6373b","status":"passed","time":{"start":1759834850831,"stop":1759834851361,"duration":530}}]},"tags":["backend"]},"source":"df55559b84ab722e.json","parameterValues":["'Space'","'temp_space'"]}