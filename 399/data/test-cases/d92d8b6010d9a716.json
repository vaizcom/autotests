{"uid":"d92d8b6010d9a716","name":"Проверка доступа к siblings Space-документа: создатель - owner, просматривающий - guest","fullName":"tests.test_backend.document.access_doc.test_get_siblings_doc_access#test_get_project_and_space_siblings_docs_access_by_roles","historyId":"2cb806c1c89fa89d0e2605e968158f2d","time":{"start":1761899980302,"stop":1761899980471,"duration":169},"description":"\n    Проверяет доступ к siblings документов при разных комбинациях:\n    - Создателя документа\n    - Просматривающего пользователя\n    - Типа документа (Space/Project)\n\n    Проверки:\n        1. Создание трёх последовательных документов указанной ролью\n        2. Запрос siblings для среднего документа другой ролью\n        3. Проверка статуса ответа и корректности данных siblings\n    ","descriptionHtml":"<pre><code>Проверяет доступ к siblings документов при разных комбинациях:\n- Создателя документа\n- Просматривающего пользователя\n- Типа документа (Space/Project)\n\nПроверки:\n    1. Создание трёх последовательных документов указанной ролью\n    2. Запрос siblings для среднего документа другой ролью\n    3. Проверка статуса ответа и корректности данных siblings\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"request = <FixtureRequest for <Function test_get_project_and_space_siblings_docs_access_by_roles[space_doc-owner_docs_by_guest_403]>>\nmain_space = '6866309d85fb8d104544a61e', creator_fixture = 'owner_client'\nclient_fixture = 'guest_client', expected_status = 200, kind = 'Space'\ncontainer_fixture = 'main_space'\n\n    @pytest.mark.parametrize(\n        'creator_fixture, client_fixture, expected_status',\n        [\n            ('owner_client', 'owner_client', 200),\n            ('owner_client', 'manager_client', 200),\n            ('owner_client', 'member_client', 200),\n            ('owner_client', 'guest_client', 200),\n            ('manager_client', 'owner_client', 200),\n            ('manager_client', 'manager_client', 200),\n            ('manager_client', 'member_client', 200),\n            ('manager_client', 'guest_client', 200),\n            ('member_client', 'owner_client', 200),\n            ('member_client', 'manager_client', 200),\n            ('member_client', 'member_client', 200),\n            ('member_client', 'guest_client', 200),\n        ],\n        ids=[\n            'owner_self_docs_200',\n            'owner_docs_by_manager_403',\n            'owner_docs_by_member_403',\n            'owner_docs_by_guest_403',\n            'manager_docs_by_owner_403',\n            'manager_self_docs_200',\n            'manager_docs_by_member_403',\n            'manager_docs_by_guest_403',\n            'member_docs_by_owner_403',\n            'member_docs_by_manager_403',\n            'member_self_docs_200',\n            'member_docs_by_guest_403',\n        ],\n    )\n    @pytest.mark.parametrize(\n        'kind, container_fixture',\n        [\n            ('Space', 'main_space'),\n            ('Project', 'main_project'),\n        ],\n        ids=['space_doc', 'project_doc'],\n    )\n    def test_get_project_and_space_siblings_docs_access_by_roles(\n        request, main_space, creator_fixture, client_fixture, expected_status, kind, container_fixture\n    ):\n        \"\"\"\n        Проверяет доступ к siblings документов при разных комбинациях:\n        - Создателя документа\n        - Просматривающего пользователя\n        - Типа документа (Space/Project)\n    \n        Проверки:\n            1. Создание трёх последовательных документов указанной ролью\n            2. Запрос siblings для среднего документа другой ролью\n            3. Проверка статуса ответа и корректности данных siblings\n        \"\"\"\n        creator = request.getfixturevalue(creator_fixture)\n        viewer = request.getfixturevalue(client_fixture)\n        creator_role = creator_fixture.replace('_client', '')\n        viewer_role = client_fixture.replace('_client', '')\n        container_id = request.getfixturevalue(container_fixture)\n    \n        current_date = datetime.now().strftime('%d.%m_%H:%M:%S')\n    \n        allure.dynamic.title(\n            f'Проверка доступа к siblings {kind}-документа: создатель - {creator_role}, просматривающий - {viewer_role}'\n        )\n    \n        doc_ids = []\n        with allure.step(f'Создание трёх {kind}-документов пользователем {creator_role}'):\n            for index in range(3):\n                title = f'{current_date}_{creator_role}_{kind}_Doc_{index}'\n                create_resp = creator.post(\n                    **create_document_endpoint(kind=kind, kind_id=container_id, space_id=main_space, title=title)\n                )\n>               assert (\n                    create_resp.status_code == 200\n                ), f'Ошибка при создании документа {index}: статус {create_resp.status_code}'\nE               AssertionError: Ошибка при создании документа 0: статус 400\nE               assert 400 == 200\nE                +  where 400 = <Response [400]>.status_code\n\ntests/test_backend/document/access_doc/test_get_siblings_doc_access.py:86: AssertionError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761899890641,"stop":1761899890641,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761899890642,"stop":1761899890642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761899890642,"stop":1761899890642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761899890642,"stop":1761899891240,"duration":598},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761899890642,"stop":1761899890642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1761899894466,"stop":1761899894790,"duration":324},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1761899894790,"stop":1761899895081,"duration":291},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"guest_client","time":{"start":1761899897887,"stop":1761899898164,"duration":277},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Проверяет доступ к siblings документов при разных комбинациях:\n    - Создателя документа\n    - Просматривающего пользователя\n    - Типа документа (Space/Project)\n\n    Проверки:\n        1. Создание трёх последовательных документов указанной ролью\n        2. Запрос siblings для среднего документа другой ролью\n        3. Проверка статуса ответа и корректности данных siblings\n    ","status":"failed","statusMessage":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"request = <FixtureRequest for <Function test_get_project_and_space_siblings_docs_access_by_roles[space_doc-owner_docs_by_guest_403]>>\nmain_space = '6866309d85fb8d104544a61e', creator_fixture = 'owner_client'\nclient_fixture = 'guest_client', expected_status = 200, kind = 'Space'\ncontainer_fixture = 'main_space'\n\n    @pytest.mark.parametrize(\n        'creator_fixture, client_fixture, expected_status',\n        [\n            ('owner_client', 'owner_client', 200),\n            ('owner_client', 'manager_client', 200),\n            ('owner_client', 'member_client', 200),\n            ('owner_client', 'guest_client', 200),\n            ('manager_client', 'owner_client', 200),\n            ('manager_client', 'manager_client', 200),\n            ('manager_client', 'member_client', 200),\n            ('manager_client', 'guest_client', 200),\n            ('member_client', 'owner_client', 200),\n            ('member_client', 'manager_client', 200),\n            ('member_client', 'member_client', 200),\n            ('member_client', 'guest_client', 200),\n        ],\n        ids=[\n            'owner_self_docs_200',\n            'owner_docs_by_manager_403',\n            'owner_docs_by_member_403',\n            'owner_docs_by_guest_403',\n            'manager_docs_by_owner_403',\n            'manager_self_docs_200',\n            'manager_docs_by_member_403',\n            'manager_docs_by_guest_403',\n            'member_docs_by_owner_403',\n            'member_docs_by_manager_403',\n            'member_self_docs_200',\n            'member_docs_by_guest_403',\n        ],\n    )\n    @pytest.mark.parametrize(\n        'kind, container_fixture',\n        [\n            ('Space', 'main_space'),\n            ('Project', 'main_project'),\n        ],\n        ids=['space_doc', 'project_doc'],\n    )\n    def test_get_project_and_space_siblings_docs_access_by_roles(\n        request, main_space, creator_fixture, client_fixture, expected_status, kind, container_fixture\n    ):\n        \"\"\"\n        Проверяет доступ к siblings документов при разных комбинациях:\n        - Создателя документа\n        - Просматривающего пользователя\n        - Типа документа (Space/Project)\n    \n        Проверки:\n            1. Создание трёх последовательных документов указанной ролью\n            2. Запрос siblings для среднего документа другой ролью\n            3. Проверка статуса ответа и корректности данных siblings\n        \"\"\"\n        creator = request.getfixturevalue(creator_fixture)\n        viewer = request.getfixturevalue(client_fixture)\n        creator_role = creator_fixture.replace('_client', '')\n        viewer_role = client_fixture.replace('_client', '')\n        container_id = request.getfixturevalue(container_fixture)\n    \n        current_date = datetime.now().strftime('%d.%m_%H:%M:%S')\n    \n        allure.dynamic.title(\n            f'Проверка доступа к siblings {kind}-документа: создатель - {creator_role}, просматривающий - {viewer_role}'\n        )\n    \n        doc_ids = []\n        with allure.step(f'Создание трёх {kind}-документов пользователем {creator_role}'):\n            for index in range(3):\n                title = f'{current_date}_{creator_role}_{kind}_Doc_{index}'\n                create_resp = creator.post(\n                    **create_document_endpoint(kind=kind, kind_id=container_id, space_id=main_space, title=title)\n                )\n>               assert (\n                    create_resp.status_code == 200\n                ), f'Ошибка при создании документа {index}: статус {create_resp.status_code}'\nE               AssertionError: Ошибка при создании документа 0: статус 400\nE               assert 400 == 200\nE                +  where 400 = <Response [400]>.status_code\n\ntests/test_backend/document/access_doc/test_get_siblings_doc_access.py:86: AssertionError","steps":[{"name":"Создание трёх Space-документов пользователем owner","time":{"start":1761899980302,"stop":1761899980471,"duration":169},"status":"failed","statusMessage":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/document/access_doc/test_get_siblings_doc_access.py\", line 86, in test_get_project_and_space_siblings_docs_access_by_roles\n    assert (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document.access_doc"},{"name":"suite","value":"test_get_siblings_doc_access"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2554-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.access_doc.test_get_siblings_doc_access"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"client_fixture","value":"'guest_client'"},{"name":"container_fixture","value":"'main_space'"},{"name":"creator_fixture","value":"'owner_client'"},{"name":"expected_status","value":"200"},{"name":"kind","value":"'Space'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":49},"items":[{"uid":"dc44cc28a62219e5","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/dc44cc28a62219e5","status":"failed","statusDetails":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835013687,"stop":1761835013816,"duration":129}},{"uid":"ded81c62dc6b2bda","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/ded81c62dc6b2bda","status":"failed","statusDetails":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834581952,"stop":1761834582140,"duration":188}},{"uid":"f0425cd0a90159b7","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/f0425cd0a90159b7","status":"failed","statusDetails":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833417280,"stop":1761833417462,"duration":182}},{"uid":"791316370a0ca361","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/791316370a0ca361","status":"passed","time":{"start":1761821636497,"stop":1761821637952,"duration":1455}},{"uid":"3591db4648b5d03e","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/3591db4648b5d03e","status":"failed","statusDetails":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818713136,"stop":1761818713312,"duration":176}},{"uid":"931940844c1d712d","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/931940844c1d712d","status":"failed","statusDetails":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748581306,"stop":1761748581430,"duration":124}},{"uid":"174ca46ac0137ce5","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/174ca46ac0137ce5","status":"failed","statusDetails":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747850229,"stop":1761747850413,"duration":184}},{"uid":"2bb095558109972a","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/2bb095558109972a","status":"passed","time":{"start":1761746787994,"stop":1761746790235,"duration":2241}},{"uid":"e742c170f5eaf55","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/e742c170f5eaf55","status":"failed","statusDetails":"AssertionError: Ошибка при создании документа 0: статус 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745696991,"stop":1761745697112,"duration":121}},{"uid":"2e024b046eab978d","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/2e024b046eab978d","status":"passed","time":{"start":1761576637890,"stop":1761576639534,"duration":1644}},{"uid":"2d31970700328691","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/2d31970700328691","status":"passed","time":{"start":1761557292559,"stop":1761557294029,"duration":1470}},{"uid":"2c6363d64293b328","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/2c6363d64293b328","status":"passed","time":{"start":1761308516818,"stop":1761308518313,"duration":1495}},{"uid":"692277ee178c0330","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/692277ee178c0330","status":"passed","time":{"start":1761306670866,"stop":1761306672717,"duration":1851}},{"uid":"f3663e243a36eea2","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/f3663e243a36eea2","status":"passed","time":{"start":1761136967031,"stop":1761136969133,"duration":2102}},{"uid":"40630cc87bad534a","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/40630cc87bad534a","status":"passed","time":{"start":1761135635954,"stop":1761135638031,"duration":2077}},{"uid":"2bdcee191da55320","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/2bdcee191da55320","status":"passed","time":{"start":1761134075985,"stop":1761134077587,"duration":1602}},{"uid":"4ecbf96eee1bafef","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/4ecbf96eee1bafef","status":"passed","time":{"start":1761128414965,"stop":1761128416955,"duration":1990}},{"uid":"f15132fe83158a0f","reportUrl":"https://vaizcom.github.io/autotests/383//#testresult/f15132fe83158a0f","status":"passed","time":{"start":1761124524948,"stop":1761124526962,"duration":2014}},{"uid":"d7b00e1659dd705b","reportUrl":"https://vaizcom.github.io/autotests/382//#testresult/d7b00e1659dd705b","status":"passed","time":{"start":1761119345690,"stop":1761119347657,"duration":1967}},{"uid":"675ef56db0a9d6ad","reportUrl":"https://vaizcom.github.io/autotests/381//#testresult/675ef56db0a9d6ad","status":"passed","time":{"start":1761053378794,"stop":1761053380398,"duration":1604}}]},"tags":["backend"]},"source":"d92d8b6010d9a716.json","parameterValues":["'guest_client'","'main_space'","'owner_client'","200","'Space'"]}