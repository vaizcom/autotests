{"uid":"faf66ef2bfb1ee3b","name":"test_board_group_name_validation[too long (51 chars)]","fullName":"tests.test_backend.board.board_validation_test#test_board_group_name_validation","historyId":"64075a07a6a23071069a412232b5cc96","time":{"start":1761910801624,"stop":1761910801624,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f1c6962ef90>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910792963,"stop":1761910793391,"duration":428},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761910801404,"stop":1761910801539,"duration":135},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.board"},{"name":"suite","value":"board_validation_test"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2545-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.board.board_validation_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"400"},{"name":"name","value":"'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":52},"items":[{"uid":"788baa18213ec65a","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/788baa18213ec65a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910503965,"stop":1761910503965,"duration":0}},{"uid":"e4bc5d32170d2d73","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/e4bc5d32170d2d73","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761909866993,"stop":1761909866993,"duration":0}},{"uid":"b10832511c3bceee","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/b10832511c3bceee","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761899900928,"stop":1761899900928,"duration":0}},{"uid":"b9591051eb299768","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/b9591051eb299768","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834949910,"stop":1761834949910,"duration":0}},{"uid":"4cbe95982049872c","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/4cbe95982049872c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834497633,"stop":1761834497633,"duration":0}},{"uid":"e2419c355827ea8d","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/e2419c355827ea8d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833327336,"stop":1761833327336,"duration":0}},{"uid":"746d4c850b369607","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/746d4c850b369607","status":"passed","time":{"start":1761821494156,"stop":1761821494332,"duration":176}},{"uid":"8ac70e44fe56c80f","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/8ac70e44fe56c80f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818627598,"stop":1761818627598,"duration":0}},{"uid":"2c009b9c1eac30bd","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/2c009b9c1eac30bd","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748512179,"stop":1761748512179,"duration":0}},{"uid":"8f537379a47ba30d","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/8f537379a47ba30d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747771765,"stop":1761747771765,"duration":0}},{"uid":"9725103159d052b3","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/9725103159d052b3","status":"passed","time":{"start":1761746605042,"stop":1761746605333,"duration":291}},{"uid":"78997233512c678","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/78997233512c678","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745637052,"stop":1761745637052,"duration":0}},{"uid":"80ae3092f270211c","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/80ae3092f270211c","status":"passed","time":{"start":1761576484409,"stop":1761576484630,"duration":221}},{"uid":"bf2ae5cac578789a","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/bf2ae5cac578789a","status":"passed","time":{"start":1761557142035,"stop":1761557142235,"duration":200}},{"uid":"7516ad7761e20cad","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/7516ad7761e20cad","status":"passed","time":{"start":1761308365998,"stop":1761308366651,"duration":653}},{"uid":"475e54a4315fc0ca","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/475e54a4315fc0ca","status":"passed","time":{"start":1761306513154,"stop":1761306513356,"duration":202}},{"uid":"db2d17465d84255d","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/db2d17465d84255d","status":"passed","time":{"start":1761136807904,"stop":1761136808170,"duration":266}},{"uid":"e87eb0ad7ccf69b5","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/e87eb0ad7ccf69b5","status":"passed","time":{"start":1761135459196,"stop":1761135459438,"duration":242}},{"uid":"8d3c3f649a5f6ca","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/8d3c3f649a5f6ca","status":"passed","time":{"start":1761133925449,"stop":1761133926073,"duration":624}},{"uid":"5e1ecc092c4f2bc2","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/5e1ecc092c4f2bc2","status":"passed","time":{"start":1761128223099,"stop":1761128223365,"duration":266}}]},"tags":["backend"]},"source":"faf66ef2bfb1ee3b.json","parameterValues":["400","'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'"]}