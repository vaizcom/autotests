{"uid":"910c41712d4f0fd8","name":"test_create_and_duplicate_document[space]","fullName":"tests.test_backend.document.test_duplicate_document#test_create_and_duplicate_document","historyId":"83c1ce6fc7839eb7d43871d5262083f2","time":{"start":1761912189238,"stop":1761912189238,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\nrequest = <SubRequest 'temp_document' for <Function test_create_and_duplicate_document[space]>>\nkind = 'Space', kind_id_fixture = 'temp_space'\n\n    @pytest.fixture\n    def temp_document(owner_client, request, kind, kind_id_fixture):\n>       kind_id = request.getfixturevalue(kind_id_fixture)\n\ntests/conftest.py:261: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nowner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_document","time":{"start":1761912189238,"stop":1761912189238,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 261, in temp_document\n    kind_id = request.getfixturevalue(kind_id_fixture)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 532, in getfixturevalue\n    fixturedef = self._get_active_fixturedef(argname)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 617, in _get_active_fixturedef\n    fixturedef.execute(request=subrequest)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1071, in execute\n    raise exc.with_traceback(exc_tb)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_duplicate_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_duplicate_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"kind","value":"'Space'"},{"name":"kind_id_fixture","value":"'temp_space'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":54},"items":[{"uid":"317bb16461c198b8","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/317bb16461c198b8","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911301169,"stop":1761911301169,"duration":0}},{"uid":"a1fda6df17bc6b5e","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/a1fda6df17bc6b5e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910912423,"stop":1761910912423,"duration":0}},{"uid":"bb2347cd415c5afc","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/bb2347cd415c5afc","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910614227,"stop":1761910614227,"duration":0}},{"uid":"eb2b4183d7a09c5f","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/eb2b4183d7a09c5f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910006685,"stop":1761910006685,"duration":0}},{"uid":"c65b36792dcd82c4","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/c65b36792dcd82c4","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900037730,"stop":1761900037730,"duration":0}},{"uid":"aca83c2367eac936","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/aca83c2367eac936","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835058554,"stop":1761835058554,"duration":0}},{"uid":"2b0669ef9264ede5","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/2b0669ef9264ede5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834642818,"stop":1761834642818,"duration":0}},{"uid":"ebcd5b285525a710","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/ebcd5b285525a710","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833478886,"stop":1761833478886,"duration":0}},{"uid":"e3635c0789a8fd50","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/e3635c0789a8fd50","status":"passed","time":{"start":1761821723348,"stop":1761821723833,"duration":485}},{"uid":"65f00177db4af463","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/65f00177db4af463","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818767161,"stop":1761818767161,"duration":0}},{"uid":"7776516d0443a32b","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/7776516d0443a32b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748631459,"stop":1761748631459,"duration":0}},{"uid":"6b16a871757af0cf","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/6b16a871757af0cf","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747907036,"stop":1761747907036,"duration":0}},{"uid":"39306d75a1c95c52","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/39306d75a1c95c52","status":"passed","time":{"start":1761746889508,"stop":1761746890221,"duration":713}},{"uid":"52f46e74e7903384","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/52f46e74e7903384","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745739552,"stop":1761745739552,"duration":0}},{"uid":"1f38b0a39dccf05","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/1f38b0a39dccf05","status":"passed","time":{"start":1761576724738,"stop":1761576725400,"duration":662}},{"uid":"fb2192adac17cb1e","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/fb2192adac17cb1e","status":"passed","time":{"start":1761557372234,"stop":1761557372792,"duration":558}},{"uid":"b7409c190a16b41d","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/b7409c190a16b41d","status":"passed","time":{"start":1761308596544,"stop":1761308597045,"duration":501}},{"uid":"4d94dfe279972f3f","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/4d94dfe279972f3f","status":"passed","time":{"start":1761306757818,"stop":1761306758409,"duration":591}},{"uid":"8cf028562f688ab0","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/8cf028562f688ab0","status":"passed","time":{"start":1761137050952,"stop":1761137051508,"duration":556}},{"uid":"d04345b9c82be05d","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/d04345b9c82be05d","status":"passed","time":{"start":1761135729985,"stop":1761135730641,"duration":656}}]},"tags":["backend"]},"source":"910c41712d4f0fd8.json","parameterValues":["'Space'","'temp_space'"]}