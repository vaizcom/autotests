{"uid":"c5e11ff1deb15529","name":"Создание борды в существующем проекте и корректность возвращаемого имени","fullName":"backend_tests.tests.test_board.test_board#test_create_board","historyId":"a865657799f1fa481679dbcdb0e2570d","time":{"start":1748957045547,"stop":1748957046397,"duration":850},"status":"failed","statusMessage":"AssertionError: Ожидалось имя борды 'BMMsNMMHMhUREwHwiPXpaetFVj', а получено 'BMMsNMMHMhUREwHwiPXpaetFVj'\nassert 'BMMsNMMHMhUREwHwiPXpaetFVj' == 'name'\n  \n  - name\n  + BMMsNMMHMhUREwHwiPXpaetFVj","statusTrace":"owner_client = <backend_tests.core.client.APIClient object at 0x7f34574d7c90>\ntemp_project = '683ef775b43fb426ec950baf'\ntemp_space = '683ef772b43fb426ec950b37'\n\n    @allure.title(\"Создание борды в существующем проекте и корректность возвращаемого имени\")\n    def test_create_board(owner_client, temp_project, temp_space):\n        # Генерация имени борды\n        name = generate_board_name()\n        # Отправка запроса и проверка результата\n        with allure.step(\"Отправка запроса на создание борды с валидными данными\"):\n            response = owner_client.post(**create_board_endpoint(\n                name,\n                temp_project,\n                temp_space,\n                [],\n                [],\n                []))\n    \n        # Проверяем статус и возвращаемое имя борды\n        with allure.step(\"Проверка успешного ответа от API\"):\n            assert response.status_code == 200, f\"Ошибка: {response.text}\"\n    \n        with allure.step(\"Проверка корректности имени созданной борды\"):\n            response_data = response.json()\n            assert \"payload\" in response_data, \"Ошибка: В ответе отсутствует поле 'payload'\"\n            assert \"board\" in response_data[\"payload\"], \"Ошибка: В 'payload' отсутствует объект 'board'\"\n>           assert response_data[\"payload\"][\"board\"][\"name\"] == \"name\", (\n                f\"Ожидалось имя борды '{name}', а получено '{response_data['payload']['board']['name']}'\"\n            )\nE           AssertionError: Ожидалось имя борды 'BMMsNMMHMhUREwHwiPXpaetFVj', а получено 'BMMsNMMHMhUREwHwiPXpaetFVj'\nE           assert 'BMMsNMMHMhUREwHwiPXpaetFVj' == 'name'\nE             \nE             - name\nE             + BMMsNMMHMhUREwHwiPXpaetFVj\n\nbackend_tests/tests/test_board/test_board.py:37: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1748957041728,"stop":1748957041729,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1748957041729,"stop":1748957042295,"duration":566},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1748957041729,"stop":1748957041729,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1748957041729,"stop":1748957041729,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1748957041729,"stop":1748957041729,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1748957042296,"stop":1748957043197,"duration":901},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_project","time":{"start":1748957043197,"stop":1748957045547,"duration":2350},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Ожидалось имя борды 'BMMsNMMHMhUREwHwiPXpaetFVj', а получено 'BMMsNMMHMhUREwHwiPXpaetFVj'\nassert 'BMMsNMMHMhUREwHwiPXpaetFVj' == 'name'\n  \n  - name\n  + BMMsNMMHMhUREwHwiPXpaetFVj","statusTrace":"owner_client = <backend_tests.core.client.APIClient object at 0x7f34574d7c90>\ntemp_project = '683ef775b43fb426ec950baf'\ntemp_space = '683ef772b43fb426ec950b37'\n\n    @allure.title(\"Создание борды в существующем проекте и корректность возвращаемого имени\")\n    def test_create_board(owner_client, temp_project, temp_space):\n        # Генерация имени борды\n        name = generate_board_name()\n        # Отправка запроса и проверка результата\n        with allure.step(\"Отправка запроса на создание борды с валидными данными\"):\n            response = owner_client.post(**create_board_endpoint(\n                name,\n                temp_project,\n                temp_space,\n                [],\n                [],\n                []))\n    \n        # Проверяем статус и возвращаемое имя борды\n        with allure.step(\"Проверка успешного ответа от API\"):\n            assert response.status_code == 200, f\"Ошибка: {response.text}\"\n    \n        with allure.step(\"Проверка корректности имени созданной борды\"):\n            response_data = response.json()\n            assert \"payload\" in response_data, \"Ошибка: В ответе отсутствует поле 'payload'\"\n            assert \"board\" in response_data[\"payload\"], \"Ошибка: В 'payload' отсутствует объект 'board'\"\n>           assert response_data[\"payload\"][\"board\"][\"name\"] == \"name\", (\n                f\"Ожидалось имя борды '{name}', а получено '{response_data['payload']['board']['name']}'\"\n            )\nE           AssertionError: Ожидалось имя борды 'BMMsNMMHMhUREwHwiPXpaetFVj', а получено 'BMMsNMMHMhUREwHwiPXpaetFVj'\nE           assert 'BMMsNMMHMhUREwHwiPXpaetFVj' == 'name'\nE             \nE             - name\nE             + BMMsNMMHMhUREwHwiPXpaetFVj\n\nbackend_tests/tests/test_board/test_board.py:37: AssertionError","steps":[{"name":"Отправка запроса на создание борды с валидными данными","time":{"start":1748957045547,"stop":1748957046396,"duration":849},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверка успешного ответа от API","time":{"start":1748957046396,"stop":1748957046396,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверка корректности имени созданной борды","time":{"start":1748957046396,"stop":1748957046396,"duration":0},"status":"failed","statusMessage":"AssertionError: Ожидалось имя борды 'BMMsNMMHMhUREwHwiPXpaetFVj', а получено 'BMMsNMMHMhUREwHwiPXpaetFVj'\nassert 'BMMsNMMHMhUREwHwiPXpaetFVj' == 'name'\n  \n  - name\n  + BMMsNMMHMhUREwHwiPXpaetFVj\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/backend_tests/tests/test_board/test_board.py\", line 37, in test_create_board\n    assert response_data[\"payload\"][\"board\"][\"name\"] == \"name\", (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true},"afterStages":[{"name":"temp_space::0","time":{"start":1748957046429,"stop":1748957047042,"duration":613},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"backend_tests.tests.test_board"},{"name":"suite","value":"test_board"},{"name":"host","value":"pkrvmf6wy0o8zjz"},{"name":"thread","value":"2606-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"backend_tests.tests.test_board.test_board"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":10},"items":[{"uid":"7dd72953fc6a7a23","reportUrl":"https://vaizcom.github.io/autotests/70//#testresult/7dd72953fc6a7a23","status":"failed","statusDetails":"AssertionError: Ожидалось имя борды 'jOtDDMZ', а получено 'jOtDDMZ'\nassert 'jOtDDMZ' == 'name'\n  \n  - name\n  + jOtDDMZ","time":{"start":1748955515092,"stop":1748955515816,"duration":724}},{"uid":"519acef4bf0fdc1d","reportUrl":"https://vaizcom.github.io/autotests/68//#testresult/519acef4bf0fdc1d","status":"passed","time":{"start":1748954443837,"stop":1748954444649,"duration":812}},{"uid":"c37626b61c11a818","reportUrl":"https://vaizcom.github.io/autotests/65//#testresult/c37626b61c11a818","status":"passed","time":{"start":1748953482145,"stop":1748953482958,"duration":813}},{"uid":"6099e8cf76a95f07","reportUrl":"https://vaizcom.github.io/autotests/64//#testresult/6099e8cf76a95f07","status":"passed","time":{"start":1748872658532,"stop":1748872659289,"duration":757}},{"uid":"7746575f30f462b5","reportUrl":"https://vaizcom.github.io/autotests/63//#testresult/7746575f30f462b5","status":"passed","time":{"start":1748865829798,"stop":1748865830620,"duration":822}},{"uid":"8ae5bdb5fb2d7b","reportUrl":"https://vaizcom.github.io/autotests/62//#testresult/8ae5bdb5fb2d7b","status":"passed","time":{"start":1748854174970,"stop":1748854175538,"duration":568}},{"uid":"bc2a32a088cad3d9","reportUrl":"https://vaizcom.github.io/autotests/61//#testresult/bc2a32a088cad3d9","status":"passed","time":{"start":1748613113171,"stop":1748613113907,"duration":736}},{"uid":"cef64204e091a9f5","reportUrl":"https://vaizcom.github.io/autotests/60//#testresult/cef64204e091a9f5","status":"passed","time":{"start":1748610960845,"stop":1748610961677,"duration":832}},{"uid":"4eb443e81b16c7ed","reportUrl":"https://vaizcom.github.io/autotests/59//#testresult/4eb443e81b16c7ed","status":"passed","time":{"start":1748528317876,"stop":1748528318699,"duration":823}}]},"tags":[]},"source":"c5e11ff1deb15529.json","parameterValues":[]}