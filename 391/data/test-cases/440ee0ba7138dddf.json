{"uid":"440ee0ba7138dddf","name":"Create task with minimal payload: клиент=owner_client, ожидаемый статус=200","fullName":"tests.test_backend.task_service.create_task.access_task.test_create_task#test_create_task_with_minimal_payload","historyId":"8c833d6503ed4264ab2c43c9cb971df5","time":{"start":1761747057127,"stop":1761747058460,"duration":1333},"description":"\n    Тест проверки создания задачи с минимальным набором полей в системе управления проектами под разными ролями.\n\n    Цель теста — убедиться, что можно успешно создать задачу, указав только минимально необходимые данные, и что поведение API зависит от прав пользователя (типа клиента).\n    В процессе теста дополнительно валидируются структура созданной задачи, значения по умолчанию, связи (creator, board и пр.), а также удаление задачи после проверки.\n    assert_task_keys обеспечивает падение теста при добавлении/удалении ключей с понятным сообщением.\n\n    Ход теста:\n        1. Получение клиента согласно переданной роли через фикстуру.\n        2. Получение id пользователя, с помощью которого осуществляется создание задачи.\n        3. Формирование минимального payload и попытка создать задачу через API.\n        4. Проверка статус-кода ответа.\n        5. Если задача успешно создана (ответ 200):\n            - Проверка наполнения и структуры ответа\n    ","descriptionHtml":"<pre><code>Тест проверки создания задачи с минимальным набором полей в системе управления проектами под разными ролями.\n\nЦель теста — убедиться, что можно успешно создать задачу, указав только минимально необходимые данные, и что поведение API зависит от прав пользователя (типа клиента).\nВ процессе теста дополнительно валидируются структура созданной задачи, значения по умолчанию, связи (creator, board и пр.), а также удаление задачи после проверки.\nassert_task_keys обеспечивает падение теста при добавлении/удалении ключей с понятным сообщением.\n\nХод теста:\n    1. Получение клиента согласно переданной роли через фикстуру.\n    2. Получение id пользователя, с помощью которого осуществляется создание задачи.\n    3. Формирование минимального payload и попытка создать задачу через API.\n    4. Проверка статус-кода ответа.\n    5. Если задача успешно создана (ответ 200):\n        - Проверка наполнения и структуры ответа\n</code></pre>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":true,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761746589765,"stop":1761746589765,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761746589766,"stop":1761746589766,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761746589766,"stop":1761746589766,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761746589766,"stop":1761746589766,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761746589766,"stop":1761746590235,"duration":469},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1761746591962,"stop":1761746592451,"duration":489},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1761746592451,"stop":1761746592724,"duration":273},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_project","time":{"start":1761746592724,"stop":1761746593661,"duration":937},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_board","time":{"start":1761746597222,"stop":1761746597448,"duration":226},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Тест проверки создания задачи с минимальным набором полей в системе управления проектами под разными ролями.\n\n    Цель теста — убедиться, что можно успешно создать задачу, указав только минимально необходимые данные, и что поведение API зависит от прав пользователя (типа клиента).\n    В процессе теста дополнительно валидируются структура созданной задачи, значения по умолчанию, связи (creator, board и пр.), а также удаление задачи после проверки.\n    assert_task_keys обеспечивает падение теста при добавлении/удалении ключей с понятным сообщением.\n\n    Ход теста:\n        1. Получение клиента согласно переданной роли через фикстуру.\n        2. Получение id пользователя, с помощью которого осуществляется создание задачи.\n        3. Формирование минимального payload и попытка создать задачу через API.\n        4. Проверка статус-кода ответа.\n        5. Если задача успешно создана (ответ 200):\n            - Проверка наполнения и структуры ответа\n    ","status":"passed","steps":[{"name":"Создание задачи с минимальным payload","time":{"start":1761747057424,"stop":1761747057797,"duration":373},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверка статус-кода: ожидаем 200","time":{"start":1761747057797,"stop":1761747057797,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем содержимое ответа с задачей","time":{"start":1761747057797,"stop":1761747058112,"duration":315},"status":"passed","steps":[{"name":"Проверка обязательных полей","time":{"start":1761747057797,"stop":1761747057797,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверка системных полей","time":{"start":1761747057797,"stop":1761747058112,"duration":315},"status":"passed","steps":[{"name":"Проверяем поле 'hrid'","time":{"start":1761747057798,"stop":1761747058112,"duration":314},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Проверка полей, которые должны быть пустыми","time":{"start":1761747058112,"stop":1761747058112,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверка полей с `None` (null)","time":{"start":1761747058112,"stop":1761747058112,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверка значений по умолчанию","time":{"start":1761747058112,"stop":1761747058112,"duration":0},"status":"passed","steps":[{"name":"Проверка полного совпадения набора ключей задачи","time":{"start":1761747058112,"stop":1761747058112,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true},{"name":"Удаляем задачу: 69022071d625f1ae4131ff0c","time":{"start":1761747058112,"stop":1761747058460,"duration":348},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":11,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"access_task"},{"name":"tag","value":"backend"},{"name":"suite","value":"test_create_task"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2528-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.task_service.create_task.access_task.test_create_task"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"client_fixture","value":"'owner_client'"},{"name":"expected_status","value":"200"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":8,"unknown":0,"total":9},"items":[{"uid":"a9796bad7f7ac3c7","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/a9796bad7f7ac3c7","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/getProfile","time":{"start":1761745745265,"stop":1761745745550,"duration":285}},{"uid":"34d3146ee726a347","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/34d3146ee726a347","status":"passed","time":{"start":1761576875581,"stop":1761576876678,"duration":1097}},{"uid":"e8c334e9c7f98f1c","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/e8c334e9c7f98f1c","status":"passed","time":{"start":1761557491616,"stop":1761557492557,"duration":941}},{"uid":"4447726e3522f436","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/4447726e3522f436","status":"passed","time":{"start":1761308711273,"stop":1761308712245,"duration":972}},{"uid":"ee114758c07c960","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/ee114758c07c960","status":"passed","time":{"start":1761306877326,"stop":1761306878254,"duration":928}},{"uid":"b783a0e48e1073f8","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/b783a0e48e1073f8","status":"passed","time":{"start":1761137178015,"stop":1761137179054,"duration":1039}},{"uid":"dff788d83d5d1059","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/dff788d83d5d1059","status":"passed","time":{"start":1761135878083,"stop":1761135879332,"duration":1249}},{"uid":"55ab151cc8dd8e4d","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/55ab151cc8dd8e4d","status":"passed","time":{"start":1761134283432,"stop":1761134284502,"duration":1070}}]},"tags":["backend"]},"source":"440ee0ba7138dddf.json","parameterValues":["'owner_client'","200"]}