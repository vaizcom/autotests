{"uid":"97b8b7236b1b2dd0","name":"Test create space visible in list","fullName":"tests.test_backend.space.test_space#test_create_space_visible_in_list","historyId":"5073e64d368099b9977d7f384d36fa1e","time":{"start":1761921882965,"stop":1761921882965,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fc7d133bfd0>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761921763685,"stop":1761921763685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761921763685,"stop":1761921764117,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761921773063,"stop":1761921773182,"duration":119},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.space"},{"name":"suite","value":"test_space"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2549-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.space.test_space"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":55},"items":[{"uid":"1465dbebb9ccb540","reportUrl":"https://vaizcom.github.io/autotests/404//#testresult/1465dbebb9ccb540","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761912194163,"stop":1761912194163,"duration":0}},{"uid":"ba6bf33860339477","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/ba6bf33860339477","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911308024,"stop":1761911308024,"duration":0}},{"uid":"f0b1703055d0c7f8","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/f0b1703055d0c7f8","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910917849,"stop":1761910917849,"duration":0}},{"uid":"22ca431f68209ed","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/22ca431f68209ed","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910619511,"stop":1761910619511,"duration":0}},{"uid":"a53e6c29f4c44673","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/a53e6c29f4c44673","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910012979,"stop":1761910012979,"duration":0}},{"uid":"e22b56ae34cdd504","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/e22b56ae34cdd504","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900044064,"stop":1761900044064,"duration":0}},{"uid":"26967bd36f69f70","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/26967bd36f69f70","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835063202,"stop":1761835063202,"duration":0}},{"uid":"1f22192bbe36c644","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/1f22192bbe36c644","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834650039,"stop":1761834650039,"duration":0}},{"uid":"8139f5f60692699a","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/8139f5f60692699a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833485926,"stop":1761833485926,"duration":0}},{"uid":"668045600bf50ad","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/668045600bf50ad","status":"passed","time":{"start":1761821827505,"stop":1761821827793,"duration":288}},{"uid":"4cd72b6fdfe439df","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/4cd72b6fdfe439df","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818773824,"stop":1761818773824,"duration":0}},{"uid":"15bc538c8c70add4","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/15bc538c8c70add4","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748636946,"stop":1761748636946,"duration":0}},{"uid":"1ba8137ef123ef99","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/1ba8137ef123ef99","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747914055,"stop":1761747914055,"duration":0}},{"uid":"be8e1ff36d2a8c73","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/be8e1ff36d2a8c73","status":"passed","time":{"start":1761747039079,"stop":1761747039472,"duration":393}},{"uid":"be248376102509ea","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/be248376102509ea","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745744366,"stop":1761745744366,"duration":0}},{"uid":"3601d59ec98f5ce7","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/3601d59ec98f5ce7","status":"passed","time":{"start":1761576859574,"stop":1761576859879,"duration":305}},{"uid":"320f2725b3c8f7ed","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/320f2725b3c8f7ed","status":"passed","time":{"start":1761557479131,"stop":1761557479411,"duration":280}},{"uid":"39f86353dd7861a","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/39f86353dd7861a","status":"passed","time":{"start":1761308696293,"stop":1761308696585,"duration":292}},{"uid":"4fdfa8bc1e1fd891","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/4fdfa8bc1e1fd891","status":"passed","time":{"start":1761306863872,"stop":1761306864364,"duration":492}},{"uid":"824da6c854118371","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/824da6c854118371","status":"passed","time":{"start":1761137163045,"stop":1761137163784,"duration":739}}]},"tags":["backend"]},"source":"97b8b7236b1b2dd0.json","parameterValues":[]}