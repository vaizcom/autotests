{"uid":"5caf145828ad0dcf","name":"test_create_document[Space]","fullName":"tests.test_backend.document.test_create_document#test_create_document","historyId":"814bf84669aa0d126f953aadd10fd946","time":{"start":1761911300058,"stop":1761911300058,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fbc912cb790>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761911162887,"stop":1761911162887,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761911162888,"stop":1761911163517,"duration":629},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761911172524,"stop":1761911172705,"duration":181},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_create_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_create_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"kind","value":"'Space'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":53},"items":[{"uid":"464a475e19d55cef","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/464a475e19d55cef","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910911742,"stop":1761910911742,"duration":0}},{"uid":"83f59443d5c62aa5","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/83f59443d5c62aa5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910613602,"stop":1761910613602,"duration":0}},{"uid":"b8308d31c5f2bf55","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/b8308d31c5f2bf55","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910005476,"stop":1761910005476,"duration":0}},{"uid":"962ee01e94faa963","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/962ee01e94faa963","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900036968,"stop":1761900036968,"duration":0}},{"uid":"400e2b247b4f0392","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/400e2b247b4f0392","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835057580,"stop":1761835057580,"duration":0}},{"uid":"fe12f7ac7f8f835b","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/fe12f7ac7f8f835b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834642068,"stop":1761834642068,"duration":0}},{"uid":"7da6e5bf34186988","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/7da6e5bf34186988","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833478201,"stop":1761833478201,"duration":0}},{"uid":"38df79ac58db5ad2","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/38df79ac58db5ad2","status":"passed","time":{"start":1761821713979,"stop":1761821714214,"duration":235}},{"uid":"699d5456ea03c01a","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/699d5456ea03c01a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818766453,"stop":1761818766453,"duration":0}},{"uid":"a6dfa814e26387df","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/a6dfa814e26387df","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748630236,"stop":1761748630236,"duration":0}},{"uid":"217d8c285d6f5384","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/217d8c285d6f5384","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747905778,"stop":1761747905778,"duration":0}},{"uid":"b10b26d3ca3cf028","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/b10b26d3ca3cf028","status":"passed","time":{"start":1761746877061,"stop":1761746877394,"duration":333}},{"uid":"b1590b63893dff4a","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/b1590b63893dff4a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745738255,"stop":1761745738255,"duration":0}},{"uid":"5d4e40de5e512ebe","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/5d4e40de5e512ebe","status":"passed","time":{"start":1761576712461,"stop":1761576712726,"duration":265}},{"uid":"23cae8aad179a4ad","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/23cae8aad179a4ad","status":"passed","time":{"start":1761557362815,"stop":1761557363033,"duration":218}},{"uid":"e3206eb553c82b49","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/e3206eb553c82b49","status":"passed","time":{"start":1761308586980,"stop":1761308587204,"duration":224}},{"uid":"9ad96a722ad27cd4","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/9ad96a722ad27cd4","status":"passed","time":{"start":1761306748464,"stop":1761306748707,"duration":243}},{"uid":"bb9e6a85bcfaf1db","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/bb9e6a85bcfaf1db","status":"passed","time":{"start":1761137041449,"stop":1761137041711,"duration":262}},{"uid":"9e013dca1ddeed45","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/9e013dca1ddeed45","status":"passed","time":{"start":1761135718643,"stop":1761135718944,"duration":301}},{"uid":"b20b8498e7da9084","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/b20b8498e7da9084","status":"passed","time":{"start":1761134145976,"stop":1761134146214,"duration":238}}]},"tags":["backend"]},"source":"5caf145828ad0dcf.json","parameterValues":["'Space'"]}