{"uid":"50a61eb564f09e2d","name":"test_get_document_parent_siblings[space]","fullName":"tests.test_backend.document.test_get_siblings#test_get_document_parent_siblings","historyId":"a79ce069f3c3677939d0e9daf07ff57e","time":{"start":1761911304653,"stop":1761911304653,"duration":0},"description":"Тест проверки siblins и родителей для родительского документа","descriptionHtml":"<p>Тест проверки siblins и родителей для родительского документа</p>\n","status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fbc912cb790>\n\n    @pytest.fixture(scope='module')\n    def space_id_module(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:192: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761911162887,"stop":1761911162887,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761911162888,"stop":1761911163517,"duration":629},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"space_id_module","time":{"start":1761911304474,"stop":1761911304644,"duration":170},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 192, in space_id_module\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_siblings"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_siblings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"kind","value":"'Space'"},{"name":"kind_id_fixture","value":"'space_id_module'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":53},"items":[{"uid":"98a917b775c13a09","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/98a917b775c13a09","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910915330,"stop":1761910915330,"duration":0}},{"uid":"62d0685c106896a6","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/62d0685c106896a6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910616405,"stop":1761910616405,"duration":0}},{"uid":"33baa6db44b41c6b","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/33baa6db44b41c6b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910009621,"stop":1761910009621,"duration":0}},{"uid":"a149138516aa3916","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/a149138516aa3916","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900040706,"stop":1761900040706,"duration":0}},{"uid":"24d2353904359a0","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/24d2353904359a0","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835060806,"stop":1761835060806,"duration":0}},{"uid":"18d7fbded9bef938","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/18d7fbded9bef938","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834646024,"stop":1761834646024,"duration":0}},{"uid":"da063b9a96938ffe","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/da063b9a96938ffe","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833482386,"stop":1761833482386,"duration":0}},{"uid":"56d915d5df6b7b9f","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/56d915d5df6b7b9f","status":"passed","time":{"start":1761821777552,"stop":1761821777961,"duration":409}},{"uid":"92e3fee51a29562","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/92e3fee51a29562","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818770520,"stop":1761818770520,"duration":0}},{"uid":"80acd263e9044f48","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/80acd263e9044f48","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748633739,"stop":1761748633739,"duration":0}},{"uid":"680f9012fd0d40e4","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/680f9012fd0d40e4","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747910117,"stop":1761747910117,"duration":0}},{"uid":"b95b2ddf17977baa","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/b95b2ddf17977baa","status":"passed","time":{"start":1761746970111,"stop":1761746970751,"duration":640}},{"uid":"bc2b577462f1a2dd","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/bc2b577462f1a2dd","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745741896,"stop":1761745741896,"duration":0}},{"uid":"fcce0aed5e4607b8","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/fcce0aed5e4607b8","status":"passed","time":{"start":1761576798328,"stop":1761576798791,"duration":463}},{"uid":"2a89094cfc4dc484","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/2a89094cfc4dc484","status":"passed","time":{"start":1761557431240,"stop":1761557431699,"duration":459}},{"uid":"f919906e9ca4c2e9","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/f919906e9ca4c2e9","status":"passed","time":{"start":1761308651863,"stop":1761308652293,"duration":430}},{"uid":"f2bdcc48474649a3","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/f2bdcc48474649a3","status":"passed","time":{"start":1761306815308,"stop":1761306815757,"duration":449}},{"uid":"d0465f08ad5558d1","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/d0465f08ad5558d1","status":"passed","time":{"start":1761137112488,"stop":1761137112981,"duration":493}},{"uid":"c4d24f13880055bf","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/c4d24f13880055bf","status":"passed","time":{"start":1761135799176,"stop":1761135799723,"duration":547}},{"uid":"a483011e67c95b2c","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/a483011e67c95b2c","status":"passed","time":{"start":1761134215285,"stop":1761134215773,"duration":488}}]},"tags":["backend"]},"source":"50a61eb564f09e2d.json","parameterValues":["'Space'","'space_id_module'"]}