{"uid":"82a2b2060869fcff","name":"test_duplicate_document_forbidden_no_membership[space]","fullName":"tests.test_backend.document.test_duplicate_document#test_duplicate_document_forbidden_no_membership","historyId":"68fd1928d31986c00adbe2d6c3595e7d","time":{"start":1761912189994,"stop":1761912189994,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"guest_client","time":{"start":1761912078751,"stop":1761912078998,"duration":247},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761912080667,"stop":1761912081009,"duration":342},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_duplicate_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_duplicate_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"kind","value":"'Space'"},{"name":"kind_id_fixture","value":"'temp_space'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":54},"items":[{"uid":"c07dafd3b5318105","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/c07dafd3b5318105","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911302553,"stop":1761911302553,"duration":0}},{"uid":"1220e953f48864f6","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/1220e953f48864f6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910913097,"stop":1761910913097,"duration":0}},{"uid":"7999328c0f6c9b44","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/7999328c0f6c9b44","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910614841,"stop":1761910614841,"duration":0}},{"uid":"445e7314b3e3c692","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/445e7314b3e3c692","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910007577,"stop":1761910007577,"duration":0}},{"uid":"1a7b2e59e2269c2a","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/1a7b2e59e2269c2a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900038703,"stop":1761900038703,"duration":0}},{"uid":"68814b25479b1dd9","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/68814b25479b1dd9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835059260,"stop":1761835059260,"duration":0}},{"uid":"5e746ee4a742e131","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/5e746ee4a742e131","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834643863,"stop":1761834643863,"duration":0}},{"uid":"c69fd3758eb8fb43","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/c69fd3758eb8fb43","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833480075,"stop":1761833480075,"duration":0}},{"uid":"3f581b452762db1c","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/3f581b452762db1c","status":"passed","time":{"start":1761821731898,"stop":1761821732071,"duration":173}},{"uid":"43666829ec56bbbb","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/43666829ec56bbbb","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818768399,"stop":1761818768399,"duration":0}},{"uid":"b82369de4fda8475","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/b82369de4fda8475","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748632202,"stop":1761748632202,"duration":0}},{"uid":"6368d63f7d277ed","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/6368d63f7d277ed","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747908088,"stop":1761747908088,"duration":0}},{"uid":"7065c11eb2639026","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/7065c11eb2639026","status":"passed","time":{"start":1761746901483,"stop":1761746901640,"duration":157}},{"uid":"84089b2c0ada566b","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/84089b2c0ada566b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745740290,"stop":1761745740290,"duration":0}},{"uid":"78a11c770f017e59","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/78a11c770f017e59","status":"passed","time":{"start":1761576736333,"stop":1761576736549,"duration":216}},{"uid":"897d838c92fa2707","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/897d838c92fa2707","status":"passed","time":{"start":1761557380754,"stop":1761557380910,"duration":156}},{"uid":"78ffbcbaec658088","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/78ffbcbaec658088","status":"passed","time":{"start":1761308603465,"stop":1761308603617,"duration":152}},{"uid":"a909f5aae3bcfb67","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/a909f5aae3bcfb67","status":"passed","time":{"start":1761306766019,"stop":1761306766182,"duration":163}},{"uid":"94b36259adedd8a3","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/94b36259adedd8a3","status":"passed","time":{"start":1761137059356,"stop":1761137059510,"duration":154}},{"uid":"1c093aefff013660","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/1c093aefff013660","status":"passed","time":{"start":1761135740769,"stop":1761135740946,"duration":177}}]},"tags":["backend"]},"source":"82a2b2060869fcff.json","parameterValues":["'Space'","'temp_space'"]}