{"uid":"f3eb639fa3977107","name":"Создание нескольких борд с одинаковым именем в одном проекте","fullName":"tests.test_backend.board.test_board#test_create_board_with_duplicate_name_allowed","historyId":"34b25a0b7a3903005ca233e41a171121","time":{"start":1752047942169,"stop":1752047942169,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f60ac7d5290>\ntemp_space = '686e2144dc7db2861c816ae1'\n\n    @pytest.fixture(scope='session')\n    def temp_project(owner_client, temp_space):\n        \"\"\"Создаёт проект, который используется во всех тестах модуля.\"\"\"\n        name = generate_project_name()\n        slug = generate_slug()\n        common_kwargs = {'color': 'blue', 'icon': 'Dot', 'description': 'temporary project', 'space_id': temp_space}\n        response = owner_client.post(**create_project_endpoint(name=name, slug=slug, **common_kwargs))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:124: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1752047939816,"stop":1752047940592,"duration":776},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1752047940592,"stop":1752047941242,"duration":650},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_project","time":{"start":1752047941242,"stop":1752047941963,"duration":721},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 124, in temp_project\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[{"name":"temp_space::0","time":{"start":1752048136220,"stop":1752048136701,"duration":481},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.board"},{"name":"suite","value":"test_board"},{"name":"host","value":"pkrvmfkh1xnbeme"},{"name":"thread","value":"2510-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.board.test_board"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":1,"skipped":0,"passed":116,"unknown":0,"total":119},"items":[{"uid":"9ce8772800961bc2","reportUrl":"https://vaizcom.github.io/autotests/262//#testresult/9ce8772800961bc2","status":"passed","time":{"start":1752046622359,"stop":1752046623196,"duration":837}},{"uid":"b4b6f83dd7ac77c1","reportUrl":"https://vaizcom.github.io/autotests/261//#testresult/b4b6f83dd7ac77c1","status":"passed","time":{"start":1752044613436,"stop":1752044614036,"duration":600}},{"uid":"9e8550c47c7f0344","reportUrl":"https://vaizcom.github.io/autotests/260//#testresult/9e8550c47c7f0344","status":"passed","time":{"start":1751982636232,"stop":1751982636747,"duration":515}},{"uid":"8b563c0a6a2412ae","reportUrl":"https://vaizcom.github.io/autotests/259//#testresult/8b563c0a6a2412ae","status":"passed","time":{"start":1751976093206,"stop":1751976093781,"duration":575}},{"uid":"b335ae5a7e675845","reportUrl":"https://vaizcom.github.io/autotests/258//#testresult/b335ae5a7e675845","status":"passed","time":{"start":1751975059269,"stop":1751975059805,"duration":536}},{"uid":"529a15792f49d0f","reportUrl":"https://vaizcom.github.io/autotests/257//#testresult/529a15792f49d0f","status":"passed","time":{"start":1751973349659,"stop":1751973350197,"duration":538}},{"uid":"ce38884dc82be3f4","reportUrl":"https://vaizcom.github.io/autotests/256//#testresult/ce38884dc82be3f4","status":"passed","time":{"start":1751971625515,"stop":1751971625982,"duration":467}},{"uid":"b220300427196af7","reportUrl":"https://vaizcom.github.io/autotests/255//#testresult/b220300427196af7","status":"passed","time":{"start":1751965017658,"stop":1751965018546,"duration":888}},{"uid":"13c5fb07a3b034dc","reportUrl":"https://vaizcom.github.io/autotests/254//#testresult/13c5fb07a3b034dc","status":"passed","time":{"start":1751959114112,"stop":1751959114928,"duration":816}},{"uid":"e3e2aeb2f6937787","reportUrl":"https://vaizcom.github.io/autotests/253//#testresult/e3e2aeb2f6937787","status":"passed","time":{"start":1751897229061,"stop":1751897229703,"duration":642}},{"uid":"b5b06e6375422851","reportUrl":"https://vaizcom.github.io/autotests/252//#testresult/b5b06e6375422851","status":"passed","time":{"start":1751893923087,"stop":1751893923858,"duration":771}},{"uid":"ce892c82e2fb42e0","reportUrl":"https://vaizcom.github.io/autotests/251//#testresult/ce892c82e2fb42e0","status":"passed","time":{"start":1751889619715,"stop":1751889620442,"duration":727}},{"uid":"3904513650e2bfa7","reportUrl":"https://vaizcom.github.io/autotests/250//#testresult/3904513650e2bfa7","status":"passed","time":{"start":1751888309277,"stop":1751888309832,"duration":555}},{"uid":"9b9534faf70a03e2","reportUrl":"https://vaizcom.github.io/autotests/249//#testresult/9b9534faf70a03e2","status":"passed","time":{"start":1751887703028,"stop":1751887703555,"duration":527}},{"uid":"f49b5e8def6a682b","reportUrl":"https://vaizcom.github.io/autotests/248//#testresult/f49b5e8def6a682b","status":"passed","time":{"start":1751884482841,"stop":1751884483533,"duration":692}},{"uid":"d0f7fe5bc367c70","reportUrl":"https://vaizcom.github.io/autotests/247//#testresult/d0f7fe5bc367c70","status":"passed","time":{"start":1751882736361,"stop":1751882737058,"duration":697}},{"uid":"b84adb08d17a6500","reportUrl":"https://vaizcom.github.io/autotests/246//#testresult/b84adb08d17a6500","status":"passed","time":{"start":1751534981453,"stop":1751534982004,"duration":551}},{"uid":"af617b171575327d","reportUrl":"https://vaizcom.github.io/autotests/245//#testresult/af617b171575327d","status":"passed","time":{"start":1751525377181,"stop":1751525378256,"duration":1075}},{"uid":"1bcf131ab4cf6e8c","reportUrl":"https://vaizcom.github.io/autotests/244//#testresult/1bcf131ab4cf6e8c","status":"passed","time":{"start":1751463803849,"stop":1751463804373,"duration":524}},{"uid":"bc6a1e505e26fd3e","reportUrl":"https://vaizcom.github.io/autotests/243//#testresult/bc6a1e505e26fd3e","status":"passed","time":{"start":1751463514195,"stop":1751463514768,"duration":573}}]},"tags":["backend"]},"source":"f3eb639fa3977107.json","parameterValues":[]}