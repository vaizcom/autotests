{"uid":"4bef6311e3d3488b","name":"Тест: Проверка редактирования имени проекта","fullName":"tests.test_backend.project.test_project#test_edit_project_name","historyId":"372ffdd854072b56832ab701bdd1d5af","time":{"start":1761911307977,"stop":1761911307977,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fbc912cb790>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761911162887,"stop":1761911162887,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761911162888,"stop":1761911163517,"duration":629},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761911172524,"stop":1761911172705,"duration":181},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.project"},{"name":"suite","value":"test_project"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.project.test_project"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":53},"items":[{"uid":"58dee07c568edb04","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/58dee07c568edb04","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910917829,"stop":1761910917829,"duration":0}},{"uid":"1ea836d04a388951","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/1ea836d04a388951","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910619469,"stop":1761910619469,"duration":0}},{"uid":"95207264c778a183","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/95207264c778a183","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910012956,"stop":1761910012956,"duration":0}},{"uid":"52c2707ae683d905","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/52c2707ae683d905","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900044044,"stop":1761900044044,"duration":0}},{"uid":"cf2893a77ba5136c","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/cf2893a77ba5136c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835063182,"stop":1761835063182,"duration":0}},{"uid":"70d9af9173dccbf9","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/70d9af9173dccbf9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834650017,"stop":1761834650017,"duration":0}},{"uid":"1d53cc837d128a8e","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/1d53cc837d128a8e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833485908,"stop":1761833485908,"duration":0}},{"uid":"aa7eea78abd81c07","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/aa7eea78abd81c07","status":"passed","time":{"start":1761821826668,"stop":1761821826878,"duration":210}},{"uid":"481ef110d1200334","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/481ef110d1200334","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818773804,"stop":1761818773804,"duration":0}},{"uid":"7839574fdce9376d","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/7839574fdce9376d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748636925,"stop":1761748636925,"duration":0}},{"uid":"434592bfc5667d71","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/434592bfc5667d71","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747914035,"stop":1761747914035,"duration":0}},{"uid":"5b45fcca1ac8353b","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/5b45fcca1ac8353b","status":"passed","time":{"start":1761747037788,"stop":1761747038119,"duration":331}},{"uid":"3ed6d19eb1fd7b0b","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/3ed6d19eb1fd7b0b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745744345,"stop":1761745744345,"duration":0}},{"uid":"1fcd8391d3e73d1","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/1fcd8391d3e73d1","status":"passed","time":{"start":1761576858573,"stop":1761576858849,"duration":276}},{"uid":"8eac8734ab56a1b5","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/8eac8734ab56a1b5","status":"passed","time":{"start":1761557478310,"stop":1761557478522,"duration":212}},{"uid":"c4c7176271da9ad","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/c4c7176271da9ad","status":"passed","time":{"start":1761308695450,"stop":1761308695664,"duration":214}},{"uid":"46e9b63700f8fa51","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/46e9b63700f8fa51","status":"passed","time":{"start":1761306862973,"stop":1761306863208,"duration":235}},{"uid":"fc383ef71602379a","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/fc383ef71602379a","status":"passed","time":{"start":1761137162084,"stop":1761137162345,"duration":261}},{"uid":"ea3ad9341101627b","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/ea3ad9341101627b","status":"passed","time":{"start":1761135860789,"stop":1761135861049,"duration":260}},{"uid":"f0eebfff4746f972","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/f0eebfff4746f972","status":"passed","time":{"start":1761134268792,"stop":1761134269000,"duration":208}}]},"tags":["backend"]},"source":"4bef6311e3d3488b.json","parameterValues":[]}