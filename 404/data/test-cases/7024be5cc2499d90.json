{"uid":"7024be5cc2499d90","name":"test_board_name_validation[length > 50]","fullName":"tests.test_backend.board.board_validation_test#test_board_name_validation","historyId":"b3dc2a1569017221332070a03baa46ac","time":{"start":1761921773191,"stop":1761921773191,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fc7d133bfd0>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761921763685,"stop":1761921763685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761921763685,"stop":1761921764117,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761921773063,"stop":1761921773182,"duration":119},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.board"},{"name":"suite","value":"board_validation_test"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2549-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.board.board_validation_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"400"},{"name":"name","value":"'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":55},"items":[{"uid":"c0a3e8cd67dcd08f","reportUrl":"https://vaizcom.github.io/autotests/404//#testresult/c0a3e8cd67dcd08f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761912081017,"stop":1761912081017,"duration":0}},{"uid":"aced84a8d9054c59","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/aced84a8d9054c59","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911172714,"stop":1761911172714,"duration":0}},{"uid":"8b72e9ec3e382878","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/8b72e9ec3e382878","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910801548,"stop":1761910801548,"duration":0}},{"uid":"79a06b882a5a4e0a","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/79a06b882a5a4e0a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910503886,"stop":1761910503886,"duration":0}},{"uid":"294c4544ae8ae82f","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/294c4544ae8ae82f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761909866914,"stop":1761909866914,"duration":0}},{"uid":"e12c4a2d25d623ab","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/e12c4a2d25d623ab","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761899900829,"stop":1761899900829,"duration":0}},{"uid":"855e14f83eb34da1","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/855e14f83eb34da1","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834949834,"stop":1761834949834,"duration":0}},{"uid":"e9a3ccabf4dc6c98","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/e9a3ccabf4dc6c98","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834497541,"stop":1761834497541,"duration":0}},{"uid":"9ea462a24e8bbd85","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/9ea462a24e8bbd85","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833327264,"stop":1761833327264,"duration":0}},{"uid":"d9a92feb67bcd0e0","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/d9a92feb67bcd0e0","status":"passed","time":{"start":1761821492128,"stop":1761821492308,"duration":180}},{"uid":"c01f7ae30870e21c","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/c01f7ae30870e21c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818627523,"stop":1761818627523,"duration":0}},{"uid":"ccd1d511aef8a9b5","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/ccd1d511aef8a9b5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748512103,"stop":1761748512103,"duration":0}},{"uid":"ba5be62802c81622","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/ba5be62802c81622","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747771690,"stop":1761747771690,"duration":0}},{"uid":"a8d445c30b1aaf6b","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/a8d445c30b1aaf6b","status":"passed","time":{"start":1761746601892,"stop":1761746602188,"duration":296}},{"uid":"891a71cd9bd3d9cf","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/891a71cd9bd3d9cf","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745636976,"stop":1761745636976,"duration":0}},{"uid":"f9fc52507926683d","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/f9fc52507926683d","status":"passed","time":{"start":1761576482016,"stop":1761576482236,"duration":220}},{"uid":"ab1228c3022a4fb8","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/ab1228c3022a4fb8","status":"passed","time":{"start":1761557139763,"stop":1761557139962,"duration":199}},{"uid":"f0beea80f3a162d8","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/f0beea80f3a162d8","status":"passed","time":{"start":1761308363343,"stop":1761308363538,"duration":195}},{"uid":"2f8bbdc1bae213a7","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/2f8bbdc1bae213a7","status":"passed","time":{"start":1761306510700,"stop":1761306510917,"duration":217}},{"uid":"c46500bb1fd4d88a","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/c46500bb1fd4d88a","status":"passed","time":{"start":1761136804750,"stop":1761136804992,"duration":242}}]},"tags":["backend"]},"source":"7024be5cc2499d90.json","parameterValues":["400","'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'"]}