{"uid":"252a824b62875235","name":"Создание документа с различными значениями title — ожидаемый статус 200","fullName":"tests.test_backend.document.test_create_document#test_document_title_validation","historyId":"1e5aa4a9c8a7b6c54868ea85bb9e62a7","time":{"start":1761910911846,"stop":1761910911846,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f1c6962ef90>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910792963,"stop":1761910793391,"duration":428},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761910801404,"stop":1761910801539,"duration":135},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_create_document"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2545-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_create_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_actual_title","value":"'<script>alert(1)</script>'"},{"name":"expected_status","value":"200"},{"name":"title","value":"'<script>alert(1)</script>'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":52},"items":[{"uid":"e0c5177715a3348d","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/e0c5177715a3348d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910613706,"stop":1761910613706,"duration":0}},{"uid":"67e89f04cd233546","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/67e89f04cd233546","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910005567,"stop":1761910005567,"duration":0}},{"uid":"be4c3ebfdb8d9c11","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/be4c3ebfdb8d9c11","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900037056,"stop":1761900037056,"duration":0}},{"uid":"18f37b96c0463a57","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/18f37b96c0463a57","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835057669,"stop":1761835057669,"duration":0}},{"uid":"45887cb2e2d78d31","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/45887cb2e2d78d31","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834642161,"stop":1761834642161,"duration":0}},{"uid":"2d9760a20fc18667","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/2d9760a20fc18667","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833478278,"stop":1761833478278,"duration":0}},{"uid":"2f47ef41854f0a5f","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/2f47ef41854f0a5f","status":"passed","time":{"start":1761821716926,"stop":1761821717165,"duration":239}},{"uid":"341a9ed60c898507","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/341a9ed60c898507","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818766540,"stop":1761818766540,"duration":0}},{"uid":"455088dd57f5b2e5","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/455088dd57f5b2e5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748630324,"stop":1761748630324,"duration":0}},{"uid":"d110271d1ecd2711","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/d110271d1ecd2711","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747905867,"stop":1761747905867,"duration":0}},{"uid":"c3ca4d07df37d6df","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/c3ca4d07df37d6df","status":"passed","time":{"start":1761746881652,"stop":1761746882034,"duration":382}},{"uid":"43861b507e1a92a2","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/43861b507e1a92a2","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745738344,"stop":1761745738344,"duration":0}},{"uid":"451675d5badf6bc4","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/451675d5badf6bc4","status":"passed","time":{"start":1761576716029,"stop":1761576716328,"duration":299}},{"uid":"cc2677d4ba1172be","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/cc2677d4ba1172be","status":"passed","time":{"start":1761557365796,"stop":1761557366034,"duration":238}},{"uid":"656f6f1960486289","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/656f6f1960486289","status":"passed","time":{"start":1761308589910,"stop":1761308590150,"duration":240}},{"uid":"7094e45cdcb094b1","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/7094e45cdcb094b1","status":"passed","time":{"start":1761306751864,"stop":1761306752119,"duration":255}},{"uid":"3d268a1b11e8fbf","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/3d268a1b11e8fbf","status":"passed","time":{"start":1761137044702,"stop":1761137044950,"duration":248}},{"uid":"c5adac4b8a0641c3","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/c5adac4b8a0641c3","status":"passed","time":{"start":1761135722530,"stop":1761135722826,"duration":296}},{"uid":"f2db263c6a864979","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/f2db263c6a864979","status":"passed","time":{"start":1761134148958,"stop":1761134149223,"duration":265}},{"uid":"b8793cbafd36665a","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/b8793cbafd36665a","status":"passed","time":{"start":1761128511177,"stop":1761128511491,"duration":314}}]},"tags":["backend"]},"source":"252a824b62875235.json","parameterValues":["'<script>alert(1)</script>'","200","'<script>alert(1)</script>'"]}