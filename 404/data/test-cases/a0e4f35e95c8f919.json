{"uid":"a0e4f35e95c8f919","name":"test_foreign_space_access_denied[member]","fullName":"tests.test_backend.document.test_get_documents#test_foreign_space_access_denied","historyId":"d8b2b790bafae3691c99f9c92882e87a","time":{"start":1761921880367,"stop":1761921880367,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fc7d133bfd0>\nrequest = <FixtureRequest for <Function test_foreign_space_access_denied[member]>>\nkind = 'Member', fixture_name = 'temp_member'\nforeign_space = '6904cb55ad6186e46351f89c'\n\n    @pytest.mark.parametrize(\n        'kind, fixture_name',\n        [\n            ('Project', 'temp_project'),\n            ('Space', 'temp_space'),\n            ('Member', 'temp_member'),\n        ],\n        ids=['project', 'space', 'member'],\n    )\n    def test_foreign_space_access_denied(owner_client, request, kind, fixture_name, foreign_space):\n>       kind_id = request.getfixturevalue(fixture_name)\n\ntests/test_backend/document/test_get_documents.py:179: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py:532: in getfixturevalue\n    fixturedef = self._get_active_fixturedef(argname)\n/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py:617: in _get_active_fixturedef\n    fixturedef.execute(request=subrequest)\n/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py:1047: in execute\n    fixturedef = request._get_active_fixturedef(argname)\n/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py:617: in _get_active_fixturedef\n    fixturedef.execute(request=subrequest)\n/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py:1071: in execute\n    raise exc.with_traceback(exc_tb)\n/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py:1140: in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py:891: in call_fixture_func\n    fixture_result = next(generator)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nowner_client = <tests.core.client.APIClient object at 0x7fc7d133bfd0>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761921763685,"stop":1761921763685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761921763685,"stop":1761921764117,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"guest_client","time":{"start":1761921770374,"stop":1761921770656,"duration":282},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"foreign_space","time":{"start":1761921877397,"stop":1761921878296,"duration":899},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"foreign_space::0","time":{"start":1761921895458,"stop":1761921895647,"duration":189},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_documents"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2549-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_documents"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"fixture_name","value":"'temp_member'"},{"name":"kind","value":"'Member'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":55},"items":[{"uid":"e7fed799e2f4e377","reportUrl":"https://vaizcom.github.io/autotests/404//#testresult/e7fed799e2f4e377","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761912191380,"stop":1761912191380,"duration":0}},{"uid":"e9d4d83adcd35ce7","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/e9d4d83adcd35ce7","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911304360,"stop":1761911304360,"duration":0}},{"uid":"8d5d380d5277bc82","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/8d5d380d5277bc82","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910915030,"stop":1761910915030,"duration":0}},{"uid":"7972208288584d56","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/7972208288584d56","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910616175,"stop":1761910616175,"duration":0}},{"uid":"d0d788ddada8fd3d","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/d0d788ddada8fd3d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910009324,"stop":1761910009324,"duration":0}},{"uid":"7ab053923b70892e","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/7ab053923b70892e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900040418,"stop":1761900040418,"duration":0}},{"uid":"a7012df2d483aafa","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/a7012df2d483aafa","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835060570,"stop":1761835060571,"duration":1}},{"uid":"d32349a642f73253","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/d32349a642f73253","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834645712,"stop":1761834645713,"duration":1}},{"uid":"3b1c93fd91b736b6","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/3b1c93fd91b736b6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833482090,"stop":1761833482090,"duration":0}},{"uid":"66cba239744a3a67","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/66cba239744a3a67","status":"passed","time":{"start":1761821762954,"stop":1761821763109,"duration":155}},{"uid":"3f962e351bc6b981","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/3f962e351bc6b981","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818770231,"stop":1761818770231,"duration":0}},{"uid":"82e4bf727f4e46f9","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/82e4bf727f4e46f9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748633504,"stop":1761748633504,"duration":0}},{"uid":"cc9258362220ea1d","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/cc9258362220ea1d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747909814,"stop":1761747909814,"duration":0}},{"uid":"6c0e03544734c4f9","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/6c0e03544734c4f9","status":"passed","time":{"start":1761746952523,"stop":1761746952770,"duration":247}},{"uid":"78a82fa5ec3646eb","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/78a82fa5ec3646eb","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745741649,"stop":1761745741649,"duration":0}},{"uid":"77d9e317903d8fb2","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/77d9e317903d8fb2","status":"passed","time":{"start":1761576782081,"stop":1761576782268,"duration":187}},{"uid":"f0acc0eb7d5b8c97","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/f0acc0eb7d5b8c97","status":"passed","time":{"start":1761557416675,"stop":1761557416821,"duration":146}},{"uid":"1f73d5332fdeff5","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/1f73d5332fdeff5","status":"passed","time":{"start":1761308636477,"stop":1761308636623,"duration":146}},{"uid":"aeec4ad8e00b849a","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/aeec4ad8e00b849a","status":"passed","time":{"start":1761306800817,"stop":1761306800987,"duration":170}},{"uid":"beec4dd584ee80b4","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/beec4dd584ee80b4","status":"passed","time":{"start":1761137096464,"stop":1761137096614,"duration":150}}]},"tags":["backend"]},"source":"a0e4f35e95c8f919.json","parameterValues":["'temp_member'","'Member'"]}