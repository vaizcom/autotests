{"uid":"ef90bd2385c8aed1","name":"Получение соседей Space-документа для роли manager","fullName":"tests.test_backend.document.access_doc.test_get_siblings_doc_access#test_get_space_doc_siblings_access_by_roles","historyId":"613cf59724c363b4ea4cae3bcea1f907","time":{"start":1752235379128,"stop":1752235381216,"duration":2088},"status":"failed","statusMessage":"AssertionError: Некорректный правый сосед\nassert '6870fd734aff74363a1c8bf1' == '6870fd734aff74363a1c8bf8'\n  \n  - 6870fd734aff74363a1c8bf8\n  ?                        ^\n  + 6870fd734aff74363a1c8bf1\n  ?                        ^","statusTrace":"request = <FixtureRequest for <Function test_get_space_doc_siblings_access_by_roles[manager]>>\nmain_space = '6866309d85fb8d104544a61e', client_fixture = 'manager_client'\nexpected_status = 200\n\n    @pytest.mark.parametrize(\n        'client_fixture, expected_status',\n        [\n            ('owner_client', 200),\n            ('manager_client', 200),\n            ('member_client', 200),\n            ('guest_client', 403),\n        ],\n        ids=['owner', 'manager', 'member', 'guest'],\n    )\n    def test_get_space_doc_siblings_access_by_roles(request, main_space, client_fixture, expected_status):\n        api_client = request.getfixturevalue(client_fixture)\n        role = client_fixture.replace('_client', '')\n        current_date = datetime.now().strftime('%d.%m_%H:%M:%S')\n    \n        allure.dynamic.title(f'Получение соседей Space-документа для роли {role}')\n    \n        doc_ids = []\n        with allure.step(f'{role} создаёт три Space-документа для проверки соседей'):\n            for index in range(3):\n                title = f'{current_date}_{role}_Sibling Test Doc {index}'\n                create_resp = api_client.post(\n                    **create_document_endpoint(kind='Space', kind_id=main_space, space_id=main_space, title=title)\n                )\n                if create_resp.status_code != 200:\n                    with allure.step(f'Не удалось создать документ {index}, статус {create_resp.status_code}'):\n                        assert expected_status == 403\n                    return\n                doc_id = create_resp.json()['payload']['document']['_id']\n                doc_ids.append(doc_id)\n    \n        middle_doc_id = doc_ids[1]\n    \n        with allure.step(f'{role} пытается получить соседей для среднего документа'):\n            siblings_resp = api_client.post(\n                **get_document_siblings_endpoint(document_id=middle_doc_id, space_id=main_space)\n            )\n            assert siblings_resp.status_code == expected_status\n    \n            if siblings_resp.status_code == 200:\n                payload = siblings_resp.json().get('payload', {})\n                with allure.step('Проверка наличия левого и правого соседа'):\n                    assert 'prevSibling' in payload, 'Нет prevSibling в ответе'\n                    assert 'nextSibling' in payload, 'Нет nextSibling в ответе'\n                    assert payload['prevSibling']['_id'] == doc_ids[0], 'Некорректный левый сосед'\n>                   assert payload['nextSibling']['_id'] == doc_ids[2], 'Некорректный правый сосед'\nE                   AssertionError: Некорректный правый сосед\nE                   assert '6870fd734aff74363a1c8bf1' == '6870fd734aff74363a1c8bf8'\nE                     \nE                     - 6870fd734aff74363a1c8bf8\nE                     ?                        ^\nE                     + 6870fd734aff74363a1c8bf1\nE                     ?                        ^\n\ntests/test_backend/document/access_doc/test_get_siblings_doc_access.py:61: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1752235198931,"stop":1752235198931,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1752235198931,"stop":1752235198931,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1752235198931,"stop":1752235198931,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1752235198931,"stop":1752235198931,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1752235231054,"stop":1752235232639,"duration":1585},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1752235232639,"stop":1752235233118,"duration":479},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"manager_client","time":{"start":1752235233118,"stop":1752235233684,"duration":566},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Некорректный правый сосед\nassert '6870fd734aff74363a1c8bf1' == '6870fd734aff74363a1c8bf8'\n  \n  - 6870fd734aff74363a1c8bf8\n  ?                        ^\n  + 6870fd734aff74363a1c8bf1\n  ?                        ^","statusTrace":"request = <FixtureRequest for <Function test_get_space_doc_siblings_access_by_roles[manager]>>\nmain_space = '6866309d85fb8d104544a61e', client_fixture = 'manager_client'\nexpected_status = 200\n\n    @pytest.mark.parametrize(\n        'client_fixture, expected_status',\n        [\n            ('owner_client', 200),\n            ('manager_client', 200),\n            ('member_client', 200),\n            ('guest_client', 403),\n        ],\n        ids=['owner', 'manager', 'member', 'guest'],\n    )\n    def test_get_space_doc_siblings_access_by_roles(request, main_space, client_fixture, expected_status):\n        api_client = request.getfixturevalue(client_fixture)\n        role = client_fixture.replace('_client', '')\n        current_date = datetime.now().strftime('%d.%m_%H:%M:%S')\n    \n        allure.dynamic.title(f'Получение соседей Space-документа для роли {role}')\n    \n        doc_ids = []\n        with allure.step(f'{role} создаёт три Space-документа для проверки соседей'):\n            for index in range(3):\n                title = f'{current_date}_{role}_Sibling Test Doc {index}'\n                create_resp = api_client.post(\n                    **create_document_endpoint(kind='Space', kind_id=main_space, space_id=main_space, title=title)\n                )\n                if create_resp.status_code != 200:\n                    with allure.step(f'Не удалось создать документ {index}, статус {create_resp.status_code}'):\n                        assert expected_status == 403\n                    return\n                doc_id = create_resp.json()['payload']['document']['_id']\n                doc_ids.append(doc_id)\n    \n        middle_doc_id = doc_ids[1]\n    \n        with allure.step(f'{role} пытается получить соседей для среднего документа'):\n            siblings_resp = api_client.post(\n                **get_document_siblings_endpoint(document_id=middle_doc_id, space_id=main_space)\n            )\n            assert siblings_resp.status_code == expected_status\n    \n            if siblings_resp.status_code == 200:\n                payload = siblings_resp.json().get('payload', {})\n                with allure.step('Проверка наличия левого и правого соседа'):\n                    assert 'prevSibling' in payload, 'Нет prevSibling в ответе'\n                    assert 'nextSibling' in payload, 'Нет nextSibling в ответе'\n                    assert payload['prevSibling']['_id'] == doc_ids[0], 'Некорректный левый сосед'\n>                   assert payload['nextSibling']['_id'] == doc_ids[2], 'Некорректный правый сосед'\nE                   AssertionError: Некорректный правый сосед\nE                   assert '6870fd734aff74363a1c8bf1' == '6870fd734aff74363a1c8bf8'\nE                     \nE                     - 6870fd734aff74363a1c8bf8\nE                     ?                        ^\nE                     + 6870fd734aff74363a1c8bf1\nE                     ?                        ^\n\ntests/test_backend/document/access_doc/test_get_siblings_doc_access.py:61: AssertionError","steps":[{"name":"manager создаёт три Space-документа для проверки соседей","time":{"start":1752235379128,"stop":1752235380330,"duration":1202},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"manager пытается получить соседей для среднего документа","time":{"start":1752235380330,"stop":1752235381216,"duration":886},"status":"failed","statusMessage":"AssertionError: Некорректный правый сосед\nassert '6870fd734aff74363a1c8bf1' == '6870fd734aff74363a1c8bf8'\n  \n  - 6870fd734aff74363a1c8bf8\n  ?                        ^\n  + 6870fd734aff74363a1c8bf1\n  ?                        ^\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/document/access_doc/test_get_siblings_doc_access.py\", line 61, in test_get_space_doc_siblings_access_by_roles\n    assert payload['nextSibling']['_id'] == doc_ids[2], 'Некорректный правый сосед'\n","steps":[{"name":"Проверка наличия левого и правого соседа","time":{"start":1752235381215,"stop":1752235381216,"duration":1},"status":"failed","statusMessage":"AssertionError: Некорректный правый сосед\nassert '6870fd734aff74363a1c8bf1' == '6870fd734aff74363a1c8bf8'\n  \n  - 6870fd734aff74363a1c8bf8\n  ?                        ^\n  + 6870fd734aff74363a1c8bf1\n  ?                        ^\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/document/access_doc/test_get_siblings_doc_access.py\", line 61, in test_get_space_doc_siblings_access_by_roles\n    assert payload['nextSibling']['_id'] == doc_ids[2], 'Некорректный правый сосед'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document.access_doc"},{"name":"suite","value":"test_get_siblings_doc_access"},{"name":"host","value":"pkrvmfkh1xnbeme"},{"name":"thread","value":"2615-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.access_doc.test_get_siblings_doc_access"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"client_fixture","value":"'manager_client'"},{"name":"expected_status","value":"200"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":31,"unknown":0,"total":33},"items":[{"uid":"94dc3bb0d51ca667","reportUrl":"https://vaizcom.github.io/autotests/283//#testresult/94dc3bb0d51ca667","status":"passed","time":{"start":1752234432601,"stop":1752234436481,"duration":3880}},{"uid":"93440f88ca866ae8","reportUrl":"https://vaizcom.github.io/autotests/284//#testresult/93440f88ca866ae8","status":"passed","time":{"start":1752234400786,"stop":1752234403040,"duration":2254}},{"uid":"b20356f5558bd0cc","reportUrl":"https://vaizcom.github.io/autotests/281//#testresult/b20356f5558bd0cc","status":"failed","statusDetails":"AssertionError: Некорректный левый сосед\nassert '6870f6714aff74363a1b4175' == '6870f6714aff74363a1b416d'\n  \n  - 6870f6714aff74363a1b416d\n  ?                       ^^\n  + 6870f6714aff74363a1b4175\n  ?                       ^^","time":{"start":1752233585286,"stop":1752233587286,"duration":2000}},{"uid":"8b01ec1b1b0d9e2f","reportUrl":"https://vaizcom.github.io/autotests/280//#testresult/8b01ec1b1b0d9e2f","status":"passed","time":{"start":1752232646150,"stop":1752232648082,"duration":1932}},{"uid":"6c61f6c8facf2247","reportUrl":"https://vaizcom.github.io/autotests/279//#testresult/6c61f6c8facf2247","status":"passed","time":{"start":1752232184193,"stop":1752232186244,"duration":2051}},{"uid":"9cbf6ba5dd7bfeaf","reportUrl":"https://vaizcom.github.io/autotests/278//#testresult/9cbf6ba5dd7bfeaf","status":"passed","time":{"start":1752223579213,"stop":1752223580944,"duration":1731}},{"uid":"91154f138ddb346","reportUrl":"https://vaizcom.github.io/autotests/277//#testresult/91154f138ddb346","status":"passed","time":{"start":1752218318444,"stop":1752218320231,"duration":1787}},{"uid":"b67e12c6ee12ba4c","reportUrl":"https://vaizcom.github.io/autotests/276//#testresult/b67e12c6ee12ba4c","status":"passed","time":{"start":1752151085521,"stop":1752151087649,"duration":2128}},{"uid":"44f824c41a6a6556","reportUrl":"https://vaizcom.github.io/autotests/275//#testresult/44f824c41a6a6556","status":"passed","time":{"start":1752148935632,"stop":1752148937275,"duration":1643}},{"uid":"c783c43b192f3133","reportUrl":"https://vaizcom.github.io/autotests/274//#testresult/c783c43b192f3133","status":"passed","time":{"start":1752138410918,"stop":1752138413327,"duration":2409}},{"uid":"f95b088852a4c7c9","reportUrl":"https://vaizcom.github.io/autotests/273//#testresult/f95b088852a4c7c9","status":"passed","time":{"start":1752137285650,"stop":1752137287497,"duration":1847}},{"uid":"87fc11921ed68e1","reportUrl":"https://vaizcom.github.io/autotests/272//#testresult/87fc11921ed68e1","status":"passed","time":{"start":1752133922758,"stop":1752133925056,"duration":2298}},{"uid":"a4bedcbdd4204e27","reportUrl":"https://vaizcom.github.io/autotests/271//#testresult/a4bedcbdd4204e27","status":"passed","time":{"start":1752066509421,"stop":1752066511137,"duration":1716}},{"uid":"6a3b1400984444f7","reportUrl":"https://vaizcom.github.io/autotests/270//#testresult/6a3b1400984444f7","status":"passed","time":{"start":1752065514890,"stop":1752065517086,"duration":2196}},{"uid":"3c2ba37db8a8abc6","reportUrl":"https://vaizcom.github.io/autotests/269//#testresult/3c2ba37db8a8abc6","status":"passed","time":{"start":1752064732944,"stop":1752064735250,"duration":2306}},{"uid":"67f8c5594b9b3131","reportUrl":"https://vaizcom.github.io/autotests/268//#testresult/67f8c5594b9b3131","status":"passed","time":{"start":1752062516465,"stop":1752062518309,"duration":1844}},{"uid":"5da5db0d4bda2be6","reportUrl":"https://vaizcom.github.io/autotests/267//#testresult/5da5db0d4bda2be6","status":"passed","time":{"start":1752060654077,"stop":1752060656071,"duration":1994}},{"uid":"fb09bd020ef4fc12","reportUrl":"https://vaizcom.github.io/autotests/266//#testresult/fb09bd020ef4fc12","status":"passed","time":{"start":1752059628640,"stop":1752059630684,"duration":2044}},{"uid":"5ab6355ade686668","reportUrl":"https://vaizcom.github.io/autotests/265//#testresult/5ab6355ade686668","status":"passed","time":{"start":1752050806676,"stop":1752050808770,"duration":2094}},{"uid":"50b337b1927966ce","reportUrl":"https://vaizcom.github.io/autotests/264//#testresult/50b337b1927966ce","status":"passed","time":{"start":1752049403879,"stop":1752049405962,"duration":2083}}]},"tags":["backend"]},"source":"ef90bd2385c8aed1.json","parameterValues":["'manager_client'","200"]}