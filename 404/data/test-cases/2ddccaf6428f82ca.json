{"uid":"2ddccaf6428f82ca","name":"Создание документа с различными значениями title — ожидаемый статус 400","fullName":"tests.test_backend.document.test_create_document#test_document_title_validation","historyId":"2139239edad83f53334828f281317b71","time":{"start":1761912188204,"stop":1761912188204,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761912080667,"stop":1761912081009,"duration":342},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_create_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_create_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_actual_title","value":"None"},{"name":"expected_status","value":"400"},{"name":"title","value":"[]"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":54},"items":[{"uid":"6c841dc4941c2ed6","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/6c841dc4941c2ed6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911300145,"stop":1761911300145,"duration":0}},{"uid":"bae71eaa8f12ada0","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/bae71eaa8f12ada0","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910911810,"stop":1761910911810,"duration":0}},{"uid":"8d98eadbe8d2c0a3","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/8d98eadbe8d2c0a3","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910613685,"stop":1761910613685,"duration":0}},{"uid":"6c58c71a07100d46","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/6c58c71a07100d46","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910005546,"stop":1761910005546,"duration":0}},{"uid":"5f753287de16b5e5","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/5f753287de16b5e5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900037036,"stop":1761900037036,"duration":0}},{"uid":"e6dd7e2fc9a1be83","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/e6dd7e2fc9a1be83","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835057649,"stop":1761835057649,"duration":0}},{"uid":"d9f5db91ee643db0","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/d9f5db91ee643db0","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834642141,"stop":1761834642141,"duration":0}},{"uid":"ce787195f5446b14","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/ce787195f5446b14","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833478260,"stop":1761833478260,"duration":0}},{"uid":"73cf10425133d2f3","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/73cf10425133d2f3","status":"passed","time":{"start":1761821716253,"stop":1761821716460,"duration":207}},{"uid":"a8e5199821540399","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/a8e5199821540399","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818766520,"stop":1761818766520,"duration":0}},{"uid":"bd7f945946d8e35","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/bd7f945946d8e35","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748630304,"stop":1761748630304,"duration":0}},{"uid":"6a7f283015bc3c72","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/6a7f283015bc3c72","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747905846,"stop":1761747905846,"duration":0}},{"uid":"b70a078106c670d8","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/b70a078106c670d8","status":"passed","time":{"start":1761746880651,"stop":1761746880958,"duration":307}},{"uid":"6ac760e4aee0668b","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/6ac760e4aee0668b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745738323,"stop":1761745738323,"duration":0}},{"uid":"18e0451d4f14a515","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/18e0451d4f14a515","status":"passed","time":{"start":1761576715244,"stop":1761576715477,"duration":233}},{"uid":"511f8fdaef8f3167","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/511f8fdaef8f3167","status":"passed","time":{"start":1761557365095,"stop":1761557365291,"duration":196}},{"uid":"270f671114779a2c","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/270f671114779a2c","status":"passed","time":{"start":1761308589258,"stop":1761308589444,"duration":186}},{"uid":"2b6f6b9486bca8b4","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/2b6f6b9486bca8b4","status":"passed","time":{"start":1761306751120,"stop":1761306751348,"duration":228}},{"uid":"8eb8dc162bdda250","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/8eb8dc162bdda250","status":"passed","time":{"start":1761137043923,"stop":1761137044173,"duration":250}},{"uid":"bdbdb817648db79f","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/bdbdb817648db79f","status":"passed","time":{"start":1761135721670,"stop":1761135721925,"duration":255}}]},"tags":["backend"]},"source":"2ddccaf6428f82ca.json","parameterValues":["None","400","[]"]}