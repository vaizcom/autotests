{"uid":"9f8374b1d6622e7d","name":"Создание проекта с невалидным slug (не латиница)","fullName":"tests.test_backend.project.test_project#test_project_slug_only_latin_letter","historyId":"77ae0ed397b8c98fbd9ab45add82f64d","time":{"start":1759837466480,"stop":1759837466658,"duration":178},"status":"failed","statusMessage":"AssertionError: assert 503 == 400\n +  where 503 = <Response [503]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f0d403af650>\ntemp_space = '68e4fbe2e49ce50caff67b74'\n\n    @allure.title('Создание проекта с невалидным slug (не латиница)')\n    def test_project_slug_only_latin_letter(owner_client, temp_space):\n        slug = 'некорректный'\n        name = generate_project_name()\n        common_kwargs = {'color': 'blue', 'icon': 'Dot', 'description': 'нелатинский slug', 'space_id': temp_space}\n    \n        with allure.step('Отправка запроса с кириллическим slug'):\n            response = owner_client.post(**create_project_endpoint(name=name, slug=slug, **common_kwargs))\n    \n        with allure.step('Проверка, что API вернул 400 – slug должен быть на латинице'):\n>           assert response.status_code == 400\nE           assert 503 == 400\nE            +  where 503 = <Response [503]>.status_code\n\ntests/test_backend/project/test_project.py:73: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1759837147179,"stop":1759837147495,"duration":316},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1759837154550,"stop":1759837155711,"duration":1161},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 503 == 400\n +  where 503 = <Response [503]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f0d403af650>\ntemp_space = '68e4fbe2e49ce50caff67b74'\n\n    @allure.title('Создание проекта с невалидным slug (не латиница)')\n    def test_project_slug_only_latin_letter(owner_client, temp_space):\n        slug = 'некорректный'\n        name = generate_project_name()\n        common_kwargs = {'color': 'blue', 'icon': 'Dot', 'description': 'нелатинский slug', 'space_id': temp_space}\n    \n        with allure.step('Отправка запроса с кириллическим slug'):\n            response = owner_client.post(**create_project_endpoint(name=name, slug=slug, **common_kwargs))\n    \n        with allure.step('Проверка, что API вернул 400 – slug должен быть на латинице'):\n>           assert response.status_code == 400\nE           assert 503 == 400\nE            +  where 503 = <Response [503]>.status_code\n\ntests/test_backend/project/test_project.py:73: AssertionError","steps":[{"name":"Отправка запроса с кириллическим slug","time":{"start":1759837466480,"stop":1759837466657,"duration":177},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверка, что API вернул 400 – slug должен быть на латинице","time":{"start":1759837466657,"stop":1759837466657,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 503 == 400\n +  where 503 = <Response [503]>.status_code\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/project/test_project.py\", line 73, in test_project_slug_only_latin_letter\n    assert response.status_code == 400\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[{"name":"temp_space::0","time":{"start":1759837469360,"stop":1759837469533,"duration":173},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.project"},{"name":"suite","value":"test_project"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2583-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.project.test_project"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":4},"items":[{"uid":"92e8fbe45b084c6c","reportUrl":"https://vaizcom.github.io/autotests/355//#testresult/92e8fbe45b084c6c","status":"passed","time":{"start":1759836394178,"stop":1759836394401,"duration":223}},{"uid":"54a5dcaeb23bb07d","reportUrl":"https://vaizcom.github.io/autotests/354//#testresult/54a5dcaeb23bb07d","status":"passed","time":{"start":1759835725931,"stop":1759835726359,"duration":428}},{"uid":"bb77eb9865061993","reportUrl":"https://vaizcom.github.io/autotests/353//#testresult/bb77eb9865061993","status":"passed","time":{"start":1759834855997,"stop":1759834856251,"duration":254}}]},"tags":["backend"]},"source":"9f8374b1d6622e7d.json","parameterValues":[]}