{"uid":"5a7f508b1b5fe2b9","name":"Создание проекта с пустым названием","fullName":"tests.test_backend.project.test_project#test_project_name_empty","historyId":"fb497443fece2a3ff628735376d0f59b","time":{"start":1761912194097,"stop":1761912194097,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761912080667,"stop":1761912081009,"duration":342},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.project"},{"name":"suite","value":"test_project"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.project.test_project"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":54},"items":[{"uid":"12e2fe86065fc400","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/12e2fe86065fc400","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911307942,"stop":1761911307942,"duration":0}},{"uid":"883ff3ef2e71953","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/883ff3ef2e71953","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910917794,"stop":1761910917794,"duration":0}},{"uid":"13f82a61406516e4","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/13f82a61406516e4","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910619435,"stop":1761910619435,"duration":0}},{"uid":"46bb1deb66669e48","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/46bb1deb66669e48","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910012921,"stop":1761910012921,"duration":0}},{"uid":"f2983c0c53d3cd46","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/f2983c0c53d3cd46","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900044010,"stop":1761900044010,"duration":0}},{"uid":"4ca295eaa6a721af","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/4ca295eaa6a721af","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835063148,"stop":1761835063148,"duration":0}},{"uid":"be4c632c3d2d01cd","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/be4c632c3d2d01cd","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834649980,"stop":1761834649980,"duration":0}},{"uid":"e2a36be8b1100da3","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/e2a36be8b1100da3","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833485879,"stop":1761833485879,"duration":0}},{"uid":"16fac3aab6e9e871","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/16fac3aab6e9e871","status":"passed","time":{"start":1761821825644,"stop":1761821825835,"duration":191}},{"uid":"e59c9712df28c842","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/e59c9712df28c842","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818773771,"stop":1761818773771,"duration":0}},{"uid":"6c137edb555b5df3","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/6c137edb555b5df3","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748636891,"stop":1761748636891,"duration":0}},{"uid":"d8deef91a1b75221","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/d8deef91a1b75221","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747913988,"stop":1761747913988,"duration":0}},{"uid":"6f4454c5546e6445","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/6f4454c5546e6445","status":"passed","time":{"start":1761747036182,"stop":1761747036485,"duration":303}},{"uid":"cc90ff8b61ba1538","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/cc90ff8b61ba1538","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745744296,"stop":1761745744296,"duration":0}},{"uid":"b8ba95fb67c16b88","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/b8ba95fb67c16b88","status":"passed","time":{"start":1761576857220,"stop":1761576857436,"duration":216}},{"uid":"fd6e03ed114bd950","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/fd6e03ed114bd950","status":"passed","time":{"start":1761557477229,"stop":1761557477429,"duration":200}},{"uid":"ada6bca11f29351d","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/ada6bca11f29351d","status":"passed","time":{"start":1761308694392,"stop":1761308694580,"duration":188}},{"uid":"8719e0d4d92c0651","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/8719e0d4d92c0651","status":"passed","time":{"start":1761306861911,"stop":1761306862109,"duration":198}},{"uid":"869f620673fd6795","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/869f620673fd6795","status":"passed","time":{"start":1761137160849,"stop":1761137161069,"duration":220}},{"uid":"8a2b2fd4b5b11549","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/8a2b2fd4b5b11549","status":"passed","time":{"start":1761135859466,"stop":1761135859722,"duration":256}}]},"tags":["backend"]},"source":"5a7f508b1b5fe2b9.json","parameterValues":[]}