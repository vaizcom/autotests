{"uid":"b10b71842e5fd32a","name":"test_get_documents_invalid_inputs[invalid kind]","fullName":"tests.test_backend.document.test_get_documents#test_get_documents_invalid_inputs","historyId":"965e2d1656e723eff519ac7f7b9e2188","time":{"start":1752048048774,"stop":1752048048774,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f60ac7d5290>\ntemp_space = '686e2144dc7db2861c816ae1'\n\n    @pytest.fixture(scope='session')\n    def temp_project(owner_client, temp_space):\n        \"\"\"Создаёт проект, который используется во всех тестах модуля.\"\"\"\n        name = generate_project_name()\n        slug = generate_slug()\n        common_kwargs = {'color': 'blue', 'icon': 'Dot', 'description': 'temporary project', 'space_id': temp_space}\n        response = owner_client.post(**create_project_endpoint(name=name, slug=slug, **common_kwargs))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:124: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1752047939816,"stop":1752047940592,"duration":776},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1752047940592,"stop":1752047941242,"duration":650},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_project","time":{"start":1752047941242,"stop":1752047941963,"duration":721},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 124, in temp_project\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[{"name":"temp_space::0","time":{"start":1752048136220,"stop":1752048136701,"duration":481},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_documents"},{"name":"host","value":"pkrvmfkh1xnbeme"},{"name":"thread","value":"2510-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_documents"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case_id","value":"'invalid kind'"},{"name":"expected_status","value":"400"},{"name":"kind","value":"'WrongKind'"},{"name":"kind_id","value":"'valid_project_id'"},{"name":"space_id","value":"'valid_space_id'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":77,"unknown":0,"total":78},"items":[{"uid":"7e26c66bb92d8c49","reportUrl":"https://vaizcom.github.io/autotests/262//#testresult/7e26c66bb92d8c49","status":"passed","time":{"start":1752046740024,"stop":1752046740305,"duration":281}},{"uid":"b8a8aec7dd14b99a","reportUrl":"https://vaizcom.github.io/autotests/261//#testresult/b8a8aec7dd14b99a","status":"passed","time":{"start":1752044754260,"stop":1752044754520,"duration":260}},{"uid":"dc8b47ce2cbbe934","reportUrl":"https://vaizcom.github.io/autotests/260//#testresult/dc8b47ce2cbbe934","status":"passed","time":{"start":1751982740793,"stop":1751982740981,"duration":188}},{"uid":"95a8a5049a64402a","reportUrl":"https://vaizcom.github.io/autotests/259//#testresult/95a8a5049a64402a","status":"passed","time":{"start":1751976220957,"stop":1751976221214,"duration":257}},{"uid":"1e221924ff5335ea","reportUrl":"https://vaizcom.github.io/autotests/258//#testresult/1e221924ff5335ea","status":"passed","time":{"start":1751975173545,"stop":1751975173767,"duration":222}},{"uid":"1588219c3dadffb2","reportUrl":"https://vaizcom.github.io/autotests/257//#testresult/1588219c3dadffb2","status":"passed","time":{"start":1751973459595,"stop":1751973459785,"duration":190}},{"uid":"8f20c6213c74bf1c","reportUrl":"https://vaizcom.github.io/autotests/256//#testresult/8f20c6213c74bf1c","status":"passed","time":{"start":1751971733783,"stop":1751971734003,"duration":220}},{"uid":"7e66bf14e091d7fe","reportUrl":"https://vaizcom.github.io/autotests/255//#testresult/7e66bf14e091d7fe","status":"passed","time":{"start":1751965142268,"stop":1751965142517,"duration":249}},{"uid":"803092729b055055","reportUrl":"https://vaizcom.github.io/autotests/254//#testresult/803092729b055055","status":"passed","time":{"start":1751959229161,"stop":1751959229409,"duration":248}},{"uid":"26e0c037bab8394d","reportUrl":"https://vaizcom.github.io/autotests/253//#testresult/26e0c037bab8394d","status":"passed","time":{"start":1751897357001,"stop":1751897357291,"duration":290}},{"uid":"d5f2e3812efdfd34","reportUrl":"https://vaizcom.github.io/autotests/252//#testresult/d5f2e3812efdfd34","status":"passed","time":{"start":1751894048904,"stop":1751894049161,"duration":257}},{"uid":"8c875f8f1440ea3b","reportUrl":"https://vaizcom.github.io/autotests/251//#testresult/8c875f8f1440ea3b","status":"passed","time":{"start":1751889732251,"stop":1751889732532,"duration":281}},{"uid":"bf41d50a850b7b04","reportUrl":"https://vaizcom.github.io/autotests/250//#testresult/bf41d50a850b7b04","status":"passed","time":{"start":1751888407958,"stop":1751888408212,"duration":254}},{"uid":"3458b8e053762568","reportUrl":"https://vaizcom.github.io/autotests/249//#testresult/3458b8e053762568","status":"passed","time":{"start":1751887803391,"stop":1751887803711,"duration":320}},{"uid":"3ce50f0e8209b68d","reportUrl":"https://vaizcom.github.io/autotests/248//#testresult/3ce50f0e8209b68d","status":"passed","time":{"start":1751884573625,"stop":1751884573831,"duration":206}},{"uid":"15cf50077d7fcd1b","reportUrl":"https://vaizcom.github.io/autotests/247//#testresult/15cf50077d7fcd1b","status":"passed","time":{"start":1751882860843,"stop":1751882861124,"duration":281}},{"uid":"c780e44a7a338615","reportUrl":"https://vaizcom.github.io/autotests/246//#testresult/c780e44a7a338615","status":"passed","time":{"start":1751535061652,"stop":1751535061911,"duration":259}},{"uid":"153468066ba0891a","reportUrl":"https://vaizcom.github.io/autotests/245//#testresult/153468066ba0891a","status":"passed","time":{"start":1751525473738,"stop":1751525474028,"duration":290}},{"uid":"be004eb2d91aae7e","reportUrl":"https://vaizcom.github.io/autotests/244//#testresult/be004eb2d91aae7e","status":"passed","time":{"start":1751463872478,"stop":1751463872656,"duration":178}},{"uid":"61d29a4c19a637ec","reportUrl":"https://vaizcom.github.io/autotests/243//#testresult/61d29a4c19a637ec","status":"passed","time":{"start":1751463590527,"stop":1751463590775,"duration":248}}]},"tags":["backend"]},"source":"b10b71842e5fd32a.json","parameterValues":["'invalid kind'","400","'WrongKind'","'valid_project_id'","'valid_space_id'"]}