{"uid":"3b18bcae5ba43072","name":"Create task with minimal payload: клиент=member_client, ожидаемый статус=200","fullName":"tests.test_backend.task_service.create_task.access_task.test_create_task#test_create_task_with_minimal_payload","historyId":"f025175232770417be12e75c96310f42","time":{"start":1761911310737,"stop":1761911311834,"duration":1097},"description":"\n    Тест проверки создания задачи с минимальным набором полей в системе управления проектами под разными ролями.\n\n    Цель теста — убедиться, что можно успешно создать задачу, указав только минимально необходимые данные, и что поведение API зависит от прав пользователя (типа клиента).\n    В процессе теста дополнительно валидируются структура созданной задачи, значения по умолчанию, связи (creator, board и пр.), а также удаление задачи после проверки.\n    assert_task_keys обеспечивает падение теста при добавлении/удалении ключей с понятным сообщением.\n\n    Ход теста:\n        1. Получение клиента согласно переданной роли через фикстуру.\n        2. Получение id пользователя, с помощью которого осуществляется создание задачи.\n        3. Формирование минимального payload и попытка создать задачу через API.\n        4. Проверка статус-кода ответа.\n        5. Если задача успешно создана (ответ 200):\n            - Проверка наполнения и структуры ответа\n    ","descriptionHtml":"<pre><code>Тест проверки создания задачи с минимальным набором полей в системе управления проектами под разными ролями.\n\nЦель теста — убедиться, что можно успешно создать задачу, указав только минимально необходимые данные, и что поведение API зависит от прав пользователя (типа клиента).\nВ процессе теста дополнительно валидируются структура созданной задачи, значения по умолчанию, связи (creator, board и пр.), а также удаление задачи после проверки.\nassert_task_keys обеспечивает падение теста при добавлении/удалении ключей с понятным сообщением.\n\nХод теста:\n    1. Получение клиента согласно переданной роли через фикстуру.\n    2. Получение id пользователя, с помощью которого осуществляется создание задачи.\n    3. Формирование минимального payload и попытка создать задачу через API.\n    4. Проверка статус-кода ответа.\n    5. Если задача успешно создана (ответ 200):\n        - Проверка наполнения и структуры ответа\n</code></pre>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761911162887,"stop":1761911162887,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1761911166774,"stop":1761911167100,"duration":326},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1761911167101,"stop":1761911167366,"duration":265},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_project","time":{"start":1761911167366,"stop":1761911167640,"duration":274},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"member_client","time":{"start":1761911169328,"stop":1761911169626,"duration":298},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_board","time":{"start":1761911170720,"stop":1761911170979,"duration":259},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Тест проверки создания задачи с минимальным набором полей в системе управления проектами под разными ролями.\n\n    Цель теста — убедиться, что можно успешно создать задачу, указав только минимально необходимые данные, и что поведение API зависит от прав пользователя (типа клиента).\n    В процессе теста дополнительно валидируются структура созданной задачи, значения по умолчанию, связи (creator, board и пр.), а также удаление задачи после проверки.\n    assert_task_keys обеспечивает падение теста при добавлении/удалении ключей с понятным сообщением.\n\n    Ход теста:\n        1. Получение клиента согласно переданной роли через фикстуру.\n        2. Получение id пользователя, с помощью которого осуществляется создание задачи.\n        3. Формирование минимального payload и попытка создать задачу через API.\n        4. Проверка статус-кода ответа.\n        5. Если задача успешно создана (ответ 200):\n            - Проверка наполнения и структуры ответа\n    ","status":"passed","steps":[{"name":"Создание задачи с минимальным payload","time":{"start":1761911310976,"stop":1761911311295,"duration":319},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверка статус-кода: ожидаем 200","time":{"start":1761911311295,"stop":1761911311295,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем содержимое ответа с задачей","time":{"start":1761911311295,"stop":1761911311556,"duration":261},"status":"passed","steps":[{"name":"Проверка обязательных полей","time":{"start":1761911311295,"stop":1761911311295,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверка системных полей","time":{"start":1761911311295,"stop":1761911311556,"duration":261},"status":"passed","steps":[{"name":"Проверяем поле 'hrid'","time":{"start":1761911311295,"stop":1761911311556,"duration":261},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Проверка полей, которые должны быть пустыми","time":{"start":1761911311556,"stop":1761911311556,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверка полей с `None` (null)","time":{"start":1761911311556,"stop":1761911311556,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверка значений по умолчанию","time":{"start":1761911311556,"stop":1761911311556,"duration":0},"status":"passed","steps":[{"name":"Проверка полного совпадения набора ключей задачи","time":{"start":1761911311556,"stop":1761911311556,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true},{"name":"Удаляем задачу: 6904a20f6d222cdc62effbcf","time":{"start":1761911311557,"stop":1761911311833,"duration":276},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":11,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"access_task"},{"name":"tag","value":"backend"},{"name":"suite","value":"test_create_task"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.task_service.create_task.access_task.test_create_task"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"client_fixture","value":"'member_client'"},{"name":"expected_status","value":"200"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":21,"unknown":0,"total":21},"items":[{"uid":"b6b8c43227ad6abe","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/b6b8c43227ad6abe","status":"passed","time":{"start":1761910919741,"stop":1761910920759,"duration":1018}},{"uid":"5210501b2fa331b1","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/5210501b2fa331b1","status":"passed","time":{"start":1761910621621,"stop":1761910622697,"duration":1076}},{"uid":"757c452b0dd05845","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/757c452b0dd05845","status":"passed","time":{"start":1761910016385,"stop":1761910017519,"duration":1134}},{"uid":"7cc4b29c0afcd248","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/7cc4b29c0afcd248","status":"passed","time":{"start":1761900047640,"stop":1761900048814,"duration":1174}},{"uid":"c023593b40d85f20","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/c023593b40d85f20","status":"passed","time":{"start":1761835065204,"stop":1761835066147,"duration":943}},{"uid":"aae9fd9c2d342a38","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/aae9fd9c2d342a38","status":"passed","time":{"start":1761834652948,"stop":1761834654077,"duration":1129}},{"uid":"6390806732aa45df","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/6390806732aa45df","status":"passed","time":{"start":1761833489608,"stop":1761833490920,"duration":1312}},{"uid":"cc9c5f5862e095f2","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/cc9c5f5862e095f2","status":"passed","time":{"start":1761821843065,"stop":1761821843903,"duration":838}},{"uid":"12931053e9bf1f0e","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/12931053e9bf1f0e","status":"passed","time":{"start":1761818776416,"stop":1761818778344,"duration":1928}},{"uid":"84e5df5b4042e9d2","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/84e5df5b4042e9d2","status":"passed","time":{"start":1761748638999,"stop":1761748640146,"duration":1147}},{"uid":"bf3d5464c748b4f3","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/bf3d5464c748b4f3","status":"passed","time":{"start":1761747916801,"stop":1761747917853,"duration":1052}},{"uid":"b83e40e0a8a7bab1","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/b83e40e0a8a7bab1","status":"passed","time":{"start":1761747059768,"stop":1761747060775,"duration":1007}},{"uid":"9da84f9e0573f5d1","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/9da84f9e0573f5d1","status":"passed","time":{"start":1761745746999,"stop":1761745747966,"duration":967}},{"uid":"bb99f79c5f15ce2","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/bb99f79c5f15ce2","status":"passed","time":{"start":1761576877895,"stop":1761576879788,"duration":1893}},{"uid":"1f4766d8455e6f99","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/1f4766d8455e6f99","status":"passed","time":{"start":1761557493444,"stop":1761557494465,"duration":1021}},{"uid":"d0215ef1201e079f","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/d0215ef1201e079f","status":"passed","time":{"start":1761308713364,"stop":1761308714294,"duration":930}},{"uid":"8765a7d33d1a2745","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/8765a7d33d1a2745","status":"passed","time":{"start":1761306879232,"stop":1761306880172,"duration":940}},{"uid":"7b66346e9c4f0000","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/7b66346e9c4f0000","status":"passed","time":{"start":1761137180290,"stop":1761137181273,"duration":983}},{"uid":"ab2fc8375556d712","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/ab2fc8375556d712","status":"passed","time":{"start":1761135880711,"stop":1761135881943,"duration":1232}},{"uid":"e810840bde98c9d8","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/e810840bde98c9d8","status":"passed","time":{"start":1761134285540,"stop":1761134286416,"duration":876}}]},"tags":["backend"]},"source":"3b18bcae5ba43072.json","parameterValues":["'member_client'","200"]}