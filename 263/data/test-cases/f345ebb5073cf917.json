{"uid":"f345ebb5073cf917","name":"Добавление новой группы в борду через /CreateBoardGroup: проверка имени, описания и изменения количества групп","fullName":"tests.test_backend.board.test_board#test_create_board_group","historyId":"5a2ef8c4db5c6e746a7695fad89e5388","time":{"start":1752047942870,"stop":1752047942870,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f60ac7d5290>\ntemp_space = '686e2144dc7db2861c816ae1'\n\n    @pytest.fixture(scope='session')\n    def temp_project(owner_client, temp_space):\n        \"\"\"Создаёт проект, который используется во всех тестах модуля.\"\"\"\n        name = generate_project_name()\n        slug = generate_slug()\n        common_kwargs = {'color': 'blue', 'icon': 'Dot', 'description': 'temporary project', 'space_id': temp_space}\n        response = owner_client.post(**create_project_endpoint(name=name, slug=slug, **common_kwargs))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:124: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1752047939816,"stop":1752047940592,"duration":776},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1752047939816,"stop":1752047939816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1752047940592,"stop":1752047941242,"duration":650},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_project","time":{"start":1752047941242,"stop":1752047941963,"duration":721},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 124, in temp_project\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[{"name":"temp_space::0","time":{"start":1752048136220,"stop":1752048136701,"duration":481},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.board"},{"name":"suite","value":"test_board"},{"name":"host","value":"pkrvmfkh1xnbeme"},{"name":"thread","value":"2510-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.board.test_board"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":1,"skipped":0,"passed":115,"unknown":0,"total":118},"items":[{"uid":"b23bc1a6d8cdf4e6","reportUrl":"https://vaizcom.github.io/autotests/262//#testresult/b23bc1a6d8cdf4e6","status":"passed","time":{"start":1752046626920,"stop":1752046627854,"duration":934}},{"uid":"17fd24deb6c28c11","reportUrl":"https://vaizcom.github.io/autotests/261//#testresult/17fd24deb6c28c11","status":"passed","time":{"start":1752044618451,"stop":1752044619267,"duration":816}},{"uid":"6cda126235fe4cc2","reportUrl":"https://vaizcom.github.io/autotests/260//#testresult/6cda126235fe4cc2","status":"passed","time":{"start":1751982640112,"stop":1751982640729,"duration":617}},{"uid":"94bfdd8313afc3ea","reportUrl":"https://vaizcom.github.io/autotests/259//#testresult/94bfdd8313afc3ea","status":"passed","time":{"start":1751976097765,"stop":1751976098562,"duration":797}},{"uid":"59a3d60d1ee684d","reportUrl":"https://vaizcom.github.io/autotests/258//#testresult/59a3d60d1ee684d","status":"passed","time":{"start":1751975063135,"stop":1751975063778,"duration":643}},{"uid":"2cc7b6eb44ebe913","reportUrl":"https://vaizcom.github.io/autotests/257//#testresult/2cc7b6eb44ebe913","status":"passed","time":{"start":1751973353752,"stop":1751973354373,"duration":621}},{"uid":"71cab508c54675d3","reportUrl":"https://vaizcom.github.io/autotests/256//#testresult/71cab508c54675d3","status":"passed","time":{"start":1751971629380,"stop":1751971630007,"duration":627}},{"uid":"6aef9d45e6831a95","reportUrl":"https://vaizcom.github.io/autotests/255//#testresult/6aef9d45e6831a95","status":"passed","time":{"start":1751965022781,"stop":1751965023917,"duration":1136}},{"uid":"2c728c18d4dd45ad","reportUrl":"https://vaizcom.github.io/autotests/254//#testresult/2c728c18d4dd45ad","status":"passed","time":{"start":1751959118544,"stop":1751959119285,"duration":741}},{"uid":"914b91330aa48161","reportUrl":"https://vaizcom.github.io/autotests/253//#testresult/914b91330aa48161","status":"passed","time":{"start":1751897234647,"stop":1751897235481,"duration":834}},{"uid":"e01d7a9093246547","reportUrl":"https://vaizcom.github.io/autotests/252//#testresult/e01d7a9093246547","status":"passed","time":{"start":1751893929103,"stop":1751893929945,"duration":842}},{"uid":"f71abef88c21ffe3","reportUrl":"https://vaizcom.github.io/autotests/251//#testresult/f71abef88c21ffe3","status":"passed","time":{"start":1751889625869,"stop":1751889626849,"duration":980}},{"uid":"1a252453d1406f68","reportUrl":"https://vaizcom.github.io/autotests/250//#testresult/1a252453d1406f68","status":"passed","time":{"start":1751888313513,"stop":1751888314248,"duration":735}},{"uid":"5c10794d72bdcbb0","reportUrl":"https://vaizcom.github.io/autotests/249//#testresult/5c10794d72bdcbb0","status":"passed","time":{"start":1751887707682,"stop":1751887708473,"duration":791}},{"uid":"51b02b385255cc4e","reportUrl":"https://vaizcom.github.io/autotests/248//#testresult/51b02b385255cc4e","status":"passed","time":{"start":1751884487086,"stop":1751884487796,"duration":710}},{"uid":"48c655d455c90c4","reportUrl":"https://vaizcom.github.io/autotests/247//#testresult/48c655d455c90c4","status":"passed","time":{"start":1751882742449,"stop":1751882743476,"duration":1027}},{"uid":"96f1de01ed9d976c","reportUrl":"https://vaizcom.github.io/autotests/246//#testresult/96f1de01ed9d976c","status":"passed","time":{"start":1751534985831,"stop":1751534986514,"duration":683}},{"uid":"bbfc49546705b586","reportUrl":"https://vaizcom.github.io/autotests/245//#testresult/bbfc49546705b586","status":"passed","time":{"start":1751525383688,"stop":1751525384487,"duration":799}},{"uid":"f5b36812dfa96aa6","reportUrl":"https://vaizcom.github.io/autotests/244//#testresult/f5b36812dfa96aa6","status":"passed","time":{"start":1751463807830,"stop":1751463808482,"duration":652}},{"uid":"45ad090cbf37eb5d","reportUrl":"https://vaizcom.github.io/autotests/243//#testresult/45ad090cbf37eb5d","status":"passed","time":{"start":1751463519032,"stop":1751463519846,"duration":814}}]},"tags":["backend"]},"source":"f345ebb5073cf917.json","parameterValues":[]}