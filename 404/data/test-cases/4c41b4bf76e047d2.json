{"uid":"4c41b4bf76e047d2","name":"test_document_kind_and_id[member]","fullName":"tests.test_backend.document.test_create_document#test_document_kind_and_id","historyId":"dd319f47e1dba0f5bb7940a0eabaf986","time":{"start":1761912188257,"stop":1761912188257,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761912080667,"stop":1761912081009,"duration":342},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_create_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_create_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"200"},{"name":"get_fixture","value":"'temp_member'"},{"name":"kind","value":"'Member'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":54},"items":[{"uid":"c4a99d40d76fa951","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/c4a99d40d76fa951","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911300199,"stop":1761911300199,"duration":0}},{"uid":"a184d08e2a2af8c1","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/a184d08e2a2af8c1","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910911880,"stop":1761910911880,"duration":0}},{"uid":"e124783e2300ee","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/e124783e2300ee","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910613739,"stop":1761910613739,"duration":0}},{"uid":"fa1738bf440456e4","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/fa1738bf440456e4","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910005601,"stop":1761910005601,"duration":0}},{"uid":"58a1db724dbd482f","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/58a1db724dbd482f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900037090,"stop":1761900037090,"duration":0}},{"uid":"8ccbebcd264d120e","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/8ccbebcd264d120e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835057703,"stop":1761835057703,"duration":0}},{"uid":"b230123e84f9104a","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/b230123e84f9104a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834642197,"stop":1761834642197,"duration":0}},{"uid":"e969cd2add30fa0","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/e969cd2add30fa0","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833478307,"stop":1761833478307,"duration":0}},{"uid":"bf976f5a96c3ea39","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/bf976f5a96c3ea39","status":"passed","time":{"start":1761821718647,"stop":1761821718865,"duration":218}},{"uid":"b187fb92d23c324f","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/b187fb92d23c324f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818766573,"stop":1761818766573,"duration":0}},{"uid":"dbcdd697e110e8e6","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/dbcdd697e110e8e6","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748630357,"stop":1761748630357,"duration":0}},{"uid":"5264b846563c1220","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/5264b846563c1220","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747905901,"stop":1761747905901,"duration":0}},{"uid":"6c82995a08691386","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/6c82995a08691386","status":"passed","time":{"start":1761746884166,"stop":1761746884491,"duration":325}},{"uid":"6a320300eb3aedb3","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/6a320300eb3aedb3","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745738378,"stop":1761745738378,"duration":0}},{"uid":"660ebf518fa478bb","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/660ebf518fa478bb","status":"passed","time":{"start":1761576718020,"stop":1761576718394,"duration":374}},{"uid":"b032c4ef56d08376","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/b032c4ef56d08376","status":"passed","time":{"start":1761557367695,"stop":1761557368371,"duration":676}},{"uid":"5ccdadd86239c59a","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/5ccdadd86239c59a","status":"passed","time":{"start":1761308592709,"stop":1761308592935,"duration":226}},{"uid":"3460a655a2191d23","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/3460a655a2191d23","status":"passed","time":{"start":1761306753755,"stop":1761306754019,"duration":264}},{"uid":"a75fd32829aa5a3c","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/a75fd32829aa5a3c","status":"passed","time":{"start":1761137046842,"stop":1761137047083,"duration":241}},{"uid":"e380d61bcd77b125","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/e380d61bcd77b125","status":"passed","time":{"start":1761135724669,"stop":1761135724964,"duration":295}}]},"tags":["backend"]},"source":"4c41b4bf76e047d2.json","parameterValues":["200","'temp_member'","'Member'"]}