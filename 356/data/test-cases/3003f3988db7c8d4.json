{"uid":"3003f3988db7c8d4","name":"Проверка доступа owner_client к документам пространства, проекта и персональному документу","fullName":"tests.test_backend.document.access_doc.test_matrix_access_docs#test_owner_client_document_access","historyId":"2f7f1f3840e05e27e392e5adc272584b","time":{"start":1759837444515,"stop":1759837444690,"duration":175},"description":"\n    Проверяем, что owner_client имеет доступ к main_space_doc и main_project_doc,\n    но не имеет доступа к main_personal_doc.\n    ","descriptionHtml":"<pre><code>Проверяем, что owner_client имеет доступ к main_space_doc и main_project_doc,\nно не имеет доступа к main_personal_doc.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Доступ к MAIN_SPACE_DOC_ID должен быть разрешён\nassert 503 == 200\n +  where 503 = <Response [503]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f0d403af650>\nmain_space = '6866309d85fb8d104544a61e'\nmain_space_doc = '68a5b3f4a136528e28f58d65'\nmain_project_doc = '68a81156e503a7ab645236c1'\nmain_personal_doc = '68a5b40ba136528e28f58dba'\n\n    @allure.title('Проверка доступа owner_client к документам пространства, проекта и персональному документу')\n    def test_owner_client_document_access(owner_client, main_space, main_space_doc, main_project_doc, main_personal_doc):\n        \"\"\"\n        Проверяем, что owner_client имеет доступ к main_space_doc и main_project_doc,\n        но не имеет доступа к main_personal_doc.\n        \"\"\"\n        with allure.step('Проверка доступа owner_client к основному документу MAIN_SPACE_DOC_ID'):\n            response_space = owner_client.post(**get_document_endpoint(document_id=main_space_doc, space_id=main_space))\n>           assert response_space.status_code == 200, 'Доступ к MAIN_SPACE_DOC_ID должен быть разрешён'\nE           AssertionError: Доступ к MAIN_SPACE_DOC_ID должен быть разрешён\nE           assert 503 == 200\nE            +  where 503 = <Response [503]>.status_code\n\ntests/test_backend/document/access_doc/test_matrix_access_docs.py:86: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1759837145756,"stop":1759837146498,"duration":742},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1759837146498,"stop":1759837146894,"duration":396},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1759837147179,"stop":1759837147495,"duration":316},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space_doc","time":{"start":1759837443413,"stop":1759837443413,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_project_doc","time":{"start":1759837443413,"stop":1759837443413,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_personal_doc","time":{"start":1759837443413,"stop":1759837443413,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Проверяем, что owner_client имеет доступ к main_space_doc и main_project_doc,\n    но не имеет доступа к main_personal_doc.\n    ","status":"failed","statusMessage":"AssertionError: Доступ к MAIN_SPACE_DOC_ID должен быть разрешён\nassert 503 == 200\n +  where 503 = <Response [503]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f0d403af650>\nmain_space = '6866309d85fb8d104544a61e'\nmain_space_doc = '68a5b3f4a136528e28f58d65'\nmain_project_doc = '68a81156e503a7ab645236c1'\nmain_personal_doc = '68a5b40ba136528e28f58dba'\n\n    @allure.title('Проверка доступа owner_client к документам пространства, проекта и персональному документу')\n    def test_owner_client_document_access(owner_client, main_space, main_space_doc, main_project_doc, main_personal_doc):\n        \"\"\"\n        Проверяем, что owner_client имеет доступ к main_space_doc и main_project_doc,\n        но не имеет доступа к main_personal_doc.\n        \"\"\"\n        with allure.step('Проверка доступа owner_client к основному документу MAIN_SPACE_DOC_ID'):\n            response_space = owner_client.post(**get_document_endpoint(document_id=main_space_doc, space_id=main_space))\n>           assert response_space.status_code == 200, 'Доступ к MAIN_SPACE_DOC_ID должен быть разрешён'\nE           AssertionError: Доступ к MAIN_SPACE_DOC_ID должен быть разрешён\nE           assert 503 == 200\nE            +  where 503 = <Response [503]>.status_code\n\ntests/test_backend/document/access_doc/test_matrix_access_docs.py:86: AssertionError","steps":[{"name":"Проверка доступа owner_client к основному документу MAIN_SPACE_DOC_ID","time":{"start":1759837444515,"stop":1759837444690,"duration":175},"status":"failed","statusMessage":"AssertionError: Доступ к MAIN_SPACE_DOC_ID должен быть разрешён\nassert 503 == 200\n +  where 503 = <Response [503]>.status_code\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/document/access_doc/test_matrix_access_docs.py\", line 86, in test_owner_client_document_access\n    assert response_space.status_code == 200, 'Доступ к MAIN_SPACE_DOC_ID должен быть разрешён'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document.access_doc"},{"name":"suite","value":"test_matrix_access_docs"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2583-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.access_doc.test_matrix_access_docs"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":4},"items":[{"uid":"8fe4b5f9167cb17b","reportUrl":"https://vaizcom.github.io/autotests/355//#testresult/8fe4b5f9167cb17b","status":"passed","time":{"start":1759836229222,"stop":1759836229887,"duration":665}},{"uid":"a2775a1fd4d5bb46","reportUrl":"https://vaizcom.github.io/autotests/354//#testresult/a2775a1fd4d5bb46","status":"passed","time":{"start":1759835606610,"stop":1759835607148,"duration":538}},{"uid":"bdb09d46b48c39e3","reportUrl":"https://vaizcom.github.io/autotests/353//#testresult/bdb09d46b48c39e3","status":"passed","time":{"start":1759834713534,"stop":1759834714262,"duration":728}}]},"tags":["backend"]},"source":"3003f3988db7c8d4.json","parameterValues":[]}