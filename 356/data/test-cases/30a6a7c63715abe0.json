{"uid":"30a6a7c63715abe0","name":"Проверка доступа к документам: пользователь без доступа (foreign_client)","fullName":"tests.test_backend.document.access_doc.test_matrix_access_docs#test_document_access_denied_for_foreign_client","historyId":"7178898f53000b718b1270e4271b6985","time":{"start":1759837443232,"stop":1759837443409,"duration":177},"description":"\n    Проверяет, что пользователь foreign_client без доступа к Space получает ошибку.\n    ","descriptionHtml":"<pre><code>Проверяет, что пользователь foreign_client без доступа к Space получает ошибку.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Ожидался статус 400, получен 502\nassert 502 == 400\n +  where 502 = <Response [502]>.status_code","statusTrace":"request = <FixtureRequest for <Function test_document_access_denied_for_foreign_client>>\nforeign_client = <tests.core.client.APIClient object at 0x7f0d4013ea50>\nmain_space = '6866309d85fb8d104544a61e'\n\n    @allure.title('Проверка доступа к документам: пользователь без доступа (foreign_client)')\n    def test_document_access_denied_for_foreign_client(request, foreign_client, main_space):\n        \"\"\"\n        Проверяет, что пользователь foreign_client без доступа к Space получает ошибку.\n        \"\"\"\n        with allure.step('Отправка запроса для получения доступа к документам'):\n            response = foreign_client.post(**get_document_endpoint(document_id=main_space, space_id=main_space))\n    \n        with allure.step(\"Проверка, что запрос отклонён (ожидается 400 и код ошибки 'NotFound')\"):\n>           assert response.status_code == 400, f'Ожидался статус 400, получен {response.status_code}'\nE           AssertionError: Ожидался статус 400, получен 502\nE           assert 502 == 400\nE            +  where 502 = <Response [502]>.status_code\n\ntests/test_backend/document/access_doc/test_matrix_access_docs.py:17: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1759837145756,"stop":1759837145756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1759837145756,"stop":1759837146498,"duration":742},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1759837146498,"stop":1759837146894,"duration":396},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"foreign_client","time":{"start":1759837152516,"stop":1759837152810,"duration":294},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Проверяет, что пользователь foreign_client без доступа к Space получает ошибку.\n    ","status":"failed","statusMessage":"AssertionError: Ожидался статус 400, получен 502\nassert 502 == 400\n +  where 502 = <Response [502]>.status_code","statusTrace":"request = <FixtureRequest for <Function test_document_access_denied_for_foreign_client>>\nforeign_client = <tests.core.client.APIClient object at 0x7f0d4013ea50>\nmain_space = '6866309d85fb8d104544a61e'\n\n    @allure.title('Проверка доступа к документам: пользователь без доступа (foreign_client)')\n    def test_document_access_denied_for_foreign_client(request, foreign_client, main_space):\n        \"\"\"\n        Проверяет, что пользователь foreign_client без доступа к Space получает ошибку.\n        \"\"\"\n        with allure.step('Отправка запроса для получения доступа к документам'):\n            response = foreign_client.post(**get_document_endpoint(document_id=main_space, space_id=main_space))\n    \n        with allure.step(\"Проверка, что запрос отклонён (ожидается 400 и код ошибки 'NotFound')\"):\n>           assert response.status_code == 400, f'Ожидался статус 400, получен {response.status_code}'\nE           AssertionError: Ожидался статус 400, получен 502\nE           assert 502 == 400\nE            +  where 502 = <Response [502]>.status_code\n\ntests/test_backend/document/access_doc/test_matrix_access_docs.py:17: AssertionError","steps":[{"name":"Отправка запроса для получения доступа к документам","time":{"start":1759837443232,"stop":1759837443409,"duration":177},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверка, что запрос отклонён (ожидается 400 и код ошибки 'NotFound')","time":{"start":1759837443409,"stop":1759837443409,"duration":0},"status":"failed","statusMessage":"AssertionError: Ожидался статус 400, получен 502\nassert 502 == 400\n +  where 502 = <Response [502]>.status_code\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/document/access_doc/test_matrix_access_docs.py\", line 17, in test_document_access_denied_for_foreign_client\n    assert response.status_code == 400, f'Ожидался статус 400, получен {response.status_code}'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document.access_doc"},{"name":"suite","value":"test_matrix_access_docs"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2583-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.access_doc.test_matrix_access_docs"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":4},"items":[{"uid":"789d3b6db3bc3336","reportUrl":"https://vaizcom.github.io/autotests/355//#testresult/789d3b6db3bc3336","status":"passed","time":{"start":1759836226636,"stop":1759836227035,"duration":399}},{"uid":"a61a896fb0693f70","reportUrl":"https://vaizcom.github.io/autotests/354//#testresult/a61a896fb0693f70","status":"passed","time":{"start":1759835604793,"stop":1759835605152,"duration":359}},{"uid":"42d3c9ff0e4ca2de","reportUrl":"https://vaizcom.github.io/autotests/353//#testresult/42d3c9ff0e4ca2de","status":"passed","time":{"start":1759834711564,"stop":1759834711761,"duration":197}}]},"tags":["backend"]},"source":"30a6a7c63715abe0.json","parameterValues":[]}