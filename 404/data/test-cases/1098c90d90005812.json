{"uid":"1098c90d90005812","name":"test_get_documents_mismatched_kind_and_id[space-wrong-id]","fullName":"tests.test_backend.document.test_get_documents#test_get_documents_mismatched_kind_and_id","historyId":"c6ebe153916ef8adca939bf2b8259299","time":{"start":1761912191460,"stop":1761912191460,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761912080667,"stop":1761912081009,"duration":342},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_documents"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_documents"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case_title","value":"'kind=Space с kindId от Member'"},{"name":"kind","value":"'Space'"},{"name":"wrong_fixture","value":"'temp_member'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":54},"items":[{"uid":"2f85c791611b2e09","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/2f85c791611b2e09","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911304445,"stop":1761911304445,"duration":0}},{"uid":"aabaacea14c5a4ef","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/aabaacea14c5a4ef","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910915112,"stop":1761910915112,"duration":0}},{"uid":"c1afd200273fd344","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/c1afd200273fd344","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910616256,"stop":1761910616256,"duration":0}},{"uid":"56f4d23f9ca50ff0","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/56f4d23f9ca50ff0","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910009407,"stop":1761910009407,"duration":0}},{"uid":"9dfe6b5c71c75c62","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/9dfe6b5c71c75c62","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900040499,"stop":1761900040499,"duration":0}},{"uid":"62cf894e26be0875","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/62cf894e26be0875","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835060653,"stop":1761835060653,"duration":0}},{"uid":"cf734923711d3a22","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/cf734923711d3a22","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834645799,"stop":1761834645799,"duration":0}},{"uid":"870511219a653d4e","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/870511219a653d4e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833482165,"stop":1761833482165,"duration":0}},{"uid":"74fc563dfc5f2e4a","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/74fc563dfc5f2e4a","status":"passed","time":{"start":1761821763481,"stop":1761821763655,"duration":174}},{"uid":"6b7feda390424dbc","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/6b7feda390424dbc","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818770311,"stop":1761818770311,"duration":0}},{"uid":"cbf1997cc608d88b","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/cbf1997cc608d88b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748633584,"stop":1761748633584,"duration":0}},{"uid":"f880605e00646063","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/f880605e00646063","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747909893,"stop":1761747909893,"duration":0}},{"uid":"cbdac0087b8daed2","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/cbdac0087b8daed2","status":"passed","time":{"start":1761746953359,"stop":1761746953667,"duration":308}},{"uid":"f540fb0733781205","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/f540fb0733781205","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745741729,"stop":1761745741729,"duration":0}},{"uid":"edab41f9dcef7927","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/edab41f9dcef7927","status":"passed","time":{"start":1761576782987,"stop":1761576783334,"duration":347}},{"uid":"2f9a74dff450bba9","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/2f9a74dff450bba9","status":"passed","time":{"start":1761557417213,"stop":1761557417415,"duration":202}},{"uid":"f3eb84f740274921","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/f3eb84f740274921","status":"passed","time":{"start":1761308637018,"stop":1761308637201,"duration":183}},{"uid":"e0c65cc15f3d65f1","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/e0c65cc15f3d65f1","status":"passed","time":{"start":1761306801430,"stop":1761306801636,"duration":206}},{"uid":"11ab98751723864c","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/11ab98751723864c","status":"passed","time":{"start":1761137097026,"stop":1761137097236,"duration":210}},{"uid":"2ab545d0b78599ba","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/2ab545d0b78599ba","status":"passed","time":{"start":1761135783986,"stop":1761135784231,"duration":245}}]},"tags":["backend"]},"source":"1098c90d90005812.json","parameterValues":["'kind=Space с kindId от Member'","'Space'","'temp_member'"]}