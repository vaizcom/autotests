{"uid":"d3a57e2028ceb769","name":"Получение списка борд: проверка созданных борд и их обязательных полей(name, projectId, createdAt)","fullName":"tests.test_backend.board.test_get_boards#test_get_boards_required_fields","historyId":"bdedc99b835d348f5e5877b5c0a8b605","time":{"start":1761910801940,"stop":1761910801940,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f1c6962ef90>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761910792963,"stop":1761910793391,"duration":428},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761910792963,"stop":1761910792963,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761910801404,"stop":1761910801539,"duration":135},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.board"},{"name":"suite","value":"test_get_boards"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2545-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.board.test_get_boards"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":52},"items":[{"uid":"82d2ec77ac95b6ba","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/82d2ec77ac95b6ba","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910504281,"stop":1761910504281,"duration":0}},{"uid":"29363f41ac7a045a","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/29363f41ac7a045a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761909867318,"stop":1761909867318,"duration":0}},{"uid":"2a6971d194dae8cd","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/2a6971d194dae8cd","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761899901240,"stop":1761899901240,"duration":0}},{"uid":"99db9dc6ce7dd79","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/99db9dc6ce7dd79","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834950225,"stop":1761834950225,"duration":0}},{"uid":"f8f8464624f76f03","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/f8f8464624f76f03","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834497993,"stop":1761834497993,"duration":0}},{"uid":"f39d4f500a2c1012","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/f39d4f500a2c1012","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833327617,"stop":1761833327617,"duration":0}},{"uid":"2b499a4ddbcc69e6","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/2b499a4ddbcc69e6","status":"passed","time":{"start":1761821507452,"stop":1761821508335,"duration":883}},{"uid":"50d8fd77c2d1f397","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/50d8fd77c2d1f397","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818627903,"stop":1761818627903,"duration":0}},{"uid":"6695f92ce83a8784","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/6695f92ce83a8784","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748512490,"stop":1761748512490,"duration":0}},{"uid":"b01777b7172dd793","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/b01777b7172dd793","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747772072,"stop":1761747772072,"duration":0}},{"uid":"d1544bd97c349f91","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/d1544bd97c349f91","status":"passed","time":{"start":1761746625027,"stop":1761746626396,"duration":1369}},{"uid":"f8e91a58b2b5cc6c","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/f8e91a58b2b5cc6c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745637361,"stop":1761745637361,"duration":0}},{"uid":"2bbcdd99e880fc7e","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/2bbcdd99e880fc7e","status":"passed","time":{"start":1761576499696,"stop":1761576500653,"duration":957}},{"uid":"78eaf0e298d3271f","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/78eaf0e298d3271f","status":"passed","time":{"start":1761557155778,"stop":1761557156710,"duration":932}},{"uid":"fafc46e3f855bd1b","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/fafc46e3f855bd1b","status":"passed","time":{"start":1761308379503,"stop":1761308381664,"duration":2161}},{"uid":"c4c42aab91bd6303","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/c4c42aab91bd6303","status":"passed","time":{"start":1761306528296,"stop":1761306529272,"duration":976}},{"uid":"2bfd190b10775c3e","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/2bfd190b10775c3e","status":"passed","time":{"start":1761136822376,"stop":1761136823843,"duration":1467}},{"uid":"c15fafb3a8ca5b83","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/c15fafb3a8ca5b83","status":"passed","time":{"start":1761135475800,"stop":1761135476901,"duration":1101}},{"uid":"3fb052802ca8c1d6","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/3fb052802ca8c1d6","status":"passed","time":{"start":1761133939895,"stop":1761133940998,"duration":1103}},{"uid":"b0012e53df74dfeb","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/b0012e53df74dfeb","status":"passed","time":{"start":1761128240824,"stop":1761128241930,"duration":1106}}]},"tags":["backend"]},"source":"d3a57e2028ceb769.json","parameterValues":[]}