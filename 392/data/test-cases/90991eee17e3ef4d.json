{"uid":"90991eee17e3ef4d","name":"Если поле milestone у сабтаска пустое, оно также не наследует milestone от родителя.","fullName":"tests.test_backend.task_service.create_task.test_subtask_milestones_from_payload#test_subtask_milestone_without_own_milestone","historyId":"adef7404e8067ee55f492aebcab339d0","time":{"start":1761745755429,"stop":1761745755552,"duration":123},"description":"\n    Создание сабтаска без milestone в payload.\n    Сабтаск не наследует milestone A автоматически у родителя.\n    Поле milestone у сабтаска пустое.\n    После теста задачи удаляются.\n    ","descriptionHtml":"<pre><code>Создание сабтаска без milestone в payload.\nСабтаск не наследует milestone A автоматически у родителя.\nПоле milestone у сабтаска пустое.\nПосле теста задачи удаляются.\n</code></pre>\n","status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","statusTrace":"create_task_in_main = <function create_task_in_main.<locals>._create_task at 0x7fd401b3ff60>\nowner_client = <tests.core.client.APIClient object at 0x7fd40394d290>\nmain_space = '6866309d85fb8d104544a61e', main_board = '6866731185fb8d104544e826'\n\n    @allure.parent_suite(\"create_task\")\n    @allure.title(\"Если поле milestone у сабтаска пустое, оно также не наследует milestone от родителя.\")\n    def test_subtask_milestone_without_own_milestone(\n        create_task_in_main,\n        owner_client,\n        main_space,\n        main_board,\n    ):\n        \"\"\"\n        Создание сабтаска без milestone в payload.\n        Сабтаск не наследует milestone A автоматически у родителя.\n        Поле milestone у сабтаска пустое.\n        После теста задачи удаляются.\n        \"\"\"\n        with allure.step(\"Получаем ID milestone для родителя\"):\n>           parent_ms_id = get_parent_ms_1(owner_client, main_space, main_board)\n\ntests/test_backend/task_service/create_task/test_subtask_milestones_from_payload.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_backend/task_service/create_task/utils.py:238: in get_parent_ms_1\n    return get_named_milestone_id(client, space_id, board_id, \"parent_ms_1\")\ntests/test_backend/task_service/create_task/utils.py:229: in get_named_milestone_id\n    resp.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/requests/models.py:1024: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761745626380,"stop":1761745626380,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761745626380,"stop":1761745626380,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761745626380,"stop":1761745626380,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761745626380,"stop":1761745626380,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761745626380,"stop":1761745626628,"duration":248},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1761745631754,"stop":1761745632203,"duration":449},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1761745632203,"stop":1761745632603,"duration":400},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_project","time":{"start":1761745632604,"stop":1761745632791,"duration":187},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_board","time":{"start":1761745635347,"stop":1761745635548,"duration":201},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_task_in_main","time":{"start":1761745755429,"stop":1761745755429,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Создание сабтаска без milestone в payload.\n    Сабтаск не наследует milestone A автоматически у родителя.\n    Поле milestone у сабтаска пустое.\n    После теста задачи удаляются.\n    ","status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","statusTrace":"create_task_in_main = <function create_task_in_main.<locals>._create_task at 0x7fd401b3ff60>\nowner_client = <tests.core.client.APIClient object at 0x7fd40394d290>\nmain_space = '6866309d85fb8d104544a61e', main_board = '6866731185fb8d104544e826'\n\n    @allure.parent_suite(\"create_task\")\n    @allure.title(\"Если поле milestone у сабтаска пустое, оно также не наследует milestone от родителя.\")\n    def test_subtask_milestone_without_own_milestone(\n        create_task_in_main,\n        owner_client,\n        main_space,\n        main_board,\n    ):\n        \"\"\"\n        Создание сабтаска без milestone в payload.\n        Сабтаск не наследует milestone A автоматически у родителя.\n        Поле milestone у сабтаска пустое.\n        После теста задачи удаляются.\n        \"\"\"\n        with allure.step(\"Получаем ID milestone для родителя\"):\n>           parent_ms_id = get_parent_ms_1(owner_client, main_space, main_board)\n\ntests/test_backend/task_service/create_task/test_subtask_milestones_from_payload.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_backend/task_service/create_task/utils.py:238: in get_parent_ms_1\n    return get_named_milestone_id(client, space_id, board_id, \"parent_ms_1\")\ntests/test_backend/task_service/create_task/utils.py:229: in get_named_milestone_id\n    resp.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/requests/models.py:1024: HTTPError","steps":[{"name":"Получаем ID milestone для родителя","time":{"start":1761745755429,"stop":1761745755552,"duration":123},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/task_service/create_task/test_subtask_milestones_from_payload.py\", line 67, in test_subtask_milestone_without_own_milestone\n    parent_ms_id = get_parent_ms_1(owner_client, main_space, main_board)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/test_backend/task_service/create_task/utils.py\", line 238, in get_parent_ms_1\n    return get_named_milestone_id(client, space_id, board_id, \"parent_ms_1\")\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/test_backend/task_service/create_task/utils.py\", line 229, in get_named_milestone_id\n    resp.raise_for_status()\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/requests/models.py\", line 1024, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"create_task"},{"name":"tag","value":"backend"},{"name":"suite","value":"test_subtask_milestones_from_payload"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2534-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.task_service.create_task.test_subtask_milestones_from_payload"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":7,"unknown":0,"total":8},"items":[{"uid":"e01a01816676439f","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/e01a01816676439f","status":"passed","time":{"start":1761576950092,"stop":1761576953151,"duration":3059}},{"uid":"199387e2fa4b2a23","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/199387e2fa4b2a23","status":"passed","time":{"start":1761557531970,"stop":1761557534695,"duration":2725}},{"uid":"79d89b1f76d768ae","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/79d89b1f76d768ae","status":"passed","time":{"start":1761308767343,"stop":1761308770271,"duration":2928}},{"uid":"c32a17951881018a","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/c32a17951881018a","status":"passed","time":{"start":1761306935406,"stop":1761306939066,"duration":3660}},{"uid":"a4d8ed5270847534","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/a4d8ed5270847534","status":"passed","time":{"start":1761137221374,"stop":1761137224702,"duration":3328}},{"uid":"8d5cd1006aa881f7","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/8d5cd1006aa881f7","status":"passed","time":{"start":1761135957237,"stop":1761135960942,"duration":3705}},{"uid":"b6d687872c6bb693","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/b6d687872c6bb693","status":"passed","time":{"start":1761134348828,"stop":1761134351927,"duration":3099}}]},"tags":["backend"]},"source":"90991eee17e3ef4d.json","parameterValues":[]}