{"uid":"9f7504c2a850cb3d","name":"test_get_siblings_foreign_space_access_denied[space_doc]","fullName":"tests.test_backend.document.access_doc.test_get_siblings_doc_access#test_get_siblings_foreign_space_access_denied","historyId":"e33b4ec3134c271f76dda43d2a4c53e3","time":{"start":1761747902817,"stop":1761747902817,"duration":0},"description":"\n    Проверяет ограничения доступа при попытке получения siblings документов через чужое пространство.\n    Тест удостоверяется, что попытка получить siblings документов через пространство, где у пользователя\n    нет прав, завершается ошибкой доступа.\n\n    Тест обрабатывает три типа документов: Project, Space и Member. Создается последовательность\n    из трех документов указанного типа в основном пространстве, после чего выполняется попытка\n    получить siblings среднего документа через чужое пространство и проверяется, что доступ запрещен.\n    ","descriptionHtml":"<pre><code>Проверяет ограничения доступа при попытке получения siblings документов через чужое пространство.\nТест удостоверяется, что попытка получить siblings документов через пространство, где у пользователя\nнет прав, завершается ошибкой доступа.\n\nТест обрабатывает три типа документов: Project, Space и Member. Создается последовательность\nиз трех документов указанного типа в основном пространстве, после чего выполняется попытка\nполучить siblings среднего документа через чужое пространство и проверяется, что доступ запрещен.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7ff3c88cb950>\n\n    @pytest.fixture(scope='module')\n    def space_id_module(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:192: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1761747760277,"stop":1761747760277,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761747760277,"stop":1761747760277,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761747760277,"stop":1761747760277,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761747760278,"stop":1761747760278,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761747760278,"stop":1761747760906,"duration":628},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1761747765139,"stop":1761747765458,"duration":319},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1761747765458,"stop":1761747765749,"duration":291},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"space_id_module","time":{"start":1761747902609,"stop":1761747902809,"duration":200},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 192, in space_id_module\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document.access_doc"},{"name":"suite","value":"test_get_siblings_doc_access"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2581-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.access_doc.test_get_siblings_doc_access"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"container_fixture","value":"'main_space'"},{"name":"kind","value":"'Space'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":39,"unknown":0,"total":42},"items":[{"uid":"1966ea148f1294a4","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/1966ea148f1294a4","status":"passed","time":{"start":1761746863120,"stop":1761746865360,"duration":2240}},{"uid":"3385b6e427fecdde","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/3385b6e427fecdde","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745735689,"stop":1761745735689,"duration":0}},{"uid":"c2999492a5469d92","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/c2999492a5469d92","status":"passed","time":{"start":1761576704028,"stop":1761576705879,"duration":1851}},{"uid":"8b50dba7e14a980a","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/8b50dba7e14a980a","status":"passed","time":{"start":1761557355941,"stop":1761557357573,"duration":1632}},{"uid":"2e013b2107f783f","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/2e013b2107f783f","status":"passed","time":{"start":1761308579483,"stop":1761308581326,"duration":1843}},{"uid":"a1a0dd4393b105b7","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/a1a0dd4393b105b7","status":"passed","time":{"start":1761306740963,"stop":1761306742807,"duration":1844}},{"uid":"fba7470a5eaf43cc","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/fba7470a5eaf43cc","status":"passed","time":{"start":1761137034013,"stop":1761137035729,"duration":1716}},{"uid":"d98f2c69df924e35","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/d98f2c69df924e35","status":"passed","time":{"start":1761135710460,"stop":1761135712411,"duration":1951}},{"uid":"fbef4c0ca4292704","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/fbef4c0ca4292704","status":"passed","time":{"start":1761134139209,"stop":1761134140781,"duration":1572}},{"uid":"a3e3f6d98647139d","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/a3e3f6d98647139d","status":"passed","time":{"start":1761128497965,"stop":1761128500012,"duration":2047}},{"uid":"343eeb1b22512509","reportUrl":"https://vaizcom.github.io/autotests/383//#testresult/343eeb1b22512509","status":"passed","time":{"start":1761124609037,"stop":1761124611156,"duration":2119}},{"uid":"27489e72b9a23ca4","reportUrl":"https://vaizcom.github.io/autotests/382//#testresult/27489e72b9a23ca4","status":"passed","time":{"start":1761119422030,"stop":1761119424660,"duration":2630}},{"uid":"baeeae23c51d2159","reportUrl":"https://vaizcom.github.io/autotests/381//#testresult/baeeae23c51d2159","status":"passed","time":{"start":1761053445555,"stop":1761053447082,"duration":1527}},{"uid":"1488d3e009918cdb","reportUrl":"https://vaizcom.github.io/autotests/380//#testresult/1488d3e009918cdb","status":"passed","time":{"start":1761047347209,"stop":1761047349454,"duration":2245}},{"uid":"9dda754670956634","reportUrl":"https://vaizcom.github.io/autotests/379//#testresult/9dda754670956634","status":"passed","time":{"start":1760614768008,"stop":1760614769886,"duration":1878}},{"uid":"e7bb4b3146229fc0","reportUrl":"https://vaizcom.github.io/autotests/378//#testresult/e7bb4b3146229fc0","status":"passed","time":{"start":1760599574280,"stop":1760599576955,"duration":2675}},{"uid":"69c78536e1a23383","reportUrl":"https://vaizcom.github.io/autotests/377//#testresult/69c78536e1a23383","status":"passed","time":{"start":1760535586418,"stop":1760535587989,"duration":1571}},{"uid":"285121eb903ec491","reportUrl":"https://vaizcom.github.io/autotests/376//#testresult/285121eb903ec491","status":"passed","time":{"start":1760534087285,"stop":1760534089342,"duration":2057}},{"uid":"b160a3dfe97cdc9d","reportUrl":"https://vaizcom.github.io/autotests/375//#testresult/b160a3dfe97cdc9d","status":"passed","time":{"start":1760532624675,"stop":1760532626371,"duration":1696}},{"uid":"344778e5c36dbab0","reportUrl":"https://vaizcom.github.io/autotests/374//#testresult/344778e5c36dbab0","status":"passed","time":{"start":1760529438518,"stop":1760529440199,"duration":1681}}]},"tags":["backend"]},"source":"9f7504c2a850cb3d.json","parameterValues":["'main_space'","'Space'"]}