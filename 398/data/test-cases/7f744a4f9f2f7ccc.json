{"uid":"7f744a4f9f2f7ccc","name":"test_documents_access_denied_for_foreign_user[foreign project]","fullName":"tests.test_backend.document.access_doc.test_doc_access_for_foreign#test_documents_access_denied_for_foreign_user","historyId":"d816618d511f2edf16b8ba9168562c33","time":{"start":1761834960915,"stop":1761834960915,"duration":0},"description":"\n    Проверяет запрет доступа к документам для стороннего пользователя при попытке\n    получить документы, связанные с определенным типом сущности (например, 'Project',\n    'Space' или 'Member'). Тест проверяет, что сторонний клиент получает статус 403\n    и код ошибки 'AccessDenied' в ответе.\n    ","descriptionHtml":"<pre><code>Проверяет запрет доступа к документам для стороннего пользователя при попытке\nполучить документы, связанные с определенным типом сущности (например, 'Project',\n'Space' или 'Member'). Тест проверяет, что сторонний клиент получает статус 403\nи код ошибки 'AccessDenied' в ответе.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f0bd86a1810>\n\n    @pytest.fixture(scope='module')\n    def space_id_module(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:192: AssertionError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761834940330,"stop":1761834940330,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761834940330,"stop":1761834940330,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761834940330,"stop":1761834940330,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761834940330,"stop":1761834940331,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761834940331,"stop":1761834940891,"duration":560},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"foreign_client","time":{"start":1761834942993,"stop":1761834943414,"duration":421},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"space_id_module","time":{"start":1761834960915,"stop":1761834961042,"duration":127},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 192, in space_id_module\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document.access_doc"},{"name":"suite","value":"test_doc_access_for_foreign"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2554-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.access_doc.test_doc_access_for_foreign"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"fixture_name","value":"'temp_project'"},{"name":"kind","value":"'Project'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":48},"items":[{"uid":"2df97548f8a1a447","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/2df97548f8a1a447","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834513949,"stop":1761834513949,"duration":0}},{"uid":"d112ed387b539656","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/d112ed387b539656","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833343894,"stop":1761833343894,"duration":0}},{"uid":"6a04724b84370914","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/6a04724b84370914","status":"passed","time":{"start":1761821523853,"stop":1761821524192,"duration":339}},{"uid":"9462fdd297b9c309","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/9462fdd297b9c309","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818649420,"stop":1761818649420,"duration":0}},{"uid":"1bfcfe5324895a95","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/1bfcfe5324895a95","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748524203,"stop":1761748524203,"duration":0}},{"uid":"d1d61584c78785ce","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/d1d61584c78785ce","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747785458,"stop":1761747785458,"duration":0}},{"uid":"8f50dbbef3fe0f44","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/8f50dbbef3fe0f44","status":"passed","time":{"start":1761746645121,"stop":1761746645371,"duration":250}},{"uid":"bcda07ea59f7b5e3","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/bcda07ea59f7b5e3","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745647356,"stop":1761745647356,"duration":0}},{"uid":"6e5ab1491bdae6a2","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/6e5ab1491bdae6a2","status":"passed","time":{"start":1761576516583,"stop":1761576516846,"duration":263}},{"uid":"215c09518144a61d","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/215c09518144a61d","status":"passed","time":{"start":1761557172752,"stop":1761557173107,"duration":355}},{"uid":"d07f6c2e3aba19b","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/d07f6c2e3aba19b","status":"passed","time":{"start":1761308397535,"stop":1761308397922,"duration":387}},{"uid":"a768262ef24777b","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/a768262ef24777b","status":"passed","time":{"start":1761306545250,"stop":1761306545618,"duration":368}},{"uid":"208e5c29d78d45c8","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/208e5c29d78d45c8","status":"passed","time":{"start":1761136839564,"stop":1761136839858,"duration":294}},{"uid":"4dd4ee29bc78047","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/4dd4ee29bc78047","status":"passed","time":{"start":1761135495694,"stop":1761135496164,"duration":470}},{"uid":"c379c4f141443178","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/c379c4f141443178","status":"passed","time":{"start":1761133956580,"stop":1761133956854,"duration":274}},{"uid":"61338e0a622df0b4","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/61338e0a622df0b4","status":"passed","time":{"start":1761128261522,"stop":1761128261877,"duration":355}},{"uid":"c1b7ff0f7681c8fa","reportUrl":"https://vaizcom.github.io/autotests/383//#testresult/c1b7ff0f7681c8fa","status":"passed","time":{"start":1761124367933,"stop":1761124368270,"duration":337}},{"uid":"70dae70889dc4ea1","reportUrl":"https://vaizcom.github.io/autotests/382//#testresult/70dae70889dc4ea1","status":"passed","time":{"start":1761119214154,"stop":1761119214486,"duration":332}},{"uid":"9fabc9ad79136ca7","reportUrl":"https://vaizcom.github.io/autotests/381//#testresult/9fabc9ad79136ca7","status":"passed","time":{"start":1761053255908,"stop":1761053256254,"duration":346}},{"uid":"7d5542ee43673d4a","reportUrl":"https://vaizcom.github.io/autotests/380//#testresult/7d5542ee43673d4a","status":"passed","time":{"start":1761047144342,"stop":1761047144723,"duration":381}}]},"tags":["backend"]},"source":"7f744a4f9f2f7ccc.json","parameterValues":["'temp_project'","'Project'"]}