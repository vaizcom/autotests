{"uid":"82adec8070983a0e","name":"test_edit_document_title_length[max_allowed-member]","fullName":"tests.test_backend.document.test_edit_document#test_edit_document_title_length","historyId":"1ef4bb9390aa1c781a7c641120bd0b53","time":{"start":1761911303084,"stop":1761911303084,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fbc912cb790>\n\n    @pytest.fixture(scope='function')\n    def space_id_function(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:228: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761911162887,"stop":1761911162887,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761911162888,"stop":1761911163517,"duration":629},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761911162888,"stop":1761911162888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"space_id_function","time":{"start":1761911303084,"stop":1761911303267,"duration":183},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 228, in space_id_function\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_edit_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_edit_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status","value":"200"},{"name":"kind","value":"'Member'"},{"name":"kind_id_fixture","value":"'member_id_function'"},{"name":"length","value":"2048"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":53},"items":[{"uid":"ea227c3beaf717ba","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/ea227c3beaf717ba","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910913478,"stop":1761910913478,"duration":0}},{"uid":"882021a4b9c0b82d","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/882021a4b9c0b82d","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910615192,"stop":1761910615192,"duration":0}},{"uid":"45e3c705cd2d9f7f","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/45e3c705cd2d9f7f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910008044,"stop":1761910008044,"duration":0}},{"uid":"9861f9d7cb4ed45a","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/9861f9d7cb4ed45a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900039175,"stop":1761900039175,"duration":0}},{"uid":"a21fffb6c2fe0ac2","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/a21fffb6c2fe0ac2","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835059606,"stop":1761835059606,"duration":0}},{"uid":"1a08972ef02f355b","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/1a08972ef02f355b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834644364,"stop":1761834644364,"duration":0}},{"uid":"e3ede394a5ac42b9","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/e3ede394a5ac42b9","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833480784,"stop":1761833480784,"duration":0}},{"uid":"99b72d6751e7317b","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/99b72d6751e7317b","status":"passed","time":{"start":1761821744354,"stop":1761821745172,"duration":818}},{"uid":"e43a80ebf267f567","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/e43a80ebf267f567","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818768963,"stop":1761818768963,"duration":0}},{"uid":"44e1e24391f6b625","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/44e1e24391f6b625","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748632553,"stop":1761748632553,"duration":0}},{"uid":"c4289510f3db56f0","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/c4289510f3db56f0","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747908562,"stop":1761747908562,"duration":0}},{"uid":"1b0f3f8cadb2bfe3","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/1b0f3f8cadb2bfe3","status":"passed","time":{"start":1761746920740,"stop":1761746921810,"duration":1070}},{"uid":"17390fde5918f349","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/17390fde5918f349","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745740651,"stop":1761745740651,"duration":0}},{"uid":"25d7e2b7b39cf77e","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/25d7e2b7b39cf77e","status":"passed","time":{"start":1761576754873,"stop":1761576755809,"duration":936}},{"uid":"24faeb59da867398","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/24faeb59da867398","status":"passed","time":{"start":1761557393610,"stop":1761557394464,"duration":854}},{"uid":"3dc7084395051dc","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/3dc7084395051dc","status":"passed","time":{"start":1761308616385,"stop":1761308617431,"duration":1046}},{"uid":"ded6128ccf00ba82","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/ded6128ccf00ba82","status":"passed","time":{"start":1761306779079,"stop":1761306779978,"duration":899}},{"uid":"4524d6506cc0998f","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/4524d6506cc0998f","status":"passed","time":{"start":1761137074317,"stop":1761137075153,"duration":836}},{"uid":"9978c691f9810107","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/9978c691f9810107","status":"passed","time":{"start":1761135757530,"stop":1761135758529,"duration":999}},{"uid":"81f38783dbd3981e","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/81f38783dbd3981e","status":"passed","time":{"start":1761134179617,"stop":1761134180563,"duration":946}}]},"tags":["backend"]},"source":"82adec8070983a0e.json","parameterValues":["200","'Member'","'member_id_function'","2048"]}