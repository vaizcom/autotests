{"uid":"4b7871159cc6979e","name":"Создание кастомного поля типа: Select","fullName":"tests.test_backend.board.test_create_board#test_create_custom_field_of_each_type","historyId":"955077f2de6a436335523bd079522508","time":{"start":1761921773501,"stop":1761921773501,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7fc7d133bfd0>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761921763684,"stop":1761921763684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761921763685,"stop":1761921763685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761921763685,"stop":1761921764117,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761921773063,"stop":1761921773182,"duration":119},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.14/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.board"},{"name":"suite","value":"test_create_board"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2549-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.board.test_create_board"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"field_type","value":"'Select'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":55},"items":[{"uid":"3d6d402f6397428c","reportUrl":"https://vaizcom.github.io/autotests/404//#testresult/3d6d402f6397428c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761912081317,"stop":1761912081317,"duration":0}},{"uid":"19d280106b6b06ad","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/19d280106b6b06ad","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911173029,"stop":1761911173029,"duration":0}},{"uid":"5e45ab32b49fd3eb","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/5e45ab32b49fd3eb","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910801862,"stop":1761910801862,"duration":0}},{"uid":"2b95eae7adfed5fa","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/2b95eae7adfed5fa","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910504203,"stop":1761910504203,"duration":0}},{"uid":"d82be8f2aed424f2","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/d82be8f2aed424f2","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761909867238,"stop":1761909867238,"duration":0}},{"uid":"d5092d3f31b6f1a7","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/d5092d3f31b6f1a7","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761899901162,"stop":1761899901162,"duration":0}},{"uid":"dd77ac04e7ded27c","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/dd77ac04e7ded27c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834950147,"stop":1761834950147,"duration":0}},{"uid":"ec227fb410a35d7b","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/ec227fb410a35d7b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834497908,"stop":1761834497908,"duration":0}},{"uid":"ed1bfa2a70291155","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/ed1bfa2a70291155","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833327548,"stop":1761833327548,"duration":0}},{"uid":"3044ea2b855a0d94","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/3044ea2b855a0d94","status":"passed","time":{"start":1761821502466,"stop":1761821502702,"duration":236}},{"uid":"8ee45a694b56ff22","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/8ee45a694b56ff22","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818627827,"stop":1761818627827,"duration":0}},{"uid":"3adb2f9b96e7aebf","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/3adb2f9b96e7aebf","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748512412,"stop":1761748512412,"duration":0}},{"uid":"f0cf7a25330822e0","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/f0cf7a25330822e0","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747771994,"stop":1761747771994,"duration":0}},{"uid":"d2f231e1c27e9e94","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/d2f231e1c27e9e94","status":"passed","time":{"start":1761746617921,"stop":1761746618250,"duration":329}},{"uid":"e64f535988ef6a69","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/e64f535988ef6a69","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745637284,"stop":1761745637284,"duration":0}},{"uid":"abffc08c5b5088d3","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/abffc08c5b5088d3","status":"passed","time":{"start":1761576493625,"stop":1761576493873,"duration":248}},{"uid":"9fd6a9a2b7aa8609","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/9fd6a9a2b7aa8609","status":"passed","time":{"start":1761557150337,"stop":1761557150571,"duration":234}},{"uid":"b0d8d2cd1646dd30","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/b0d8d2cd1646dd30","status":"passed","time":{"start":1761308374655,"stop":1761308374887,"duration":232}},{"uid":"73d55fc62301ed32","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/73d55fc62301ed32","status":"passed","time":{"start":1761306522474,"stop":1761306522704,"duration":230}},{"uid":"fc4bff4a30ab9bac","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/fc4bff4a30ab9bac","status":"passed","time":{"start":1761136816969,"stop":1761136817216,"duration":247}}]},"tags":["backend"]},"source":"4b7871159cc6979e.json","parameterValues":["'Select'"]}