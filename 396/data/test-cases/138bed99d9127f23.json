{"uid":"138bed99d9127f23","name":"Проверка что все задачи корректно видны в соответствующих milestones.","fullName":"tests.test_backend.task_service.create_task.test_tasks_visibility_in_correct_milestones#test_tasks_visibility_in_correct_milestones","historyId":"e228904596ae0ddba1920f1e6aae5b32","time":{"start":1761833504553,"stop":1761833504770,"duration":217},"description":"\n    Создаём родительскую задачу с milestone parent_ms_1,\n    затем три подзадачи:\n    - первая с milestone subtask_ms_1\n    - вторая с milestone subtask_ms_2\n    - третья без milestone\n    Проверяем, что все задачи корректно видны в соответствующих milestones.\n    ","descriptionHtml":"<pre><code>Создаём родительскую задачу с milestone parent_ms_1,\nзатем три подзадачи:\n- первая с milestone subtask_ms_1\n- вторая с milestone subtask_ms_2\n- третья без milestone\nПроверяем, что все задачи корректно видны в соответствующих milestones.\n</code></pre>\n","status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","statusTrace":"create_task_in_main = <function create_task_in_main.<locals>._create_task at 0x7f7d8b2b2c00>\nowner_client = <tests.core.client.APIClient object at 0x7f7d8b81ce50>\nmain_space = '6866309d85fb8d104544a61e', main_board = '6866731185fb8d104544e826'\n\n    @allure.parent_suite(\"create_task\")\n    @allure.title('Проверка что все задачи корректно видны в соответствующих milestones.')\n    def test_tasks_visibility_in_correct_milestones(create_task_in_main, owner_client, main_space, main_board):\n        \"\"\"\n        Создаём родительскую задачу с milestone parent_ms_1,\n        затем три подзадачи:\n        - первая с milestone subtask_ms_1\n        - вторая с milestone subtask_ms_2\n        - третья без milestone\n        Проверяем, что все задачи корректно видны в соответствующих milestones.\n        \"\"\"\n    \n        created_tasks = []\n    \n        try:\n            # Используем create_parent_and_subtasks для создания задач\n>           task_ids, milestones  = create_parent_and_subtasks(\n                create_task_in_main=create_task_in_main,\n                client_fixture=\"owner_client\",\n                owner_client=owner_client,\n                main_space=main_space,\n                main_board=main_board,\n            )\n\ntests/test_backend/task_service/create_task/test_tasks_visibility_in_correct_milestones.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_backend/task_service/create_task/utils.py:270: in create_parent_and_subtasks\n    parent_ms_1 = get_parent_ms_1(owner_client, main_space, main_board)\ntests/test_backend/task_service/create_task/utils.py:238: in get_parent_ms_1\n    return get_named_milestone_id(client, space_id, board_id, \"parent_ms_1\")\ntests/test_backend/task_service/create_task/utils.py:229: in get_named_milestone_id\n    resp.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/requests/models.py:1024: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1761833315304,"stop":1761833315305,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761833315304,"stop":1761833315304,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761833315305,"stop":1761833315305,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761833315305,"stop":1761833315978,"duration":673},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761833315305,"stop":1761833315305,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1761833319617,"stop":1761833319920,"duration":303},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1761833319920,"stop":1761833320230,"duration":310},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_project","time":{"start":1761833320230,"stop":1761833320472,"duration":242},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_board","time":{"start":1761833324008,"stop":1761833324580,"duration":572},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_task_in_main","time":{"start":1761833504552,"stop":1761833504552,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Создаём родительскую задачу с milestone parent_ms_1,\n    затем три подзадачи:\n    - первая с milestone subtask_ms_1\n    - вторая с milestone subtask_ms_2\n    - третья без milestone\n    Проверяем, что все задачи корректно видны в соответствующих milestones.\n    ","status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","statusTrace":"create_task_in_main = <function create_task_in_main.<locals>._create_task at 0x7f7d8b2b2c00>\nowner_client = <tests.core.client.APIClient object at 0x7f7d8b81ce50>\nmain_space = '6866309d85fb8d104544a61e', main_board = '6866731185fb8d104544e826'\n\n    @allure.parent_suite(\"create_task\")\n    @allure.title('Проверка что все задачи корректно видны в соответствующих milestones.')\n    def test_tasks_visibility_in_correct_milestones(create_task_in_main, owner_client, main_space, main_board):\n        \"\"\"\n        Создаём родительскую задачу с milestone parent_ms_1,\n        затем три подзадачи:\n        - первая с milestone subtask_ms_1\n        - вторая с milestone subtask_ms_2\n        - третья без milestone\n        Проверяем, что все задачи корректно видны в соответствующих milestones.\n        \"\"\"\n    \n        created_tasks = []\n    \n        try:\n            # Используем create_parent_and_subtasks для создания задач\n>           task_ids, milestones  = create_parent_and_subtasks(\n                create_task_in_main=create_task_in_main,\n                client_fixture=\"owner_client\",\n                owner_client=owner_client,\n                main_space=main_space,\n                main_board=main_board,\n            )\n\ntests/test_backend/task_service/create_task/test_tasks_visibility_in_correct_milestones.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_backend/task_service/create_task/utils.py:270: in create_parent_and_subtasks\n    parent_ms_1 = get_parent_ms_1(owner_client, main_space, main_board)\ntests/test_backend/task_service/create_task/utils.py:238: in get_parent_ms_1\n    return get_named_milestone_id(client, space_id, board_id, \"parent_ms_1\")\ntests/test_backend/task_service/create_task/utils.py:229: in get_named_milestone_id\n    resp.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/requests/models.py:1024: HTTPError","steps":[{"name":"Удаление всех созданных задач","time":{"start":1761833504770,"stop":1761833504770,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"create_task"},{"name":"tag","value":"backend"},{"name":"suite","value":"test_tasks_visibility_in_correct_milestones"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2570-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.task_service.create_task.test_tasks_visibility_in_correct_milestones"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":9,"unknown":0,"total":14},"items":[{"uid":"7f5e6421121a4318","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/7f5e6421121a4318","status":"passed","time":{"start":1761822029991,"stop":1761822037580,"duration":7589}},{"uid":"577c28f85bb9a857","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/577c28f85bb9a857","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","time":{"start":1761818790584,"stop":1761818790774,"duration":190}},{"uid":"12929205aa72b063","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/12929205aa72b063","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","time":{"start":1761748650875,"stop":1761748650996,"duration":121}},{"uid":"afb37593b104b40a","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/afb37593b104b40a","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","time":{"start":1761747929316,"stop":1761747929961,"duration":645}},{"uid":"65123ffdb081c00e","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/65123ffdb081c00e","status":"passed","time":{"start":1761747320389,"stop":1761747330173,"duration":9784}},{"uid":"b72911bf981cea6b","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/b72911bf981cea6b","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://vaiz-api-ms.vaiz.dev/v4/GetMilestones","time":{"start":1761745757519,"stop":1761745757645,"duration":126}},{"uid":"82a48909c18e0ce0","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/82a48909c18e0ce0","status":"passed","time":{"start":1761577104055,"stop":1761577111949,"duration":7894}},{"uid":"452f4a8d01a33597","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/452f4a8d01a33597","status":"passed","time":{"start":1761557667736,"stop":1761557674794,"duration":7058}},{"uid":"b05b1211cfbbd239","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/b05b1211cfbbd239","status":"passed","time":{"start":1761308919408,"stop":1761308926966,"duration":7558}},{"uid":"6963148ed79eb4fa","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/6963148ed79eb4fa","status":"passed","time":{"start":1761307100049,"stop":1761307107019,"duration":6970}},{"uid":"72ada36642134d53","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/72ada36642134d53","status":"passed","time":{"start":1761137388974,"stop":1761137396804,"duration":7830}},{"uid":"e4d7497f18fe1be6","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/e4d7497f18fe1be6","status":"passed","time":{"start":1761136135550,"stop":1761136143448,"duration":7898}},{"uid":"d4d84c4d482f1d0e","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/d4d84c4d482f1d0e","status":"passed","time":{"start":1761134508982,"stop":1761134516036,"duration":7054}}]},"tags":["backend"]},"source":"138bed99d9127f23.json","parameterValues":[]}