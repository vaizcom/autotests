{"uid":"8a70421f203af115","name":"test_get_documents_empty_list[project]","fullName":"tests.test_backend.document.test_get_documents#test_get_documents_empty_list","historyId":"d2d581b748935e1f066a713e84f6ed62","time":{"start":1761910008955,"stop":1761910008955,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f7b6371b6d0>\n\n    @pytest.fixture(scope='module')\n    def space_id_module(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:192: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1761909856376,"stop":1761909856376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1761909856376,"stop":1761909856376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761909856376,"stop":1761909856684,"duration":308},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761909856376,"stop":1761909856376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761909856376,"stop":1761909856376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"space_id_module","time":{"start":1761910008955,"stop":1761910009130,"duration":175},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 192, in space_id_module\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_documents"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2551-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_documents"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"fixture_name","value":"'project_id_module'"},{"name":"kind","value":"'Project'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":10,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":50},"items":[{"uid":"bff37425c065c242","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/bff37425c065c242","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900040070,"stop":1761900040070,"duration":0}},{"uid":"a7ecfdee5c68fe07","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/a7ecfdee5c68fe07","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835060274,"stop":1761835060274,"duration":0}},{"uid":"15b9eb5074087b8f","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/15b9eb5074087b8f","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834645336,"stop":1761834645336,"duration":0}},{"uid":"bde298a3c049ea09","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/bde298a3c049ea09","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833481741,"stop":1761833481741,"duration":0}},{"uid":"34d4e3a919762ef9","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/34d4e3a919762ef9","status":"passed","time":{"start":1761821759611,"stop":1761821760456,"duration":845}},{"uid":"5fe69d41519e7cf8","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/5fe69d41519e7cf8","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818769876,"stop":1761818769876,"duration":0}},{"uid":"695ed8355e98942c","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/695ed8355e98942c","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748633202,"stop":1761748633202,"duration":0}},{"uid":"f6f799ebdbd783cb","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/f6f799ebdbd783cb","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747909466,"stop":1761747909466,"duration":0}},{"uid":"1cba0e8b1a035b52","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/1cba0e8b1a035b52","status":"passed","time":{"start":1761746947895,"stop":1761746948641,"duration":746}},{"uid":"c6938ef8a2f2afd8","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/c6938ef8a2f2afd8","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745741346,"stop":1761745741346,"duration":0}},{"uid":"cb6b06412ebba226","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/cb6b06412ebba226","status":"passed","time":{"start":1761576776733,"stop":1761576778460,"duration":1727}},{"uid":"b00076d57575cc9b","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/b00076d57575cc9b","status":"passed","time":{"start":1761557413436,"stop":1761557414106,"duration":670}},{"uid":"985094e6f7388719","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/985094e6f7388719","status":"passed","time":{"start":1761308633401,"stop":1761308634017,"duration":616}},{"uid":"917dc7216c234852","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/917dc7216c234852","status":"passed","time":{"start":1761306797197,"stop":1761306797961,"duration":764}},{"uid":"6ce3e45c7d27831f","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/6ce3e45c7d27831f","status":"passed","time":{"start":1761137092917,"stop":1761137093665,"duration":748}},{"uid":"ea8fb935a3b57da7","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/ea8fb935a3b57da7","status":"passed","time":{"start":1761135779056,"stop":1761135779859,"duration":803}},{"uid":"84ad32765d522d4c","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/84ad32765d522d4c","status":"passed","time":{"start":1761134197081,"stop":1761134197717,"duration":636}},{"uid":"750f648ae324b141","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/750f648ae324b141","status":"passed","time":{"start":1761128573847,"stop":1761128574591,"duration":744}},{"uid":"11dd3d91fbbd5ca4","reportUrl":"https://vaizcom.github.io/autotests/383//#testresult/11dd3d91fbbd5ca4","status":"passed","time":{"start":1761124677957,"stop":1761124678631,"duration":674}},{"uid":"9dc3b0a0679e6c1b","reportUrl":"https://vaizcom.github.io/autotests/382//#testresult/9dc3b0a0679e6c1b","status":"passed","time":{"start":1761119491409,"stop":1761119492128,"duration":719}}]},"tags":["backend"]},"source":"8a70421f203af115.json","parameterValues":["'project_id_module'","'Project'"]}