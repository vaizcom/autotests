{"uid":"b634f8ec5cbd5ff2","name":"test_get_document_invalid_input[short-str]","fullName":"tests.test_backend.document.test_get_document#test_get_document_invalid_input","historyId":"c6b522f8332615cfb42defd5dabf9579","time":{"start":1761900039963,"stop":1761900039963,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f2708f7bf10>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761899890641,"stop":1761899890641,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761899890642,"stop":1761899890642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761899890642,"stop":1761899890642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761899890642,"stop":1761899891240,"duration":598},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761899890642,"stop":1761899890642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761899900632,"stop":1761899900818,"duration":186},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_get_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2554-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_get_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"document_id","value":"'abc'"},{"name":"expected_error_code","value":"'InvalidForm'"},{"name":"expected_status","value":"400"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":49},"items":[{"uid":"4da4756f9114ffb1","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/4da4756f9114ffb1","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835060166,"stop":1761835060166,"duration":0}},{"uid":"49890cdca43504bc","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/49890cdca43504bc","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834645224,"stop":1761834645224,"duration":0}},{"uid":"9d0c3a5ff325f95b","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/9d0c3a5ff325f95b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833481639,"stop":1761833481639,"duration":0}},{"uid":"1228b1d35de1e681","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/1228b1d35de1e681","status":"passed","time":{"start":1761821752470,"stop":1761821752655,"duration":185}},{"uid":"ddd1f641d3d35b14","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/ddd1f641d3d35b14","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818769770,"stop":1761818769770,"duration":0}},{"uid":"a43d8f03ba3840b3","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/a43d8f03ba3840b3","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748633096,"stop":1761748633096,"duration":0}},{"uid":"dc6c7373709c71e0","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/dc6c7373709c71e0","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747909359,"stop":1761747909359,"duration":0}},{"uid":"e4a48303d346ccea","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/e4a48303d346ccea","status":"passed","time":{"start":1761746933414,"stop":1761746933723,"duration":309}},{"uid":"f8a812db4ce99f54","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/f8a812db4ce99f54","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745741239,"stop":1761745741239,"duration":0}},{"uid":"445ea487b1e21949","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/445ea487b1e21949","status":"passed","time":{"start":1761576766344,"stop":1761576766553,"duration":209}},{"uid":"dd6b2c1d4322507b","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/dd6b2c1d4322507b","status":"passed","time":{"start":1761557403023,"stop":1761557403226,"duration":203}},{"uid":"71904f9f490df259","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/71904f9f490df259","status":"passed","time":{"start":1761308624585,"stop":1761308624781,"duration":196}},{"uid":"86adff8202bb33fb","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/86adff8202bb33fb","status":"passed","time":{"start":1761306788626,"stop":1761306788833,"duration":207}},{"uid":"7a2e0510036be8da","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/7a2e0510036be8da","status":"passed","time":{"start":1761137083793,"stop":1761137084006,"duration":213}},{"uid":"9156cd1cd1d693df","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/9156cd1cd1d693df","status":"passed","time":{"start":1761135769352,"stop":1761135769603,"duration":251}},{"uid":"54939f105af9717d","reportUrl":"https://vaizcom.github.io/autotests/385//#testresult/54939f105af9717d","status":"passed","time":{"start":1761134189220,"stop":1761134189417,"duration":197}},{"uid":"3bfa0f9f8af704b9","reportUrl":"https://vaizcom.github.io/autotests/384//#testresult/3bfa0f9f8af704b9","status":"passed","time":{"start":1761128562475,"stop":1761128562734,"duration":259}},{"uid":"7a8d4539678c9d3f","reportUrl":"https://vaizcom.github.io/autotests/383//#testresult/7a8d4539678c9d3f","status":"passed","time":{"start":1761124668012,"stop":1761124668273,"duration":261}},{"uid":"139ca67cbd1eaabf","reportUrl":"https://vaizcom.github.io/autotests/382//#testresult/139ca67cbd1eaabf","status":"passed","time":{"start":1761119478477,"stop":1761119478679,"duration":202}},{"uid":"2132a89c0543e87","reportUrl":"https://vaizcom.github.io/autotests/381//#testresult/2132a89c0543e87","status":"passed","time":{"start":1761053500982,"stop":1761053501177,"duration":195}}]},"tags":["backend"]},"source":"b634f8ec5cbd5ff2.json","parameterValues":["'abc'","'InvalidForm'","400"]}