{"uid":"35c891e7ca0df159","name":"Создание документа с различными значениями title — ожидаемый статус 200","fullName":"tests.test_backend.document.test_create_document#test_document_title_validation","historyId":"f060408fd89aab1df8d032ab11c60957","time":{"start":1761912188217,"stop":1761912188217,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"owner_client = <tests.core.client.APIClient object at 0x7f53e9d25490>\n\n    @pytest.fixture(scope='session')\n    def temp_space(owner_client):\n        client = owner_client\n        name = generate_space_name()\n        response = client.post(**create_space_endpoint(name=name))\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/conftest.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761912073100,"stop":1761912073100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1761912073100,"stop":1761912073571,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"temp_space","time":{"start":1761912080667,"stop":1761912081009,"duration":342},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autotests/autotests/tests/conftest.py\", line 135, in temp_space\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document"},{"name":"suite","value":"test_create_document"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2535-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.test_create_document"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_actual_title","value":"'\uD83D\uDE0A\uD83D\uDCC4✨'"},{"name":"expected_status","value":"200"},{"name":"title","value":"'\uD83D\uDE0A\uD83D\uDCC4✨'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":54},"items":[{"uid":"4e61c64803952209","reportUrl":"https://vaizcom.github.io/autotests/403//#testresult/4e61c64803952209","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761911300159,"stop":1761911300159,"duration":0}},{"uid":"81ac0682f411574b","reportUrl":"https://vaizcom.github.io/autotests/402//#testresult/81ac0682f411574b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910911839,"stop":1761910911839,"duration":0}},{"uid":"8c3a8f2de171bebd","reportUrl":"https://vaizcom.github.io/autotests/401//#testresult/8c3a8f2de171bebd","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910613699,"stop":1761910613699,"duration":0}},{"uid":"3e18276710bee39a","reportUrl":"https://vaizcom.github.io/autotests/400//#testresult/3e18276710bee39a","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761910005560,"stop":1761910005560,"duration":0}},{"uid":"87d628dd7f4f5892","reportUrl":"https://vaizcom.github.io/autotests/399//#testresult/87d628dd7f4f5892","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761900037050,"stop":1761900037050,"duration":0}},{"uid":"357b83b2c8fd0c3e","reportUrl":"https://vaizcom.github.io/autotests/398//#testresult/357b83b2c8fd0c3e","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761835057662,"stop":1761835057662,"duration":0}},{"uid":"e088bb5813b3711b","reportUrl":"https://vaizcom.github.io/autotests/397//#testresult/e088bb5813b3711b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761834642155,"stop":1761834642155,"duration":0}},{"uid":"a765d9163d90f903","reportUrl":"https://vaizcom.github.io/autotests/396//#testresult/a765d9163d90f903","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761833478272,"stop":1761833478272,"duration":0}},{"uid":"aa06db4a8efba99e","reportUrl":"https://vaizcom.github.io/autotests/395//#testresult/aa06db4a8efba99e","status":"passed","time":{"start":1761821716691,"stop":1761821716923,"duration":232}},{"uid":"c14ff68b2354eabc","reportUrl":"https://vaizcom.github.io/autotests/394//#testresult/c14ff68b2354eabc","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761818766533,"stop":1761818766533,"duration":0}},{"uid":"387397647ec0b69b","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/387397647ec0b69b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761748630317,"stop":1761748630317,"duration":0}},{"uid":"a79dd5504ee732d5","reportUrl":"https://vaizcom.github.io/autotests/393//#testresult/a79dd5504ee732d5","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761747905860,"stop":1761747905860,"duration":0}},{"uid":"24b5263c0b121c04","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/24b5263c0b121c04","status":"passed","time":{"start":1761746881312,"stop":1761746881650,"duration":338}},{"uid":"b5d2be9962e5d20b","reportUrl":"https://vaizcom.github.io/autotests/392//#testresult/b5d2be9962e5d20b","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1761745738337,"stop":1761745738337,"duration":0}},{"uid":"4c8ee790295a9f3e","reportUrl":"https://vaizcom.github.io/autotests/391//#testresult/4c8ee790295a9f3e","status":"passed","time":{"start":1761576715764,"stop":1761576716027,"duration":263}},{"uid":"2f6b125d74a3732e","reportUrl":"https://vaizcom.github.io/autotests/390//#testresult/2f6b125d74a3732e","status":"passed","time":{"start":1761557365538,"stop":1761557365793,"duration":255}},{"uid":"4c3f92afa2f18219","reportUrl":"https://vaizcom.github.io/autotests/389//#testresult/4c3f92afa2f18219","status":"passed","time":{"start":1761308589669,"stop":1761308589908,"duration":239}},{"uid":"e7a35066d29144d9","reportUrl":"https://vaizcom.github.io/autotests/388//#testresult/e7a35066d29144d9","status":"passed","time":{"start":1761306751617,"stop":1761306751862,"duration":245}},{"uid":"171e61c80c13cd22","reportUrl":"https://vaizcom.github.io/autotests/387//#testresult/171e61c80c13cd22","status":"passed","time":{"start":1761137044446,"stop":1761137044699,"duration":253}},{"uid":"373c239b370e31ad","reportUrl":"https://vaizcom.github.io/autotests/386//#testresult/373c239b370e31ad","status":"passed","time":{"start":1761135722222,"stop":1761135722528,"duration":306}}]},"tags":["backend"]},"source":"35c891e7ca0df159.json","parameterValues":["'\uD83D\uDE0A\uD83D\uDCC4✨'","200","'\uD83D\uDE0A\uD83D\uDCC4✨'"]}