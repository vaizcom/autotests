{"uid":"6ada82f9cfbbfd2b","name":"Проверка доступа к siblings Space-документа: создатель - owner, просматривающий - guest","fullName":"tests.test_backend.document.access_doc.test_get_siblings_doc_access#test_get_project_and_space_siblings_docs_access_by_roles","historyId":"2cb806c1c89fa89d0e2605e968158f2d","time":{"start":1759767443845,"stop":1759767444955,"duration":1110},"description":"\n    Проверяет доступ к siblings документов при разных комбинациях:\n    - Создателя документа\n    - Просматривающего пользователя\n    - Типа документа (Space/Project)\n\n    Проверки:\n        1. Создание трёх последовательных документов указанной ролью\n        2. Запрос siblings для среднего документа другой ролью\n        3. Проверка статуса ответа и корректности данных siblings\n    ","descriptionHtml":"<pre><code>Проверяет доступ к siblings документов при разных комбинациях:\n- Создателя документа\n- Просматривающего пользователя\n- Типа документа (Space/Project)\n\nПроверки:\n    1. Создание трёх последовательных документов указанной ролью\n    2. Запрос siblings для среднего документа другой ролью\n    3. Проверка статуса ответа и корректности данных siblings\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Некорректный левый сосед\nassert '68e3eb947fd6ea7a1c48e94d' == '68e3eb941140fad5d3ded6f6'\n  \n  - 68e3eb941140fad5d3ded6f6\n  + 68e3eb947fd6ea7a1c48e94d","statusTrace":"request = <FixtureRequest for <Function test_get_project_and_space_siblings_docs_access_by_roles[space_doc-owner_docs_by_guest_403]>>\nmain_space = '6866309d85fb8d104544a61e', creator_fixture = 'owner_client'\nclient_fixture = 'guest_client', expected_status = 200, kind = 'Space'\ncontainer_fixture = 'main_space'\n\n    @pytest.mark.parametrize(\n        'creator_fixture, client_fixture, expected_status',\n        [\n            ('owner_client', 'owner_client', 200),\n            ('owner_client', 'manager_client', 200),\n            ('owner_client', 'member_client', 200),\n            ('owner_client', 'guest_client', 200),\n            ('manager_client', 'owner_client', 200),\n            ('manager_client', 'manager_client', 200),\n            ('manager_client', 'member_client', 200),\n            ('manager_client', 'guest_client', 200),\n            ('member_client', 'owner_client', 200),\n            ('member_client', 'manager_client', 200),\n            ('member_client', 'member_client', 200),\n            ('member_client', 'guest_client', 200),\n        ],\n        ids=[\n            'owner_self_docs_200',\n            'owner_docs_by_manager_403',\n            'owner_docs_by_member_403',\n            'owner_docs_by_guest_403',\n            'manager_docs_by_owner_403',\n            'manager_self_docs_200',\n            'manager_docs_by_member_403',\n            'manager_docs_by_guest_403',\n            'member_docs_by_owner_403',\n            'member_docs_by_manager_403',\n            'member_self_docs_200',\n            'member_docs_by_guest_403',\n        ],\n    )\n    @pytest.mark.parametrize(\n        'kind, container_fixture',\n        [\n            ('Space', 'main_space'),\n            ('Project', 'main_project'),\n        ],\n        ids=['space_doc', 'project_doc'],\n    )\n    def test_get_project_and_space_siblings_docs_access_by_roles(\n        request, main_space, creator_fixture, client_fixture, expected_status, kind, container_fixture\n    ):\n        \"\"\"\n        Проверяет доступ к siblings документов при разных комбинациях:\n        - Создателя документа\n        - Просматривающего пользователя\n        - Типа документа (Space/Project)\n    \n        Проверки:\n            1. Создание трёх последовательных документов указанной ролью\n            2. Запрос siblings для среднего документа другой ролью\n            3. Проверка статуса ответа и корректности данных siblings\n        \"\"\"\n        creator = request.getfixturevalue(creator_fixture)\n        viewer = request.getfixturevalue(client_fixture)\n        creator_role = creator_fixture.replace('_client', '')\n        viewer_role = client_fixture.replace('_client', '')\n        container_id = request.getfixturevalue(container_fixture)\n    \n        current_date = datetime.now().strftime('%d.%m_%H:%M:%S')\n    \n        allure.dynamic.title(\n            f'Проверка доступа к siblings {kind}-документа: создатель - {creator_role}, просматривающий - {viewer_role}'\n        )\n    \n        doc_ids = []\n        with allure.step(f'Создание трёх {kind}-документов пользователем {creator_role}'):\n            for index in range(3):\n                title = f'{current_date}_{creator_role}_{kind}_Doc_{index}'\n                create_resp = creator.post(\n                    **create_document_endpoint(kind=kind, kind_id=container_id, space_id=main_space, title=title)\n                )\n                assert (\n                    create_resp.status_code == 200\n                ), f'Ошибка при создании документа {index}: статус {create_resp.status_code}'\n                doc_id = create_resp.json()['payload']['document']['_id']\n                doc_ids.append(doc_id)\n    \n        middle_doc_id = doc_ids[1]\n        with allure.step(f'Попытка получения siblings для среднего документа пользователем {viewer_role}'):\n            siblings_resp = viewer.post(**get_document_siblings_endpoint(document_id=middle_doc_id, space_id=main_space))\n            assert siblings_resp.status_code == expected_status\n    \n            if siblings_resp.status_code == 200:\n                payload = siblings_resp.json().get('payload', {})\n                with allure.step('Проверка корректности данных siblings'):\n                    # Проверка наличия обязательных полей\n                    assert 'prevSibling' in payload, 'Отсутствует поле prevSibling'\n                    assert 'nextSibling' in payload, 'Отсутствует поле nextSibling'\n                    assert 'tree' in payload, 'Отсутствует поле tree'\n    \n                    # Проверка корректности siblings\n>                   assert payload['prevSibling']['_id'] == doc_ids[0], 'Некорректный левый сосед'\nE                   AssertionError: Некорректный левый сосед\nE                   assert '68e3eb947fd6ea7a1c48e94d' == '68e3eb941140fad5d3ded6f6'\nE                     \nE                     - 68e3eb941140fad5d3ded6f6\nE                     + 68e3eb947fd6ea7a1c48e94d\n\ntests/test_backend/document/access_doc/test_get_siblings_doc_access.py:106: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1759767260767,"stop":1759767260767,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1759767260767,"stop":1759767260767,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1759767260767,"stop":1759767260767,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1759767260767,"stop":1759767260767,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_client","time":{"start":1759767260767,"stop":1759767261300,"duration":533},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_space","time":{"start":1759767261301,"stop":1759767261750,"duration":449},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"owner_client","time":{"start":1759767262154,"stop":1759767262666,"duration":512},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"guest_client","time":{"start":1759767264917,"stop":1759767265384,"duration":467},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Проверяет доступ к siblings документов при разных комбинациях:\n    - Создателя документа\n    - Просматривающего пользователя\n    - Типа документа (Space/Project)\n\n    Проверки:\n        1. Создание трёх последовательных документов указанной ролью\n        2. Запрос siblings для среднего документа другой ролью\n        3. Проверка статуса ответа и корректности данных siblings\n    ","status":"failed","statusMessage":"AssertionError: Некорректный левый сосед\nassert '68e3eb947fd6ea7a1c48e94d' == '68e3eb941140fad5d3ded6f6'\n  \n  - 68e3eb941140fad5d3ded6f6\n  + 68e3eb947fd6ea7a1c48e94d","statusTrace":"request = <FixtureRequest for <Function test_get_project_and_space_siblings_docs_access_by_roles[space_doc-owner_docs_by_guest_403]>>\nmain_space = '6866309d85fb8d104544a61e', creator_fixture = 'owner_client'\nclient_fixture = 'guest_client', expected_status = 200, kind = 'Space'\ncontainer_fixture = 'main_space'\n\n    @pytest.mark.parametrize(\n        'creator_fixture, client_fixture, expected_status',\n        [\n            ('owner_client', 'owner_client', 200),\n            ('owner_client', 'manager_client', 200),\n            ('owner_client', 'member_client', 200),\n            ('owner_client', 'guest_client', 200),\n            ('manager_client', 'owner_client', 200),\n            ('manager_client', 'manager_client', 200),\n            ('manager_client', 'member_client', 200),\n            ('manager_client', 'guest_client', 200),\n            ('member_client', 'owner_client', 200),\n            ('member_client', 'manager_client', 200),\n            ('member_client', 'member_client', 200),\n            ('member_client', 'guest_client', 200),\n        ],\n        ids=[\n            'owner_self_docs_200',\n            'owner_docs_by_manager_403',\n            'owner_docs_by_member_403',\n            'owner_docs_by_guest_403',\n            'manager_docs_by_owner_403',\n            'manager_self_docs_200',\n            'manager_docs_by_member_403',\n            'manager_docs_by_guest_403',\n            'member_docs_by_owner_403',\n            'member_docs_by_manager_403',\n            'member_self_docs_200',\n            'member_docs_by_guest_403',\n        ],\n    )\n    @pytest.mark.parametrize(\n        'kind, container_fixture',\n        [\n            ('Space', 'main_space'),\n            ('Project', 'main_project'),\n        ],\n        ids=['space_doc', 'project_doc'],\n    )\n    def test_get_project_and_space_siblings_docs_access_by_roles(\n        request, main_space, creator_fixture, client_fixture, expected_status, kind, container_fixture\n    ):\n        \"\"\"\n        Проверяет доступ к siblings документов при разных комбинациях:\n        - Создателя документа\n        - Просматривающего пользователя\n        - Типа документа (Space/Project)\n    \n        Проверки:\n            1. Создание трёх последовательных документов указанной ролью\n            2. Запрос siblings для среднего документа другой ролью\n            3. Проверка статуса ответа и корректности данных siblings\n        \"\"\"\n        creator = request.getfixturevalue(creator_fixture)\n        viewer = request.getfixturevalue(client_fixture)\n        creator_role = creator_fixture.replace('_client', '')\n        viewer_role = client_fixture.replace('_client', '')\n        container_id = request.getfixturevalue(container_fixture)\n    \n        current_date = datetime.now().strftime('%d.%m_%H:%M:%S')\n    \n        allure.dynamic.title(\n            f'Проверка доступа к siblings {kind}-документа: создатель - {creator_role}, просматривающий - {viewer_role}'\n        )\n    \n        doc_ids = []\n        with allure.step(f'Создание трёх {kind}-документов пользователем {creator_role}'):\n            for index in range(3):\n                title = f'{current_date}_{creator_role}_{kind}_Doc_{index}'\n                create_resp = creator.post(\n                    **create_document_endpoint(kind=kind, kind_id=container_id, space_id=main_space, title=title)\n                )\n                assert (\n                    create_resp.status_code == 200\n                ), f'Ошибка при создании документа {index}: статус {create_resp.status_code}'\n                doc_id = create_resp.json()['payload']['document']['_id']\n                doc_ids.append(doc_id)\n    \n        middle_doc_id = doc_ids[1]\n        with allure.step(f'Попытка получения siblings для среднего документа пользователем {viewer_role}'):\n            siblings_resp = viewer.post(**get_document_siblings_endpoint(document_id=middle_doc_id, space_id=main_space))\n            assert siblings_resp.status_code == expected_status\n    \n            if siblings_resp.status_code == 200:\n                payload = siblings_resp.json().get('payload', {})\n                with allure.step('Проверка корректности данных siblings'):\n                    # Проверка наличия обязательных полей\n                    assert 'prevSibling' in payload, 'Отсутствует поле prevSibling'\n                    assert 'nextSibling' in payload, 'Отсутствует поле nextSibling'\n                    assert 'tree' in payload, 'Отсутствует поле tree'\n    \n                    # Проверка корректности siblings\n>                   assert payload['prevSibling']['_id'] == doc_ids[0], 'Некорректный левый сосед'\nE                   AssertionError: Некорректный левый сосед\nE                   assert '68e3eb947fd6ea7a1c48e94d' == '68e3eb941140fad5d3ded6f6'\nE                     \nE                     - 68e3eb941140fad5d3ded6f6\nE                     + 68e3eb947fd6ea7a1c48e94d\n\ntests/test_backend/document/access_doc/test_get_siblings_doc_access.py:106: AssertionError","steps":[{"name":"Создание трёх Space-документов пользователем owner","time":{"start":1759767443845,"stop":1759767444760,"duration":915},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Попытка получения siblings для среднего документа пользователем guest","time":{"start":1759767444760,"stop":1759767444954,"duration":194},"status":"failed","statusMessage":"AssertionError: Некорректный левый сосед\nassert '68e3eb947fd6ea7a1c48e94d' == '68e3eb941140fad5d3ded6f6'\n  \n  - 68e3eb941140fad5d3ded6f6\n  + 68e3eb947fd6ea7a1c48e94d\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/document/access_doc/test_get_siblings_doc_access.py\", line 106, in test_get_project_and_space_siblings_docs_access_by_roles\n    assert payload['prevSibling']['_id'] == doc_ids[0], 'Некорректный левый сосед'\n","steps":[{"name":"Проверка корректности данных siblings","time":{"start":1759767444954,"stop":1759767444954,"duration":0},"status":"failed","statusMessage":"AssertionError: Некорректный левый сосед\nassert '68e3eb947fd6ea7a1c48e94d' == '68e3eb941140fad5d3ded6f6'\n  \n  - 68e3eb941140fad5d3ded6f6\n  + 68e3eb947fd6ea7a1c48e94d\n","statusTrace":"  File \"/home/runner/work/autotests/autotests/tests/test_backend/document/access_doc/test_get_siblings_doc_access.py\", line 106, in test_get_project_and_space_siblings_docs_access_by_roles\n    assert payload['prevSibling']['_id'] == doc_ids[0], 'Некорректный левый сосед'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"parentSuite","value":"tests.test_backend.document.access_doc"},{"name":"suite","value":"test_get_siblings_doc_access"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2672-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_backend.document.access_doc.test_get_siblings_doc_access"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"client_fixture","value":"'guest_client'"},{"name":"container_fixture","value":"'main_space'"},{"name":"creator_fixture","value":"'owner_client'"},{"name":"expected_status","value":"200"},{"name":"kind","value":"'Space'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":1,"skipped":0,"passed":32,"unknown":0,"total":34},"items":[{"uid":"c509aa029c42ed6d","reportUrl":"https://vaizcom.github.io/autotests/341//#testresult/c509aa029c42ed6d","status":"passed","time":{"start":1759753902387,"stop":1759753904229,"duration":1842}},{"uid":"c3b709a35fb8616e","reportUrl":"https://vaizcom.github.io/autotests/340//#testresult/c3b709a35fb8616e","status":"passed","time":{"start":1759743865808,"stop":1759743867689,"duration":1881}},{"uid":"cc14564769e089d1","reportUrl":"https://vaizcom.github.io/autotests/339//#testresult/cc14564769e089d1","status":"broken","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='api.vaiz.dev', port=443): Max retries exceeded with url: /v4/Login (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7fb5f6e8f010>, 'Connection to api.vaiz.dev timed out. (connect timeout=None)'))","time":{"start":1759485533568,"stop":1759485533568,"duration":0}},{"uid":"b12068f047c9eccd","reportUrl":"https://vaizcom.github.io/autotests/338//#testresult/b12068f047c9eccd","status":"passed","time":{"start":1759232491525,"stop":1759232493476,"duration":1951}},{"uid":"db2fbfa380751aee","reportUrl":"https://vaizcom.github.io/autotests/337//#testresult/db2fbfa380751aee","status":"passed","time":{"start":1759140772933,"stop":1759140774870,"duration":1937}},{"uid":"49774d3659a58f72","reportUrl":"https://vaizcom.github.io/autotests/335//#testresult/49774d3659a58f72","status":"passed","time":{"start":1758891841568,"stop":1758891844002,"duration":2434}},{"uid":"2f3f730e1c157798","reportUrl":"https://vaizcom.github.io/autotests/334//#testresult/2f3f730e1c157798","status":"passed","time":{"start":1758807792251,"stop":1758807795281,"duration":3030}},{"uid":"906ee16f963582b1","reportUrl":"https://vaizcom.github.io/autotests/333//#testresult/906ee16f963582b1","status":"passed","time":{"start":1758806666297,"stop":1758806669209,"duration":2912}},{"uid":"a1fe369f8998723b","reportUrl":"https://vaizcom.github.io/autotests/332//#testresult/a1fe369f8998723b","status":"passed","time":{"start":1758791246082,"stop":1758791248386,"duration":2304}},{"uid":"9bb7bdfa5caf94d6","reportUrl":"https://vaizcom.github.io/autotests/331//#testresult/9bb7bdfa5caf94d6","status":"passed","time":{"start":1758540557176,"stop":1758540559216,"duration":2040}},{"uid":"a1c183f883890969","reportUrl":"https://vaizcom.github.io/autotests/330//#testresult/a1c183f883890969","status":"passed","time":{"start":1758289185434,"stop":1758289187995,"duration":2561}},{"uid":"3612e4610a4a2017","reportUrl":"https://vaizcom.github.io/autotests/329//#testresult/3612e4610a4a2017","status":"passed","time":{"start":1755852358501,"stop":1755852360489,"duration":1988}},{"uid":"6ef7fc81ea325ea7","reportUrl":"https://vaizcom.github.io/autotests/328//#testresult/6ef7fc81ea325ea7","status":"passed","time":{"start":1755851866643,"stop":1755851868763,"duration":2120}},{"uid":"7d286863d3b65cbd","reportUrl":"https://vaizcom.github.io/autotests/327//#testresult/7d286863d3b65cbd","status":"passed","time":{"start":1755848005020,"stop":1755848007689,"duration":2669}},{"uid":"947aa3e78833c2a0","reportUrl":"https://vaizcom.github.io/autotests/326//#testresult/947aa3e78833c2a0","status":"passed","time":{"start":1755777870333,"stop":1755777872267,"duration":1934}},{"uid":"9dfa1bffa3f58ed9","reportUrl":"https://vaizcom.github.io/autotests/325//#testresult/9dfa1bffa3f58ed9","status":"passed","time":{"start":1755774508614,"stop":1755774510620,"duration":2006}},{"uid":"bcba81de5795356e","reportUrl":"https://vaizcom.github.io/autotests/324//#testresult/bcba81de5795356e","status":"passed","time":{"start":1755694638125,"stop":1755694640369,"duration":2244}},{"uid":"a54a54d7926307bb","reportUrl":"https://vaizcom.github.io/autotests/323//#testresult/a54a54d7926307bb","status":"passed","time":{"start":1755694069931,"stop":1755694072562,"duration":2631}},{"uid":"d5395eb1ad08fa4d","reportUrl":"https://vaizcom.github.io/autotests/322//#testresult/d5395eb1ad08fa4d","status":"passed","time":{"start":1755687141249,"stop":1755687143127,"duration":1878}},{"uid":"6c198d165c22ac97","reportUrl":"https://vaizcom.github.io/autotests/321//#testresult/6c198d165c22ac97","status":"passed","time":{"start":1755682888380,"stop":1755682890272,"duration":1892}}]},"tags":["backend"]},"source":"6ada82f9cfbbfd2b.json","parameterValues":["'guest_client'","'main_space'","'owner_client'","200","'Space'"]}